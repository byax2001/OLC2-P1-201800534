Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INSTRUCCIONES_RUST
Rule 2     INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST
Rule 3     INSTRUCCIONES_RUST -> INST_RUST
Rule 4     INST_RUST -> MODULO
Rule 5     INST_RUST -> FUNCION
Rule 6     INST_RUST -> STRUCT
Rule 7     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 8     INSTRUCCIONES -> INSTRUCCION
Rule 9     INSTRUCCION -> PRINT puntoycoma
Rule 10    INSTRUCCION -> DECLARACION puntoycoma
Rule 11    INSTRUCCION -> ASIGNACION puntoycoma
Rule 12    INSTRUCCION -> IF
Rule 13    INSTRUCCION -> MATCH
Rule 14    INSTRUCCION -> CONTINUE puntoycoma
Rule 15    INSTRUCCION -> RETURN puntoycoma
Rule 16    INSTRUCCION -> BREAK puntoycoma
Rule 17    INSTRUCCION -> WHILE
Rule 18    INSTRUCCION -> EXPRESION
Rule 19    INSTRUCCION -> CALL puntoycoma
Rule 20    INSTRUCCION -> FUNCION
Rule 21    INSTRUCCION -> DECVECTOR puntoycoma
Rule 22    INSTRUCCION -> PUSH puntoycoma
Rule 23    INSTRUCCION -> INSERT puntoycoma
Rule 24    INSTRUCCION -> DECARREGLO puntoycoma
Rule 25    INSTRUCCION -> FORIN
Rule 26    INSTRUCCION -> STRUCT
Rule 27    INSTRUCCION -> DECSTRUCT puntoycoma
Rule 28    INSTRUCCION -> MOD_VAR_STRUCT puntoycoma
Rule 29    INSTRUCCION -> REMOVE puntoycoma
Rule 30    INSTRUCCION -> MODULO
Rule 31    INSTRUCCION -> ACCESO_MOD puntoycoma
Rule 32    EXPRESION -> EXPRESION mas EXPRESION
Rule 33    EXPRESION -> EXPRESION menos EXPRESION
Rule 34    EXPRESION -> EXPRESION div EXPRESION
Rule 35    EXPRESION -> EXPRESION multi EXPRESION
Rule 36    EXPRESION -> EXPRESION mod EXPRESION
Rule 37    EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
Rule 38    EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
Rule 39    EXPRESION -> menos EXPRESION
Rule 40    EXPRESION -> EXPRESION mayor EXPRESION
Rule 41    EXPRESION -> EXPRESION menor EXPRESION
Rule 42    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 43    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 44    EXPRESION -> EXPRESION igualigual EXPRESION
Rule 45    EXPRESION -> EXPRESION diferente EXPRESION
Rule 46    EXPRESION -> EXPRESION and EXPRESION
Rule 47    EXPRESION -> EXPRESION or EXPRESION
Rule 48    EXPRESION -> not EXPRESION
Rule 49    EXPRESION -> para EXPRESION parc
Rule 50    EXPRESION -> TIPODATO
Rule 51    EXPRESION -> ID
Rule 52    EXPRESION -> IF_TER
Rule 53    EXPRESION -> MATCH_TER
Rule 54    EXPRESION -> LOOP
Rule 55    EXPRESION -> CAST_AS
Rule 56    EXPRESION -> ABS
Rule 57    EXPRESION -> CLONE
Rule 58    EXPRESION -> SQRT
Rule 59    EXPRESION -> TO_STRING_OWNED
Rule 60    EXPRESION -> CALL
Rule 61    EXPRESION -> REMOVE
Rule 62    EXPRESION -> CONTAINS
Rule 63    EXPRESION -> LEN
Rule 64    EXPRESION -> CAPACITY
Rule 65    EXPRESION -> ACCESVEC
Rule 66    EXPRESION -> ACCESO_STRUCT
Rule 67    EXPRESION -> ACCESO_MOD
Rule 68    CONJEXP -> CONJEXP coma ELCONJ
Rule 69    CONJEXP -> ELCONJ
Rule 70    ELCONJ -> ampersand ELCONJ
Rule 71    ELCONJ -> EXPRESION
Rule 72    ELCONJ -> VECI
Rule 73    ELCONJ -> ARREGLO
Rule 74    ELCONJ -> ampersand mut EXPRESION
Rule 75    TIPODATO -> entero
Rule 76    TIPODATO -> decimal
Rule 77    TIPODATO -> cadena
Rule 78    TIPODATO -> true
Rule 79    TIPODATO -> false
Rule 80    ID -> id
Rule 81    TIPODATO -> caracter
Rule 82    TIPOVAR -> i64
Rule 83    TIPOVAR -> f64
Rule 84    TIPOVAR -> bool
Rule 85    TIPOVAR -> string
Rule 86    TIPOVAR -> char
Rule 87    TIPOVAR -> str
Rule 88    TIPOVAR -> usize
Rule 89    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
Rule 90    IF_TER -> if EXPRESION llavea EXPRESION llavec
Rule 91    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
Rule 92    IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
Rule 93    IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
Rule 94    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
Rule 95    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
Rule 96    IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER
Rule 97    MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
Rule 98    MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
Rule 99    BRAZOS_TER -> BRAZOS_TER BRAZO_TER
Rule 100   BRAZOS_TER -> BRAZO_TER
Rule 101   BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma
Rule 102   CAST_AS -> EXPRESION as TIPOVAR
Rule 103   ABS -> EXPRESION punto abs para parc
Rule 104   ABS -> id punto abs para parc
Rule 105   CLONE -> EXPRESION punto clone para parc
Rule 106   CLONE -> id punto clone para parc
Rule 107   CLONE -> id INDEXS punto clone para parc
Rule 108   SQRT -> EXPRESION punto sqrt para parc
Rule 109   SQRT -> id punto sqrt para parc
Rule 110   TO_STRING_OWNED -> EXPRESION punto toString para parc
Rule 111   TO_STRING_OWNED -> EXPRESION punto toOwned para parc
Rule 112   TO_STRING_OWNED -> id punto toString para parc
Rule 113   TO_STRING_OWNED -> id punto toOwned para parc
Rule 114   PRINT -> println para EXPRESION parc
Rule 115   PRINT -> println para EXPRESION coma CONJEXP parc
Rule 116   DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION
Rule 117   DECLARACION -> let mut id igual EXPRESION
Rule 118   DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION
Rule 119   DECLARACION -> let id igual EXPRESION
Rule 120   DECLARACION -> let mut id dospuntos TIPOVAR
Rule 121   ASIGNACION -> id igual EXPRESION
Rule 122   ASIGNACION -> id INDEXS igual EXPRESION
Rule 123   ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION
Rule 124   ASIGNACION -> id igual Vec dospuntos dospuntos new para parc
Rule 125   ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
Rule 126   IF -> if EXPRESION BLOQUE_INST
Rule 127   IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST
Rule 128   IF -> if EXPRESION BLOQUE_INST else IF
Rule 129   MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
Rule 130   MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
Rule 131   MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
Rule 132   MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
Rule 133   INSTRUCCION_1LINE -> PRINT
Rule 134   INSTRUCCION_1LINE -> DECLARACION
Rule 135   INSTRUCCION_1LINE -> ASIGNACION
Rule 136   INSTRUCCION_1LINE -> PUSH
Rule 137   INSTRUCCION_1LINE -> INSERT
Rule 138   INSTRUCCION_1LINE -> DECARREGLO
Rule 139   INSTRUCCION_1LINE -> DECVECTOR
Rule 140   INSTRUCCION_1LINE -> DECSTRUCT
Rule 141   INSTRUCCION_1LINE -> MOD_VAR_STRUCT
Rule 142   BRAZOS -> BRAZOS BRAZO
Rule 143   BRAZOS -> BRAZO
Rule 144   BRAZO -> CONJEXPM igual mayor BLOQUE_INST
Rule 145   BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma
Rule 146   CONJEXPM -> CONJEXPM bvertical EXPRESION
Rule 147   CONJEXPM -> EXPRESION
Rule 148   LOOP -> loop BLOQUE_INST
Rule 149   BREAK -> break
Rule 150   BREAK -> break EXPRESION
Rule 151   CONTINUE -> continue
Rule 152   RETURN -> return EXPRESION
Rule 153   RETURN -> return
Rule 154   WHILE -> while EXPRESION BLOQUE_INST
Rule 155   BLOQUE_INST -> llavea INSTRUCCIONES llavec
Rule 156   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
Rule 157   FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST
Rule 158   FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST
Rule 159   FUNCION -> fn id para parc BLOQUE_INST
Rule 160   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
Rule 161   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
Rule 162   LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO
Rule 163   LISTAPARAMETROS -> PARAMETRO
Rule 164   PARAMETRO -> id dospuntos TIPOVAR
Rule 165   PARAMETRO -> mut id dospuntos TIPOVAR
Rule 166   PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc
Rule 167   PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR
Rule 168   PARAMETRO -> id dospuntos ampersand mut VEC
Rule 169   PARAMETRO -> mut id dospuntos ampersand VEC
Rule 170   PARAMETRO -> id dospuntos VEC
Rule 171   PARAMETRO -> mut id dospuntos VEC
Rule 172   CALL -> id para CONJEXP parc
Rule 173   CALL -> id para parc
Rule 174   DECVECTOR -> let id igual VECI
Rule 175   DECVECTOR -> let mut id igual VECI
Rule 176   DECVECTOR -> let id dospuntos VEC igual VECI
Rule 177   DECVECTOR -> let mut id dospuntos VEC igual VECI
Rule 178   DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
Rule 179   DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
Rule 180   DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC
Rule 181   DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC
Rule 182   VEC -> Vec menor VEC mayor
Rule 183   VEC -> Vec menor TIPOVAR mayor
Rule 184   VEC -> Vec menor CONJ_ACCES_MOD mayor
Rule 185   VECI -> vecI cora CONJVECI corc
Rule 186   VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc
Rule 187   CONJVECI -> CONJVECI coma ELVEC
Rule 188   CONJVECI -> ELVEC
Rule 189   ELVEC -> EXPRESION
Rule 190   ELVEC -> VECI
Rule 191   FUNCVEC -> new para parc
Rule 192   FUNCVEC -> withcapacity para EXPRESION parc
Rule 193   PUSH -> id punto push para EXPRESION parc
Rule 194   PUSH -> id punto push para VECI parc
Rule 195   INSERT -> id punto insert para EXPRESION coma EXPRESION parc
Rule 196   REMOVE -> id punto remove para EXPRESION parc
Rule 197   CONTAINS -> id punto contains para ampersand EXPRESION parc
Rule 198   LEN -> EXPRESION punto len para parc
Rule 199   LEN -> id INDEXS punto len para parc
Rule 200   LEN -> id punto len para parc
Rule 201   CAPACITY -> id punto capacity para parc
Rule 202   ACCESVEC -> id INDEXS
Rule 203   ACCESVEC -> id INDEXS punto CONJ_ACCES
Rule 204   INDEXS -> INDEXS cora EXPRESION corc
Rule 205   INDEXS -> cora EXPRESION corc
Rule 206   DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO
Rule 207   DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO
Rule 208   DECARREGLO -> let id igual ARREGLO
Rule 209   DECARREGLO -> let mut id igual ARREGLO
Rule 210   DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc
Rule 211   DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc
Rule 212   DIMENSION_ARR -> cora id puntoycoma EXPRESION corc
Rule 213   ARREGLO -> cora CONT_ARR corc
Rule 214   ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc
Rule 215   CONT_ARR -> CONT_ARR coma ELARR
Rule 216   CONT_ARR -> ELARR
Rule 217   ELARR -> ARREGLO
Rule 218   ELARR -> EXPRESION
Rule 219   ELARR -> STRUCT_EXP
Rule 220   FORIN -> for id in ARRFOR BLOQUE_INST
Rule 221   ARRFOR -> CHARS
Rule 222   ARRFOR -> ARREGLO
Rule 223   ARRFOR -> VECI
Rule 224   ARRFOR -> RANGO
Rule 225   ARRFOR -> ID
Rule 226   CHARS -> EXPRESION punto chars para parc
Rule 227   CHARS -> id punto chars para parc
Rule 228   RANGO -> EXPRESION punto punto EXPRESION
Rule 229   STRUCT -> struct id llavea CONTENT_STRUCT llavec
Rule 230   CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT
Rule 231   CONTENT_STRUCT -> ELSTRUCT
Rule 232   ELSTRUCT -> pub ELSTRUCT
Rule 233   ELSTRUCT -> id dospuntos TIPOVAR
Rule 234   ELSTRUCT -> id dospuntos id
Rule 235   DECSTRUCT -> let id igual STRUCT_EXP
Rule 236   DECSTRUCT -> let mut id igual STRUCT_EXP
Rule 237   DECSTRUCT -> let id dospuntos id igual STRUCT_EXP
Rule 238   DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP
Rule 239   STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec
Rule 240   CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT
Rule 241   CONJEXP_STRUCT -> EXSTRUCT
Rule 242   EXSTRUCT -> id dospuntos EXPRESION
Rule 243   ACCESO_STRUCT -> id punto CONJ_ACCES
Rule 244   CONJ_ACCES -> CONJ_ACCES punto id
Rule 245   CONJ_ACCES -> id
Rule 246   MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION
Rule 247   MODULO -> modulo id llavea CONTENT_MOD llavec
Rule 248   CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD
Rule 249   CONTENT_MOD -> ELEMENT_MOD
Rule 250   ELEMENT_MOD -> pub INST_MOD
Rule 251   ELEMENT_MOD -> INST_MOD
Rule 252   INST_MOD -> FUNCION
Rule 253   INST_MOD -> MODULO
Rule 254   INST_MOD -> STRUCT
Rule 255   INST_MOD -> DECLARACION
Rule 256   INST_MOD -> DECARREGLO
Rule 257   INST_MOD -> DECVECTOR
Rule 258   INST_MOD -> DECSTRUCT
Rule 259   ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
Rule 260   ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc
Rule 261   CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id
Rule 262   CONJ_ACCES_MOD -> id

Terminals, with rules where they appear

Vec                  : 124 125 178 179 180 181 182 183 184
abs                  : 103 104
ampersand            : 70 74 166 167 168 169 197
and                  : 46
as                   : 102
bool                 : 84
break                : 149 150
bvertical            : 146
cadena               : 77
capacity             : 201
caracter             : 81
char                 : 86
chars                : 226 227
clone                : 105 106 107
coma                 : 37 38 68 97 98 101 115 131 132 145 162 187 195 215 230 240
contains             : 197
continue             : 151
cora                 : 166 185 186 204 205 210 211 212 213 214
corc                 : 166 185 186 204 205 210 211 212 213 214
decimal              : 76
diferente            : 45
div                  : 34
dospuntos            : 37 37 38 38 116 118 120 124 124 125 125 164 165 166 167 168 169 170 171 176 177 178 178 178 179 179 179 180 180 181 181 206 207 233 234 237 238 242 259 259 260 260 261 261
else                 : 91 92 93 94 95 96 127 128
entero               : 75
error                : 
f64                  : 38 83
false                : 79
fn                   : 156 157 158 159 160 161
for                  : 220
guionbajo            : 97 98 129 130 131 132
i64                  : 37 82
id                   : 80 104 106 107 109 112 113 116 117 118 119 120 121 122 123 124 125 156 157 158 159 160 160 161 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 193 194 195 196 197 199 200 201 202 203 206 207 208 209 212 220 227 229 233 234 234 235 236 237 237 238 238 239 242 243 244 245 246 247 259 260 261 262
if                   : 89 90 91 92 93 94 95 96 126 127 128
igual                : 97 98 101 116 117 118 119 121 122 123 124 125 129 130 131 132 144 145 174 175 176 177 178 179 180 181 206 207 208 209 235 236 237 238 246
igualigual           : 44
in                   : 220
insert               : 195
len                  : 198 199 200
let                  : 116 117 118 119 120 174 175 176 177 178 179 180 181 206 207 208 209 235 236 237 238
llavea               : 89 90 91 91 92 92 93 93 94 94 95 96 97 98 129 130 131 132 155 229 239 247
llavec               : 89 90 91 91 92 92 93 93 94 94 95 96 97 98 129 130 131 132 155 229 239 247
loop                 : 148
mas                  : 32
match                : 97 98 129 130 131 132
mayor                : 40 97 98 101 129 130 131 132 144 145 156 158 160 161 182 183 184
mayorigual           : 42
menor                : 41 182 183 184
menorigual           : 43
menos                : 33 39 156 158 160 161
mod                  : 36
modulo               : 247
multi                : 35
mut                  : 74 116 117 120 165 166 167 168 169 171 175 177 179 181 207 209 236 238
new                  : 124 191
not                  : 48
or                   : 47
para                 : 37 38 49 103 104 105 106 107 108 109 110 111 112 113 114 115 124 125 156 157 158 159 160 161 172 173 191 192 193 194 195 196 197 198 199 200 201 226 227 259 260
parc                 : 37 38 49 103 104 105 106 107 108 109 110 111 112 113 114 115 124 125 156 157 158 159 160 161 172 173 191 192 193 194 195 196 197 198 199 200 201 226 227 259 260
pow                  : 37
powf                 : 38
println              : 114 115
pub                  : 232 250
punto                : 103 104 105 106 107 108 109 110 111 112 113 123 193 194 195 196 197 198 199 200 201 203 226 227 228 228 243 244 246
puntoycoma           : 9 10 11 14 15 16 19 21 22 23 24 27 28 29 31 186 210 211 212 214
push                 : 193 194
remove               : 196
return               : 152 153
sqrt                 : 108 109
str                  : 87
string               : 85
struct               : 229
toOwned              : 111 113
toString             : 110 112
true                 : 78
usize                : 88
vecI                 : 185 186
while                : 154
withcapacity         : 125 192

Nonterminals, with rules where they appear

ABS                  : 56
ACCESO_MOD           : 31 67
ACCESO_STRUCT        : 66
ACCESVEC             : 65
ARREGLO              : 73 206 207 208 209 217 222
ARRFOR               : 220
ASIGNACION           : 11 135
BLOQUE_INST          : 126 127 127 128 129 130 144 148 154 156 157 158 159 160 161 220
BRAZO                : 142 143
BRAZOS               : 129 131 142
BRAZOS_TER           : 97 99
BRAZO_TER            : 99 100
BREAK                : 16
CALL                 : 19 60
CAPACITY             : 64
CAST_AS              : 55
CHARS                : 221
CLONE                : 57
CONJEXP              : 68 115 172 259
CONJEXPM             : 101 144 145 146
CONJEXP_STRUCT       : 239 240
CONJVECI             : 185 187
CONJ_ACCES           : 123 203 243 244 246
CONJ_ACCES_MOD       : 184 259 260 261
CONTAINS             : 62
CONTENT_MOD          : 247 248
CONTENT_STRUCT       : 229 230
CONTINUE             : 14
CONT_ARR             : 213 215
DECARREGLO           : 24 138 256
DECLARACION          : 10 134 255
DECSTRUCT            : 27 140 258
DECVECTOR            : 21 139 257
DIMENSION_ARR        : 167 206 207 210
ELARR                : 215 216
ELCONJ               : 68 69 70
ELEMENT_MOD          : 248 249
ELSTRUCT             : 230 231 232
ELVEC                : 187 188
EXPRESION            : 18 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 71 74 89 89 90 90 91 91 91 92 92 92 93 93 93 94 94 94 95 95 96 96 97 97 98 98 101 102 103 105 108 110 111 114 115 116 117 118 119 121 122 123 125 126 127 128 129 130 131 132 146 147 150 152 154 186 186 189 192 193 195 195 196 197 198 204 205 210 211 212 214 214 218 226 228 228 242 246
EXSTRUCT             : 240 241
FORIN                : 25
FUNCION              : 5 20 252
FUNCVEC              : 178 179 180 181
ID                   : 51 225
IF                   : 12 128
IF_TER               : 52 95 96
INDEXS               : 107 122 123 199 202 203 204
INICIO               : 0
INSERT               : 23 137
INSTRUCCION          : 7 8
INSTRUCCIONES        : 7 89 91 91 93 94 95 155
INSTRUCCIONES_RUST   : 1 2
INSTRUCCION_1LINE    : 131 132 145
INST_MOD             : 250 251
INST_RUST            : 2 3
LEN                  : 63
LISTAPARAMETROS      : 156 157 160 161 162
LOOP                 : 54
MATCH                : 13
MATCH_TER            : 53
MODULO               : 4 30 253
MOD_VAR_STRUCT       : 28 141
PARAMETRO            : 162 163
PRINT                : 9 133
PUSH                 : 22 136
RANGO                : 224
REMOVE               : 29 61
RETURN               : 15
SQRT                 : 58
STRUCT               : 6 26 254
STRUCT_EXP           : 219 235 236 237 238
TIPODATO             : 50
TIPOVAR              : 102 116 118 120 156 158 164 165 166 183 211 233
TO_STRING_OWNED      : 59
VEC                  : 161 168 169 170 171 176 177 178 179 182
VECI                 : 72 174 175 176 177 190 194 223
WHILE                : 17

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INSTRUCCIONES_RUST
    (2) INSTRUCCIONES_RUST -> . INSTRUCCIONES_RUST INST_RUST
    (3) INSTRUCCIONES_RUST -> . INST_RUST
    (4) INST_RUST -> . MODULO
    (5) INST_RUST -> . FUNCION
    (6) INST_RUST -> . STRUCT
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec

    modulo          shift and go to state 7
    fn              shift and go to state 8
    struct          shift and go to state 9

    INICIO                         shift and go to state 1
    INSTRUCCIONES_RUST             shift and go to state 2
    INST_RUST                      shift and go to state 3
    MODULO                         shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> INSTRUCCIONES_RUST .
    (2) INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST . INST_RUST
    (4) INST_RUST -> . MODULO
    (5) INST_RUST -> . FUNCION
    (6) INST_RUST -> . STRUCT
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec

    $end            reduce using rule 1 (INICIO -> INSTRUCCIONES_RUST .)
    modulo          shift and go to state 7
    fn              shift and go to state 8
    struct          shift and go to state 9

    INST_RUST                      shift and go to state 10
    MODULO                         shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6

state 3

    (3) INSTRUCCIONES_RUST -> INST_RUST .

    modulo          reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    fn              reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    struct          reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    $end            reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)


state 4

    (4) INST_RUST -> MODULO .

    modulo          reduce using rule 4 (INST_RUST -> MODULO .)
    fn              reduce using rule 4 (INST_RUST -> MODULO .)
    struct          reduce using rule 4 (INST_RUST -> MODULO .)
    $end            reduce using rule 4 (INST_RUST -> MODULO .)


state 5

    (5) INST_RUST -> FUNCION .

    modulo          reduce using rule 5 (INST_RUST -> FUNCION .)
    fn              reduce using rule 5 (INST_RUST -> FUNCION .)
    struct          reduce using rule 5 (INST_RUST -> FUNCION .)
    $end            reduce using rule 5 (INST_RUST -> FUNCION .)


state 6

    (6) INST_RUST -> STRUCT .

    modulo          reduce using rule 6 (INST_RUST -> STRUCT .)
    fn              reduce using rule 6 (INST_RUST -> STRUCT .)
    struct          reduce using rule 6 (INST_RUST -> STRUCT .)
    $end            reduce using rule 6 (INST_RUST -> STRUCT .)


state 7

    (247) MODULO -> modulo . id llavea CONTENT_MOD llavec

    id              shift and go to state 11


state 8

    (156) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> fn . id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> fn . id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> fn . id para parc BLOQUE_INST
    (160) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST

    id              shift and go to state 12


state 9

    (229) STRUCT -> struct . id llavea CONTENT_STRUCT llavec

    id              shift and go to state 13


state 10

    (2) INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .

    modulo          reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    fn              reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    struct          reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    $end            reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)


state 11

    (247) MODULO -> modulo id . llavea CONTENT_MOD llavec

    llavea          shift and go to state 14


state 12

    (156) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> fn id . para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> fn id . para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> fn id . para parc BLOQUE_INST
    (160) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST

    para            shift and go to state 15


state 13

    (229) STRUCT -> struct id . llavea CONTENT_STRUCT llavec

    llavea          shift and go to state 16


state 14

    (247) MODULO -> modulo id llavea . CONTENT_MOD llavec
    (248) CONTENT_MOD -> . CONTENT_MOD ELEMENT_MOD
    (249) CONTENT_MOD -> . ELEMENT_MOD
    (250) ELEMENT_MOD -> . pub INST_MOD
    (251) ELEMENT_MOD -> . INST_MOD
    (252) INST_MOD -> . FUNCION
    (253) INST_MOD -> . MODULO
    (254) INST_MOD -> . STRUCT
    (255) INST_MOD -> . DECLARACION
    (256) INST_MOD -> . DECARREGLO
    (257) INST_MOD -> . DECVECTOR
    (258) INST_MOD -> . DECSTRUCT
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    pub             shift and go to state 19
    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    CONTENT_MOD                    shift and go to state 17
    ELEMENT_MOD                    shift and go to state 18
    INST_MOD                       shift and go to state 20
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 15

    (156) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> fn id para . LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> fn id para . parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> fn id para . parc BLOQUE_INST
    (160) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (162) LISTAPARAMETROS -> . LISTAPARAMETROS coma PARAMETRO
    (163) LISTAPARAMETROS -> . PARAMETRO
    (164) PARAMETRO -> . id dospuntos TIPOVAR
    (165) PARAMETRO -> . mut id dospuntos TIPOVAR
    (166) PARAMETRO -> . id dospuntos ampersand mut cora TIPOVAR corc
    (167) PARAMETRO -> . id dospuntos ampersand mut DIMENSION_ARR
    (168) PARAMETRO -> . id dospuntos ampersand mut VEC
    (169) PARAMETRO -> . mut id dospuntos ampersand VEC
    (170) PARAMETRO -> . id dospuntos VEC
    (171) PARAMETRO -> . mut id dospuntos VEC

    parc            shift and go to state 31
    id              shift and go to state 29
    mut             shift and go to state 33

    LISTAPARAMETROS                shift and go to state 30
    PARAMETRO                      shift and go to state 32

state 16

    (229) STRUCT -> struct id llavea . CONTENT_STRUCT llavec
    (230) CONTENT_STRUCT -> . CONTENT_STRUCT coma ELSTRUCT
    (231) CONTENT_STRUCT -> . ELSTRUCT
    (232) ELSTRUCT -> . pub ELSTRUCT
    (233) ELSTRUCT -> . id dospuntos TIPOVAR
    (234) ELSTRUCT -> . id dospuntos id

    pub             shift and go to state 37
    id              shift and go to state 34

    CONTENT_STRUCT                 shift and go to state 35
    ELSTRUCT                       shift and go to state 36

state 17

    (247) MODULO -> modulo id llavea CONTENT_MOD . llavec
    (248) CONTENT_MOD -> CONTENT_MOD . ELEMENT_MOD
    (250) ELEMENT_MOD -> . pub INST_MOD
    (251) ELEMENT_MOD -> . INST_MOD
    (252) INST_MOD -> . FUNCION
    (253) INST_MOD -> . MODULO
    (254) INST_MOD -> . STRUCT
    (255) INST_MOD -> . DECLARACION
    (256) INST_MOD -> . DECARREGLO
    (257) INST_MOD -> . DECVECTOR
    (258) INST_MOD -> . DECSTRUCT
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    llavec          shift and go to state 38
    pub             shift and go to state 19
    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    ELEMENT_MOD                    shift and go to state 39
    INST_MOD                       shift and go to state 20
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 18

    (249) CONTENT_MOD -> ELEMENT_MOD .

    llavec          reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)
    pub             reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)
    fn              reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)
    modulo          reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)
    struct          reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)
    let             reduce using rule 249 (CONTENT_MOD -> ELEMENT_MOD .)


state 19

    (250) ELEMENT_MOD -> pub . INST_MOD
    (252) INST_MOD -> . FUNCION
    (253) INST_MOD -> . MODULO
    (254) INST_MOD -> . STRUCT
    (255) INST_MOD -> . DECLARACION
    (256) INST_MOD -> . DECARREGLO
    (257) INST_MOD -> . DECVECTOR
    (258) INST_MOD -> . DECSTRUCT
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    INST_MOD                       shift and go to state 40
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 20

    (251) ELEMENT_MOD -> INST_MOD .

    llavec          reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)
    pub             reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)
    fn              reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)
    modulo          reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)
    struct          reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)
    let             reduce using rule 251 (ELEMENT_MOD -> INST_MOD .)


state 21

    (252) INST_MOD -> FUNCION .

    llavec          reduce using rule 252 (INST_MOD -> FUNCION .)
    pub             reduce using rule 252 (INST_MOD -> FUNCION .)
    fn              reduce using rule 252 (INST_MOD -> FUNCION .)
    modulo          reduce using rule 252 (INST_MOD -> FUNCION .)
    struct          reduce using rule 252 (INST_MOD -> FUNCION .)
    let             reduce using rule 252 (INST_MOD -> FUNCION .)


state 22

    (253) INST_MOD -> MODULO .

    llavec          reduce using rule 253 (INST_MOD -> MODULO .)
    pub             reduce using rule 253 (INST_MOD -> MODULO .)
    fn              reduce using rule 253 (INST_MOD -> MODULO .)
    modulo          reduce using rule 253 (INST_MOD -> MODULO .)
    struct          reduce using rule 253 (INST_MOD -> MODULO .)
    let             reduce using rule 253 (INST_MOD -> MODULO .)


state 23

    (254) INST_MOD -> STRUCT .

    llavec          reduce using rule 254 (INST_MOD -> STRUCT .)
    pub             reduce using rule 254 (INST_MOD -> STRUCT .)
    fn              reduce using rule 254 (INST_MOD -> STRUCT .)
    modulo          reduce using rule 254 (INST_MOD -> STRUCT .)
    struct          reduce using rule 254 (INST_MOD -> STRUCT .)
    let             reduce using rule 254 (INST_MOD -> STRUCT .)


state 24

    (255) INST_MOD -> DECLARACION .

    llavec          reduce using rule 255 (INST_MOD -> DECLARACION .)
    pub             reduce using rule 255 (INST_MOD -> DECLARACION .)
    fn              reduce using rule 255 (INST_MOD -> DECLARACION .)
    modulo          reduce using rule 255 (INST_MOD -> DECLARACION .)
    struct          reduce using rule 255 (INST_MOD -> DECLARACION .)
    let             reduce using rule 255 (INST_MOD -> DECLARACION .)


state 25

    (256) INST_MOD -> DECARREGLO .

    llavec          reduce using rule 256 (INST_MOD -> DECARREGLO .)
    pub             reduce using rule 256 (INST_MOD -> DECARREGLO .)
    fn              reduce using rule 256 (INST_MOD -> DECARREGLO .)
    modulo          reduce using rule 256 (INST_MOD -> DECARREGLO .)
    struct          reduce using rule 256 (INST_MOD -> DECARREGLO .)
    let             reduce using rule 256 (INST_MOD -> DECARREGLO .)


state 26

    (257) INST_MOD -> DECVECTOR .

    llavec          reduce using rule 257 (INST_MOD -> DECVECTOR .)
    pub             reduce using rule 257 (INST_MOD -> DECVECTOR .)
    fn              reduce using rule 257 (INST_MOD -> DECVECTOR .)
    modulo          reduce using rule 257 (INST_MOD -> DECVECTOR .)
    struct          reduce using rule 257 (INST_MOD -> DECVECTOR .)
    let             reduce using rule 257 (INST_MOD -> DECVECTOR .)


state 27

    (258) INST_MOD -> DECSTRUCT .

    llavec          reduce using rule 258 (INST_MOD -> DECSTRUCT .)
    pub             reduce using rule 258 (INST_MOD -> DECSTRUCT .)
    fn              reduce using rule 258 (INST_MOD -> DECSTRUCT .)
    modulo          reduce using rule 258 (INST_MOD -> DECSTRUCT .)
    struct          reduce using rule 258 (INST_MOD -> DECSTRUCT .)
    let             reduce using rule 258 (INST_MOD -> DECSTRUCT .)


state 28

    (116) DECLARACION -> let . mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let . mut id igual EXPRESION
    (118) DECLARACION -> let . id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> let . id igual EXPRESION
    (120) DECLARACION -> let . mut id dospuntos TIPOVAR
    (206) DECARREGLO -> let . id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> let . mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> let . id igual ARREGLO
    (209) DECARREGLO -> let . mut id igual ARREGLO
    (174) DECVECTOR -> let . id igual VECI
    (175) DECVECTOR -> let . mut id igual VECI
    (176) DECVECTOR -> let . id dospuntos VEC igual VECI
    (177) DECVECTOR -> let . mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> let . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> let . mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> let . id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let . mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> let . id igual STRUCT_EXP
    (236) DECSTRUCT -> let . mut id igual STRUCT_EXP
    (237) DECSTRUCT -> let . id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> let . mut id dospuntos id igual STRUCT_EXP

    mut             shift and go to state 41
    id              shift and go to state 42


state 29

    (164) PARAMETRO -> id . dospuntos TIPOVAR
    (166) PARAMETRO -> id . dospuntos ampersand mut cora TIPOVAR corc
    (167) PARAMETRO -> id . dospuntos ampersand mut DIMENSION_ARR
    (168) PARAMETRO -> id . dospuntos ampersand mut VEC
    (170) PARAMETRO -> id . dospuntos VEC

    dospuntos       shift and go to state 43


state 30

    (156) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS . parc BLOQUE_INST
    (160) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor id BLOQUE_INST
    (161) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor VEC BLOQUE_INST
    (162) LISTAPARAMETROS -> LISTAPARAMETROS . coma PARAMETRO

    parc            shift and go to state 44
    coma            shift and go to state 45


state 31

    (158) FUNCION -> fn id para parc . menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> fn id para parc . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    menos           shift and go to state 46
    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 47

state 32

    (163) LISTAPARAMETROS -> PARAMETRO .

    parc            reduce using rule 163 (LISTAPARAMETROS -> PARAMETRO .)
    coma            reduce using rule 163 (LISTAPARAMETROS -> PARAMETRO .)


state 33

    (165) PARAMETRO -> mut . id dospuntos TIPOVAR
    (169) PARAMETRO -> mut . id dospuntos ampersand VEC
    (171) PARAMETRO -> mut . id dospuntos VEC

    id              shift and go to state 49


state 34

    (233) ELSTRUCT -> id . dospuntos TIPOVAR
    (234) ELSTRUCT -> id . dospuntos id

    dospuntos       shift and go to state 50


state 35

    (229) STRUCT -> struct id llavea CONTENT_STRUCT . llavec
    (230) CONTENT_STRUCT -> CONTENT_STRUCT . coma ELSTRUCT

    llavec          shift and go to state 51
    coma            shift and go to state 52


state 36

    (231) CONTENT_STRUCT -> ELSTRUCT .

    llavec          reduce using rule 231 (CONTENT_STRUCT -> ELSTRUCT .)
    coma            reduce using rule 231 (CONTENT_STRUCT -> ELSTRUCT .)


state 37

    (232) ELSTRUCT -> pub . ELSTRUCT
    (232) ELSTRUCT -> . pub ELSTRUCT
    (233) ELSTRUCT -> . id dospuntos TIPOVAR
    (234) ELSTRUCT -> . id dospuntos id

    pub             shift and go to state 37
    id              shift and go to state 34

    ELSTRUCT                       shift and go to state 53

state 38

    (247) MODULO -> modulo id llavea CONTENT_MOD llavec .

    modulo          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    fn              reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    struct          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    $end            reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    llavec          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    pub             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    let             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    println         reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    id              reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    if              reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    match           reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    continue        reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    return          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    break           reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    while           reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    i64             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    f64             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    menos           reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    not             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    para            reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    for             reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    entero          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    decimal         reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    cadena          reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    true            reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    false           reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    caracter        reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    loop            reduce using rule 247 (MODULO -> modulo id llavea CONTENT_MOD llavec .)


state 39

    (248) CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .

    llavec          reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    pub             reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    fn              reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    modulo          reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    struct          reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    let             reduce using rule 248 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)


state 40

    (250) ELEMENT_MOD -> pub INST_MOD .

    llavec          reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)
    pub             reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)
    fn              reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)
    modulo          reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)
    struct          reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)
    let             reduce using rule 250 (ELEMENT_MOD -> pub INST_MOD .)


state 41

    (116) DECLARACION -> let mut . id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let mut . id igual EXPRESION
    (120) DECLARACION -> let mut . id dospuntos TIPOVAR
    (207) DECARREGLO -> let mut . id dospuntos DIMENSION_ARR igual ARREGLO
    (209) DECARREGLO -> let mut . id igual ARREGLO
    (175) DECVECTOR -> let mut . id igual VECI
    (177) DECVECTOR -> let mut . id dospuntos VEC igual VECI
    (179) DECVECTOR -> let mut . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let mut . id igual Vec dospuntos dospuntos FUNCVEC
    (236) DECSTRUCT -> let mut . id igual STRUCT_EXP
    (238) DECSTRUCT -> let mut . id dospuntos id igual STRUCT_EXP

    id              shift and go to state 54


state 42

    (118) DECLARACION -> let id . dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> let id . igual EXPRESION
    (206) DECARREGLO -> let id . dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> let id . igual ARREGLO
    (174) DECVECTOR -> let id . igual VECI
    (176) DECVECTOR -> let id . dospuntos VEC igual VECI
    (178) DECVECTOR -> let id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> let id . igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> let id . igual STRUCT_EXP
    (237) DECSTRUCT -> let id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 55
    igual           shift and go to state 56


state 43

    (164) PARAMETRO -> id dospuntos . TIPOVAR
    (166) PARAMETRO -> id dospuntos . ampersand mut cora TIPOVAR corc
    (167) PARAMETRO -> id dospuntos . ampersand mut DIMENSION_ARR
    (168) PARAMETRO -> id dospuntos . ampersand mut VEC
    (170) PARAMETRO -> id dospuntos . VEC
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    ampersand       shift and go to state 58
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    Vec             shift and go to state 67

    TIPOVAR                        shift and go to state 57
    VEC                            shift and go to state 59

state 44

    (156) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS parc . BLOQUE_INST
    (160) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor id BLOQUE_INST
    (161) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor VEC BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    menos           shift and go to state 68
    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 69

state 45

    (162) LISTAPARAMETROS -> LISTAPARAMETROS coma . PARAMETRO
    (164) PARAMETRO -> . id dospuntos TIPOVAR
    (165) PARAMETRO -> . mut id dospuntos TIPOVAR
    (166) PARAMETRO -> . id dospuntos ampersand mut cora TIPOVAR corc
    (167) PARAMETRO -> . id dospuntos ampersand mut DIMENSION_ARR
    (168) PARAMETRO -> . id dospuntos ampersand mut VEC
    (169) PARAMETRO -> . mut id dospuntos ampersand VEC
    (170) PARAMETRO -> . id dospuntos VEC
    (171) PARAMETRO -> . mut id dospuntos VEC

    id              shift and go to state 29
    mut             shift and go to state 33

    PARAMETRO                      shift and go to state 70

state 46

    (158) FUNCION -> fn id para parc menos . mayor TIPOVAR BLOQUE_INST

    mayor           shift and go to state 71


state 47

    (159) FUNCION -> fn id para parc BLOQUE_INST .

    modulo          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    fn              reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    struct          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    $end            reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    llavec          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    pub             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    let             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    println         reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    id              reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    if              reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    match           reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    continue        reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    return          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    break           reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    while           reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    i64             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    f64             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    menos           reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    not             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    para            reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    for             reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    entero          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    decimal         reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    cadena          reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    true            reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    false           reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    caracter        reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)
    loop            reduce using rule 159 (FUNCION -> fn id para parc BLOQUE_INST .)


state 48

    (155) BLOQUE_INST -> llavea . INSTRUCCIONES llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES

    println         shift and go to state 97
    let             shift and go to state 99
    id              shift and go to state 100
    if              shift and go to state 101
    match           shift and go to state 102
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    loop            shift and go to state 133

    INSTRUCCIONES                  shift and go to state 72
    INSTRUCCION                    shift and go to state 73
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    EXPRESION                      shift and go to state 83
    CALL                           shift and go to state 84
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    REMOVE                         shift and go to state 94
    MODULO                         shift and go to state 95
    ACCESO_MOD                     shift and go to state 96
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125

state 49

    (165) PARAMETRO -> mut id . dospuntos TIPOVAR
    (169) PARAMETRO -> mut id . dospuntos ampersand VEC
    (171) PARAMETRO -> mut id . dospuntos VEC

    dospuntos       shift and go to state 134


state 50

    (233) ELSTRUCT -> id dospuntos . TIPOVAR
    (234) ELSTRUCT -> id dospuntos . id
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize

    id              shift and go to state 135
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66

    TIPOVAR                        shift and go to state 136

state 51

    (229) STRUCT -> struct id llavea CONTENT_STRUCT llavec .

    modulo          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    fn              reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    struct          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    $end            reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    llavec          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    pub             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    let             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    println         reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    id              reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    if              reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    match           reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    continue        reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    return          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    break           reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    while           reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    i64             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    f64             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    menos           reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    not             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    para            reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    for             reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    entero          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    decimal         reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    cadena          reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    true            reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    false           reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    caracter        reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    loop            reduce using rule 229 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)


state 52

    (230) CONTENT_STRUCT -> CONTENT_STRUCT coma . ELSTRUCT
    (232) ELSTRUCT -> . pub ELSTRUCT
    (233) ELSTRUCT -> . id dospuntos TIPOVAR
    (234) ELSTRUCT -> . id dospuntos id

    pub             shift and go to state 37
    id              shift and go to state 34

    ELSTRUCT                       shift and go to state 137

state 53

    (232) ELSTRUCT -> pub ELSTRUCT .

    llavec          reduce using rule 232 (ELSTRUCT -> pub ELSTRUCT .)
    coma            reduce using rule 232 (ELSTRUCT -> pub ELSTRUCT .)


state 54

    (116) DECLARACION -> let mut id . dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let mut id . igual EXPRESION
    (120) DECLARACION -> let mut id . dospuntos TIPOVAR
    (207) DECARREGLO -> let mut id . dospuntos DIMENSION_ARR igual ARREGLO
    (209) DECARREGLO -> let mut id . igual ARREGLO
    (175) DECVECTOR -> let mut id . igual VECI
    (177) DECVECTOR -> let mut id . dospuntos VEC igual VECI
    (179) DECVECTOR -> let mut id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let mut id . igual Vec dospuntos dospuntos FUNCVEC
    (236) DECSTRUCT -> let mut id . igual STRUCT_EXP
    (238) DECSTRUCT -> let mut id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 138
    igual           shift and go to state 139


state 55

    (118) DECLARACION -> let id dospuntos . TIPOVAR igual EXPRESION
    (206) DECARREGLO -> let id dospuntos . DIMENSION_ARR igual ARREGLO
    (176) DECVECTOR -> let id dospuntos . VEC igual VECI
    (178) DECVECTOR -> let id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (237) DECSTRUCT -> let id dospuntos . id igual STRUCT_EXP
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    id              shift and go to state 140
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    cora            shift and go to state 144
    Vec             shift and go to state 67

    TIPOVAR                        shift and go to state 141
    DIMENSION_ARR                  shift and go to state 142
    VEC                            shift and go to state 143

state 56

    (119) DECLARACION -> let id igual . EXPRESION
    (208) DECARREGLO -> let id igual . ARREGLO
    (174) DECVECTOR -> let id igual . VECI
    (180) DECVECTOR -> let id igual . Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> let id igual . STRUCT_EXP
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    Vec             shift and go to state 149
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    cora            shift and go to state 154
    vecI            shift and go to state 155
    id              shift and go to state 145
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 146
    ARREGLO                        shift and go to state 147
    VECI                           shift and go to state 148
    STRUCT_EXP                     shift and go to state 150
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 57

    (164) PARAMETRO -> id dospuntos TIPOVAR .

    parc            reduce using rule 164 (PARAMETRO -> id dospuntos TIPOVAR .)
    coma            reduce using rule 164 (PARAMETRO -> id dospuntos TIPOVAR .)


state 58

    (166) PARAMETRO -> id dospuntos ampersand . mut cora TIPOVAR corc
    (167) PARAMETRO -> id dospuntos ampersand . mut DIMENSION_ARR
    (168) PARAMETRO -> id dospuntos ampersand . mut VEC

    mut             shift and go to state 158


state 59

    (170) PARAMETRO -> id dospuntos VEC .

    parc            reduce using rule 170 (PARAMETRO -> id dospuntos VEC .)
    coma            reduce using rule 170 (PARAMETRO -> id dospuntos VEC .)


state 60

    (82) TIPOVAR -> i64 .

    parc            reduce using rule 82 (TIPOVAR -> i64 .)
    coma            reduce using rule 82 (TIPOVAR -> i64 .)
    llavec          reduce using rule 82 (TIPOVAR -> i64 .)
    igual           reduce using rule 82 (TIPOVAR -> i64 .)
    llavea          reduce using rule 82 (TIPOVAR -> i64 .)
    pub             reduce using rule 82 (TIPOVAR -> i64 .)
    fn              reduce using rule 82 (TIPOVAR -> i64 .)
    modulo          reduce using rule 82 (TIPOVAR -> i64 .)
    struct          reduce using rule 82 (TIPOVAR -> i64 .)
    let             reduce using rule 82 (TIPOVAR -> i64 .)
    puntoycoma      reduce using rule 82 (TIPOVAR -> i64 .)
    mayor           reduce using rule 82 (TIPOVAR -> i64 .)
    mas             reduce using rule 82 (TIPOVAR -> i64 .)
    menos           reduce using rule 82 (TIPOVAR -> i64 .)
    div             reduce using rule 82 (TIPOVAR -> i64 .)
    multi           reduce using rule 82 (TIPOVAR -> i64 .)
    mod             reduce using rule 82 (TIPOVAR -> i64 .)
    menor           reduce using rule 82 (TIPOVAR -> i64 .)
    mayorigual      reduce using rule 82 (TIPOVAR -> i64 .)
    menorigual      reduce using rule 82 (TIPOVAR -> i64 .)
    igualigual      reduce using rule 82 (TIPOVAR -> i64 .)
    diferente       reduce using rule 82 (TIPOVAR -> i64 .)
    and             reduce using rule 82 (TIPOVAR -> i64 .)
    or              reduce using rule 82 (TIPOVAR -> i64 .)
    as              reduce using rule 82 (TIPOVAR -> i64 .)
    punto           reduce using rule 82 (TIPOVAR -> i64 .)
    println         reduce using rule 82 (TIPOVAR -> i64 .)
    id              reduce using rule 82 (TIPOVAR -> i64 .)
    if              reduce using rule 82 (TIPOVAR -> i64 .)
    match           reduce using rule 82 (TIPOVAR -> i64 .)
    continue        reduce using rule 82 (TIPOVAR -> i64 .)
    return          reduce using rule 82 (TIPOVAR -> i64 .)
    break           reduce using rule 82 (TIPOVAR -> i64 .)
    while           reduce using rule 82 (TIPOVAR -> i64 .)
    i64             reduce using rule 82 (TIPOVAR -> i64 .)
    f64             reduce using rule 82 (TIPOVAR -> i64 .)
    not             reduce using rule 82 (TIPOVAR -> i64 .)
    para            reduce using rule 82 (TIPOVAR -> i64 .)
    for             reduce using rule 82 (TIPOVAR -> i64 .)
    entero          reduce using rule 82 (TIPOVAR -> i64 .)
    decimal         reduce using rule 82 (TIPOVAR -> i64 .)
    cadena          reduce using rule 82 (TIPOVAR -> i64 .)
    true            reduce using rule 82 (TIPOVAR -> i64 .)
    false           reduce using rule 82 (TIPOVAR -> i64 .)
    caracter        reduce using rule 82 (TIPOVAR -> i64 .)
    loop            reduce using rule 82 (TIPOVAR -> i64 .)
    corc            reduce using rule 82 (TIPOVAR -> i64 .)
    bvertical       reduce using rule 82 (TIPOVAR -> i64 .)


state 61

    (83) TIPOVAR -> f64 .

    parc            reduce using rule 83 (TIPOVAR -> f64 .)
    coma            reduce using rule 83 (TIPOVAR -> f64 .)
    llavec          reduce using rule 83 (TIPOVAR -> f64 .)
    igual           reduce using rule 83 (TIPOVAR -> f64 .)
    llavea          reduce using rule 83 (TIPOVAR -> f64 .)
    pub             reduce using rule 83 (TIPOVAR -> f64 .)
    fn              reduce using rule 83 (TIPOVAR -> f64 .)
    modulo          reduce using rule 83 (TIPOVAR -> f64 .)
    struct          reduce using rule 83 (TIPOVAR -> f64 .)
    let             reduce using rule 83 (TIPOVAR -> f64 .)
    puntoycoma      reduce using rule 83 (TIPOVAR -> f64 .)
    mayor           reduce using rule 83 (TIPOVAR -> f64 .)
    mas             reduce using rule 83 (TIPOVAR -> f64 .)
    menos           reduce using rule 83 (TIPOVAR -> f64 .)
    div             reduce using rule 83 (TIPOVAR -> f64 .)
    multi           reduce using rule 83 (TIPOVAR -> f64 .)
    mod             reduce using rule 83 (TIPOVAR -> f64 .)
    menor           reduce using rule 83 (TIPOVAR -> f64 .)
    mayorigual      reduce using rule 83 (TIPOVAR -> f64 .)
    menorigual      reduce using rule 83 (TIPOVAR -> f64 .)
    igualigual      reduce using rule 83 (TIPOVAR -> f64 .)
    diferente       reduce using rule 83 (TIPOVAR -> f64 .)
    and             reduce using rule 83 (TIPOVAR -> f64 .)
    or              reduce using rule 83 (TIPOVAR -> f64 .)
    as              reduce using rule 83 (TIPOVAR -> f64 .)
    punto           reduce using rule 83 (TIPOVAR -> f64 .)
    println         reduce using rule 83 (TIPOVAR -> f64 .)
    id              reduce using rule 83 (TIPOVAR -> f64 .)
    if              reduce using rule 83 (TIPOVAR -> f64 .)
    match           reduce using rule 83 (TIPOVAR -> f64 .)
    continue        reduce using rule 83 (TIPOVAR -> f64 .)
    return          reduce using rule 83 (TIPOVAR -> f64 .)
    break           reduce using rule 83 (TIPOVAR -> f64 .)
    while           reduce using rule 83 (TIPOVAR -> f64 .)
    i64             reduce using rule 83 (TIPOVAR -> f64 .)
    f64             reduce using rule 83 (TIPOVAR -> f64 .)
    not             reduce using rule 83 (TIPOVAR -> f64 .)
    para            reduce using rule 83 (TIPOVAR -> f64 .)
    for             reduce using rule 83 (TIPOVAR -> f64 .)
    entero          reduce using rule 83 (TIPOVAR -> f64 .)
    decimal         reduce using rule 83 (TIPOVAR -> f64 .)
    cadena          reduce using rule 83 (TIPOVAR -> f64 .)
    true            reduce using rule 83 (TIPOVAR -> f64 .)
    false           reduce using rule 83 (TIPOVAR -> f64 .)
    caracter        reduce using rule 83 (TIPOVAR -> f64 .)
    loop            reduce using rule 83 (TIPOVAR -> f64 .)
    corc            reduce using rule 83 (TIPOVAR -> f64 .)
    bvertical       reduce using rule 83 (TIPOVAR -> f64 .)


state 62

    (84) TIPOVAR -> bool .

    parc            reduce using rule 84 (TIPOVAR -> bool .)
    coma            reduce using rule 84 (TIPOVAR -> bool .)
    llavec          reduce using rule 84 (TIPOVAR -> bool .)
    igual           reduce using rule 84 (TIPOVAR -> bool .)
    llavea          reduce using rule 84 (TIPOVAR -> bool .)
    pub             reduce using rule 84 (TIPOVAR -> bool .)
    fn              reduce using rule 84 (TIPOVAR -> bool .)
    modulo          reduce using rule 84 (TIPOVAR -> bool .)
    struct          reduce using rule 84 (TIPOVAR -> bool .)
    let             reduce using rule 84 (TIPOVAR -> bool .)
    puntoycoma      reduce using rule 84 (TIPOVAR -> bool .)
    mayor           reduce using rule 84 (TIPOVAR -> bool .)
    mas             reduce using rule 84 (TIPOVAR -> bool .)
    menos           reduce using rule 84 (TIPOVAR -> bool .)
    div             reduce using rule 84 (TIPOVAR -> bool .)
    multi           reduce using rule 84 (TIPOVAR -> bool .)
    mod             reduce using rule 84 (TIPOVAR -> bool .)
    menor           reduce using rule 84 (TIPOVAR -> bool .)
    mayorigual      reduce using rule 84 (TIPOVAR -> bool .)
    menorigual      reduce using rule 84 (TIPOVAR -> bool .)
    igualigual      reduce using rule 84 (TIPOVAR -> bool .)
    diferente       reduce using rule 84 (TIPOVAR -> bool .)
    and             reduce using rule 84 (TIPOVAR -> bool .)
    or              reduce using rule 84 (TIPOVAR -> bool .)
    as              reduce using rule 84 (TIPOVAR -> bool .)
    punto           reduce using rule 84 (TIPOVAR -> bool .)
    println         reduce using rule 84 (TIPOVAR -> bool .)
    id              reduce using rule 84 (TIPOVAR -> bool .)
    if              reduce using rule 84 (TIPOVAR -> bool .)
    match           reduce using rule 84 (TIPOVAR -> bool .)
    continue        reduce using rule 84 (TIPOVAR -> bool .)
    return          reduce using rule 84 (TIPOVAR -> bool .)
    break           reduce using rule 84 (TIPOVAR -> bool .)
    while           reduce using rule 84 (TIPOVAR -> bool .)
    i64             reduce using rule 84 (TIPOVAR -> bool .)
    f64             reduce using rule 84 (TIPOVAR -> bool .)
    not             reduce using rule 84 (TIPOVAR -> bool .)
    para            reduce using rule 84 (TIPOVAR -> bool .)
    for             reduce using rule 84 (TIPOVAR -> bool .)
    entero          reduce using rule 84 (TIPOVAR -> bool .)
    decimal         reduce using rule 84 (TIPOVAR -> bool .)
    cadena          reduce using rule 84 (TIPOVAR -> bool .)
    true            reduce using rule 84 (TIPOVAR -> bool .)
    false           reduce using rule 84 (TIPOVAR -> bool .)
    caracter        reduce using rule 84 (TIPOVAR -> bool .)
    loop            reduce using rule 84 (TIPOVAR -> bool .)
    corc            reduce using rule 84 (TIPOVAR -> bool .)
    bvertical       reduce using rule 84 (TIPOVAR -> bool .)


state 63

    (85) TIPOVAR -> string .

    parc            reduce using rule 85 (TIPOVAR -> string .)
    coma            reduce using rule 85 (TIPOVAR -> string .)
    llavec          reduce using rule 85 (TIPOVAR -> string .)
    igual           reduce using rule 85 (TIPOVAR -> string .)
    llavea          reduce using rule 85 (TIPOVAR -> string .)
    pub             reduce using rule 85 (TIPOVAR -> string .)
    fn              reduce using rule 85 (TIPOVAR -> string .)
    modulo          reduce using rule 85 (TIPOVAR -> string .)
    struct          reduce using rule 85 (TIPOVAR -> string .)
    let             reduce using rule 85 (TIPOVAR -> string .)
    puntoycoma      reduce using rule 85 (TIPOVAR -> string .)
    mayor           reduce using rule 85 (TIPOVAR -> string .)
    mas             reduce using rule 85 (TIPOVAR -> string .)
    menos           reduce using rule 85 (TIPOVAR -> string .)
    div             reduce using rule 85 (TIPOVAR -> string .)
    multi           reduce using rule 85 (TIPOVAR -> string .)
    mod             reduce using rule 85 (TIPOVAR -> string .)
    menor           reduce using rule 85 (TIPOVAR -> string .)
    mayorigual      reduce using rule 85 (TIPOVAR -> string .)
    menorigual      reduce using rule 85 (TIPOVAR -> string .)
    igualigual      reduce using rule 85 (TIPOVAR -> string .)
    diferente       reduce using rule 85 (TIPOVAR -> string .)
    and             reduce using rule 85 (TIPOVAR -> string .)
    or              reduce using rule 85 (TIPOVAR -> string .)
    as              reduce using rule 85 (TIPOVAR -> string .)
    punto           reduce using rule 85 (TIPOVAR -> string .)
    println         reduce using rule 85 (TIPOVAR -> string .)
    id              reduce using rule 85 (TIPOVAR -> string .)
    if              reduce using rule 85 (TIPOVAR -> string .)
    match           reduce using rule 85 (TIPOVAR -> string .)
    continue        reduce using rule 85 (TIPOVAR -> string .)
    return          reduce using rule 85 (TIPOVAR -> string .)
    break           reduce using rule 85 (TIPOVAR -> string .)
    while           reduce using rule 85 (TIPOVAR -> string .)
    i64             reduce using rule 85 (TIPOVAR -> string .)
    f64             reduce using rule 85 (TIPOVAR -> string .)
    not             reduce using rule 85 (TIPOVAR -> string .)
    para            reduce using rule 85 (TIPOVAR -> string .)
    for             reduce using rule 85 (TIPOVAR -> string .)
    entero          reduce using rule 85 (TIPOVAR -> string .)
    decimal         reduce using rule 85 (TIPOVAR -> string .)
    cadena          reduce using rule 85 (TIPOVAR -> string .)
    true            reduce using rule 85 (TIPOVAR -> string .)
    false           reduce using rule 85 (TIPOVAR -> string .)
    caracter        reduce using rule 85 (TIPOVAR -> string .)
    loop            reduce using rule 85 (TIPOVAR -> string .)
    corc            reduce using rule 85 (TIPOVAR -> string .)
    bvertical       reduce using rule 85 (TIPOVAR -> string .)


state 64

    (86) TIPOVAR -> char .

    parc            reduce using rule 86 (TIPOVAR -> char .)
    coma            reduce using rule 86 (TIPOVAR -> char .)
    llavec          reduce using rule 86 (TIPOVAR -> char .)
    igual           reduce using rule 86 (TIPOVAR -> char .)
    llavea          reduce using rule 86 (TIPOVAR -> char .)
    pub             reduce using rule 86 (TIPOVAR -> char .)
    fn              reduce using rule 86 (TIPOVAR -> char .)
    modulo          reduce using rule 86 (TIPOVAR -> char .)
    struct          reduce using rule 86 (TIPOVAR -> char .)
    let             reduce using rule 86 (TIPOVAR -> char .)
    puntoycoma      reduce using rule 86 (TIPOVAR -> char .)
    mayor           reduce using rule 86 (TIPOVAR -> char .)
    mas             reduce using rule 86 (TIPOVAR -> char .)
    menos           reduce using rule 86 (TIPOVAR -> char .)
    div             reduce using rule 86 (TIPOVAR -> char .)
    multi           reduce using rule 86 (TIPOVAR -> char .)
    mod             reduce using rule 86 (TIPOVAR -> char .)
    menor           reduce using rule 86 (TIPOVAR -> char .)
    mayorigual      reduce using rule 86 (TIPOVAR -> char .)
    menorigual      reduce using rule 86 (TIPOVAR -> char .)
    igualigual      reduce using rule 86 (TIPOVAR -> char .)
    diferente       reduce using rule 86 (TIPOVAR -> char .)
    and             reduce using rule 86 (TIPOVAR -> char .)
    or              reduce using rule 86 (TIPOVAR -> char .)
    as              reduce using rule 86 (TIPOVAR -> char .)
    punto           reduce using rule 86 (TIPOVAR -> char .)
    println         reduce using rule 86 (TIPOVAR -> char .)
    id              reduce using rule 86 (TIPOVAR -> char .)
    if              reduce using rule 86 (TIPOVAR -> char .)
    match           reduce using rule 86 (TIPOVAR -> char .)
    continue        reduce using rule 86 (TIPOVAR -> char .)
    return          reduce using rule 86 (TIPOVAR -> char .)
    break           reduce using rule 86 (TIPOVAR -> char .)
    while           reduce using rule 86 (TIPOVAR -> char .)
    i64             reduce using rule 86 (TIPOVAR -> char .)
    f64             reduce using rule 86 (TIPOVAR -> char .)
    not             reduce using rule 86 (TIPOVAR -> char .)
    para            reduce using rule 86 (TIPOVAR -> char .)
    for             reduce using rule 86 (TIPOVAR -> char .)
    entero          reduce using rule 86 (TIPOVAR -> char .)
    decimal         reduce using rule 86 (TIPOVAR -> char .)
    cadena          reduce using rule 86 (TIPOVAR -> char .)
    true            reduce using rule 86 (TIPOVAR -> char .)
    false           reduce using rule 86 (TIPOVAR -> char .)
    caracter        reduce using rule 86 (TIPOVAR -> char .)
    loop            reduce using rule 86 (TIPOVAR -> char .)
    corc            reduce using rule 86 (TIPOVAR -> char .)
    bvertical       reduce using rule 86 (TIPOVAR -> char .)


state 65

    (87) TIPOVAR -> str .

    parc            reduce using rule 87 (TIPOVAR -> str .)
    coma            reduce using rule 87 (TIPOVAR -> str .)
    llavec          reduce using rule 87 (TIPOVAR -> str .)
    igual           reduce using rule 87 (TIPOVAR -> str .)
    llavea          reduce using rule 87 (TIPOVAR -> str .)
    pub             reduce using rule 87 (TIPOVAR -> str .)
    fn              reduce using rule 87 (TIPOVAR -> str .)
    modulo          reduce using rule 87 (TIPOVAR -> str .)
    struct          reduce using rule 87 (TIPOVAR -> str .)
    let             reduce using rule 87 (TIPOVAR -> str .)
    puntoycoma      reduce using rule 87 (TIPOVAR -> str .)
    mayor           reduce using rule 87 (TIPOVAR -> str .)
    mas             reduce using rule 87 (TIPOVAR -> str .)
    menos           reduce using rule 87 (TIPOVAR -> str .)
    div             reduce using rule 87 (TIPOVAR -> str .)
    multi           reduce using rule 87 (TIPOVAR -> str .)
    mod             reduce using rule 87 (TIPOVAR -> str .)
    menor           reduce using rule 87 (TIPOVAR -> str .)
    mayorigual      reduce using rule 87 (TIPOVAR -> str .)
    menorigual      reduce using rule 87 (TIPOVAR -> str .)
    igualigual      reduce using rule 87 (TIPOVAR -> str .)
    diferente       reduce using rule 87 (TIPOVAR -> str .)
    and             reduce using rule 87 (TIPOVAR -> str .)
    or              reduce using rule 87 (TIPOVAR -> str .)
    as              reduce using rule 87 (TIPOVAR -> str .)
    punto           reduce using rule 87 (TIPOVAR -> str .)
    println         reduce using rule 87 (TIPOVAR -> str .)
    id              reduce using rule 87 (TIPOVAR -> str .)
    if              reduce using rule 87 (TIPOVAR -> str .)
    match           reduce using rule 87 (TIPOVAR -> str .)
    continue        reduce using rule 87 (TIPOVAR -> str .)
    return          reduce using rule 87 (TIPOVAR -> str .)
    break           reduce using rule 87 (TIPOVAR -> str .)
    while           reduce using rule 87 (TIPOVAR -> str .)
    i64             reduce using rule 87 (TIPOVAR -> str .)
    f64             reduce using rule 87 (TIPOVAR -> str .)
    not             reduce using rule 87 (TIPOVAR -> str .)
    para            reduce using rule 87 (TIPOVAR -> str .)
    for             reduce using rule 87 (TIPOVAR -> str .)
    entero          reduce using rule 87 (TIPOVAR -> str .)
    decimal         reduce using rule 87 (TIPOVAR -> str .)
    cadena          reduce using rule 87 (TIPOVAR -> str .)
    true            reduce using rule 87 (TIPOVAR -> str .)
    false           reduce using rule 87 (TIPOVAR -> str .)
    caracter        reduce using rule 87 (TIPOVAR -> str .)
    loop            reduce using rule 87 (TIPOVAR -> str .)
    corc            reduce using rule 87 (TIPOVAR -> str .)
    bvertical       reduce using rule 87 (TIPOVAR -> str .)


state 66

    (88) TIPOVAR -> usize .

    parc            reduce using rule 88 (TIPOVAR -> usize .)
    coma            reduce using rule 88 (TIPOVAR -> usize .)
    llavec          reduce using rule 88 (TIPOVAR -> usize .)
    igual           reduce using rule 88 (TIPOVAR -> usize .)
    llavea          reduce using rule 88 (TIPOVAR -> usize .)
    pub             reduce using rule 88 (TIPOVAR -> usize .)
    fn              reduce using rule 88 (TIPOVAR -> usize .)
    modulo          reduce using rule 88 (TIPOVAR -> usize .)
    struct          reduce using rule 88 (TIPOVAR -> usize .)
    let             reduce using rule 88 (TIPOVAR -> usize .)
    puntoycoma      reduce using rule 88 (TIPOVAR -> usize .)
    mayor           reduce using rule 88 (TIPOVAR -> usize .)
    mas             reduce using rule 88 (TIPOVAR -> usize .)
    menos           reduce using rule 88 (TIPOVAR -> usize .)
    div             reduce using rule 88 (TIPOVAR -> usize .)
    multi           reduce using rule 88 (TIPOVAR -> usize .)
    mod             reduce using rule 88 (TIPOVAR -> usize .)
    menor           reduce using rule 88 (TIPOVAR -> usize .)
    mayorigual      reduce using rule 88 (TIPOVAR -> usize .)
    menorigual      reduce using rule 88 (TIPOVAR -> usize .)
    igualigual      reduce using rule 88 (TIPOVAR -> usize .)
    diferente       reduce using rule 88 (TIPOVAR -> usize .)
    and             reduce using rule 88 (TIPOVAR -> usize .)
    or              reduce using rule 88 (TIPOVAR -> usize .)
    as              reduce using rule 88 (TIPOVAR -> usize .)
    punto           reduce using rule 88 (TIPOVAR -> usize .)
    println         reduce using rule 88 (TIPOVAR -> usize .)
    id              reduce using rule 88 (TIPOVAR -> usize .)
    if              reduce using rule 88 (TIPOVAR -> usize .)
    match           reduce using rule 88 (TIPOVAR -> usize .)
    continue        reduce using rule 88 (TIPOVAR -> usize .)
    return          reduce using rule 88 (TIPOVAR -> usize .)
    break           reduce using rule 88 (TIPOVAR -> usize .)
    while           reduce using rule 88 (TIPOVAR -> usize .)
    i64             reduce using rule 88 (TIPOVAR -> usize .)
    f64             reduce using rule 88 (TIPOVAR -> usize .)
    not             reduce using rule 88 (TIPOVAR -> usize .)
    para            reduce using rule 88 (TIPOVAR -> usize .)
    for             reduce using rule 88 (TIPOVAR -> usize .)
    entero          reduce using rule 88 (TIPOVAR -> usize .)
    decimal         reduce using rule 88 (TIPOVAR -> usize .)
    cadena          reduce using rule 88 (TIPOVAR -> usize .)
    true            reduce using rule 88 (TIPOVAR -> usize .)
    false           reduce using rule 88 (TIPOVAR -> usize .)
    caracter        reduce using rule 88 (TIPOVAR -> usize .)
    loop            reduce using rule 88 (TIPOVAR -> usize .)
    corc            reduce using rule 88 (TIPOVAR -> usize .)
    bvertical       reduce using rule 88 (TIPOVAR -> usize .)


state 67

    (182) VEC -> Vec . menor VEC mayor
    (183) VEC -> Vec . menor TIPOVAR mayor
    (184) VEC -> Vec . menor CONJ_ACCES_MOD mayor

    menor           shift and go to state 159


state 68

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor TIPOVAR BLOQUE_INST
    (160) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor id BLOQUE_INST
    (161) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor VEC BLOQUE_INST

    mayor           shift and go to state 160


state 69

    (157) FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .

    modulo          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    fn              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    struct          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    $end            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    llavec          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    pub             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    let             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    println         reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    id              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    if              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    match           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    continue        reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    return          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    break           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    while           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    i64             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    f64             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    menos           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    not             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    para            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    for             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    entero          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    decimal         reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    cadena          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    true            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    false           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    caracter        reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    loop            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)


state 70

    (162) LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .

    parc            reduce using rule 162 (LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .)
    coma            reduce using rule 162 (LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .)


state 71

    (158) FUNCION -> fn id para parc menos mayor . TIPOVAR BLOQUE_INST
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize

    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66

    TIPOVAR                        shift and go to state 161

state 72

    (155) BLOQUE_INST -> llavea INSTRUCCIONES . llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES

    llavec          shift and go to state 162
    println         shift and go to state 97
    let             shift and go to state 99
    id              shift and go to state 100
    if              shift and go to state 101
    match           shift and go to state 102
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    loop            shift and go to state 133

    INSTRUCCION                    shift and go to state 163
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    EXPRESION                      shift and go to state 83
    CALL                           shift and go to state 84
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    REMOVE                         shift and go to state 94
    MODULO                         shift and go to state 95
    ACCESO_MOD                     shift and go to state 96
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125

state 73

    (8) INSTRUCCIONES -> INSTRUCCION .

    llavec          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    println         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    let             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    id              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    if              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    match           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    continue        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    return          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    break           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    while           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    i64             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    f64             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    menos           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    not             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    para            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    fn              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    for             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    struct          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    modulo          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    entero          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    decimal         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    cadena          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    true            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    false           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    caracter        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    loop            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)


state 74

    (9) INSTRUCCION -> PRINT . puntoycoma

    puntoycoma      shift and go to state 164


state 75

    (10) INSTRUCCION -> DECLARACION . puntoycoma

    puntoycoma      shift and go to state 165


state 76

    (11) INSTRUCCION -> ASIGNACION . puntoycoma

    puntoycoma      shift and go to state 166


state 77

    (12) INSTRUCCION -> IF .

    llavec          reduce using rule 12 (INSTRUCCION -> IF .)
    println         reduce using rule 12 (INSTRUCCION -> IF .)
    let             reduce using rule 12 (INSTRUCCION -> IF .)
    id              reduce using rule 12 (INSTRUCCION -> IF .)
    if              reduce using rule 12 (INSTRUCCION -> IF .)
    match           reduce using rule 12 (INSTRUCCION -> IF .)
    continue        reduce using rule 12 (INSTRUCCION -> IF .)
    return          reduce using rule 12 (INSTRUCCION -> IF .)
    break           reduce using rule 12 (INSTRUCCION -> IF .)
    while           reduce using rule 12 (INSTRUCCION -> IF .)
    i64             reduce using rule 12 (INSTRUCCION -> IF .)
    f64             reduce using rule 12 (INSTRUCCION -> IF .)
    menos           reduce using rule 12 (INSTRUCCION -> IF .)
    not             reduce using rule 12 (INSTRUCCION -> IF .)
    para            reduce using rule 12 (INSTRUCCION -> IF .)
    fn              reduce using rule 12 (INSTRUCCION -> IF .)
    for             reduce using rule 12 (INSTRUCCION -> IF .)
    struct          reduce using rule 12 (INSTRUCCION -> IF .)
    modulo          reduce using rule 12 (INSTRUCCION -> IF .)
    entero          reduce using rule 12 (INSTRUCCION -> IF .)
    decimal         reduce using rule 12 (INSTRUCCION -> IF .)
    cadena          reduce using rule 12 (INSTRUCCION -> IF .)
    true            reduce using rule 12 (INSTRUCCION -> IF .)
    false           reduce using rule 12 (INSTRUCCION -> IF .)
    caracter        reduce using rule 12 (INSTRUCCION -> IF .)
    loop            reduce using rule 12 (INSTRUCCION -> IF .)


state 78

    (13) INSTRUCCION -> MATCH .

    llavec          reduce using rule 13 (INSTRUCCION -> MATCH .)
    println         reduce using rule 13 (INSTRUCCION -> MATCH .)
    let             reduce using rule 13 (INSTRUCCION -> MATCH .)
    id              reduce using rule 13 (INSTRUCCION -> MATCH .)
    if              reduce using rule 13 (INSTRUCCION -> MATCH .)
    match           reduce using rule 13 (INSTRUCCION -> MATCH .)
    continue        reduce using rule 13 (INSTRUCCION -> MATCH .)
    return          reduce using rule 13 (INSTRUCCION -> MATCH .)
    break           reduce using rule 13 (INSTRUCCION -> MATCH .)
    while           reduce using rule 13 (INSTRUCCION -> MATCH .)
    i64             reduce using rule 13 (INSTRUCCION -> MATCH .)
    f64             reduce using rule 13 (INSTRUCCION -> MATCH .)
    menos           reduce using rule 13 (INSTRUCCION -> MATCH .)
    not             reduce using rule 13 (INSTRUCCION -> MATCH .)
    para            reduce using rule 13 (INSTRUCCION -> MATCH .)
    fn              reduce using rule 13 (INSTRUCCION -> MATCH .)
    for             reduce using rule 13 (INSTRUCCION -> MATCH .)
    struct          reduce using rule 13 (INSTRUCCION -> MATCH .)
    modulo          reduce using rule 13 (INSTRUCCION -> MATCH .)
    entero          reduce using rule 13 (INSTRUCCION -> MATCH .)
    decimal         reduce using rule 13 (INSTRUCCION -> MATCH .)
    cadena          reduce using rule 13 (INSTRUCCION -> MATCH .)
    true            reduce using rule 13 (INSTRUCCION -> MATCH .)
    false           reduce using rule 13 (INSTRUCCION -> MATCH .)
    caracter        reduce using rule 13 (INSTRUCCION -> MATCH .)
    loop            reduce using rule 13 (INSTRUCCION -> MATCH .)


state 79

    (14) INSTRUCCION -> CONTINUE . puntoycoma

    puntoycoma      shift and go to state 167


state 80

    (15) INSTRUCCION -> RETURN . puntoycoma

    puntoycoma      shift and go to state 168


state 81

    (16) INSTRUCCION -> BREAK . puntoycoma

    puntoycoma      shift and go to state 169


state 82

    (17) INSTRUCCION -> WHILE .

    llavec          reduce using rule 17 (INSTRUCCION -> WHILE .)
    println         reduce using rule 17 (INSTRUCCION -> WHILE .)
    let             reduce using rule 17 (INSTRUCCION -> WHILE .)
    id              reduce using rule 17 (INSTRUCCION -> WHILE .)
    if              reduce using rule 17 (INSTRUCCION -> WHILE .)
    match           reduce using rule 17 (INSTRUCCION -> WHILE .)
    continue        reduce using rule 17 (INSTRUCCION -> WHILE .)
    return          reduce using rule 17 (INSTRUCCION -> WHILE .)
    break           reduce using rule 17 (INSTRUCCION -> WHILE .)
    while           reduce using rule 17 (INSTRUCCION -> WHILE .)
    i64             reduce using rule 17 (INSTRUCCION -> WHILE .)
    f64             reduce using rule 17 (INSTRUCCION -> WHILE .)
    menos           reduce using rule 17 (INSTRUCCION -> WHILE .)
    not             reduce using rule 17 (INSTRUCCION -> WHILE .)
    para            reduce using rule 17 (INSTRUCCION -> WHILE .)
    fn              reduce using rule 17 (INSTRUCCION -> WHILE .)
    for             reduce using rule 17 (INSTRUCCION -> WHILE .)
    struct          reduce using rule 17 (INSTRUCCION -> WHILE .)
    modulo          reduce using rule 17 (INSTRUCCION -> WHILE .)
    entero          reduce using rule 17 (INSTRUCCION -> WHILE .)
    decimal         reduce using rule 17 (INSTRUCCION -> WHILE .)
    cadena          reduce using rule 17 (INSTRUCCION -> WHILE .)
    true            reduce using rule 17 (INSTRUCCION -> WHILE .)
    false           reduce using rule 17 (INSTRUCCION -> WHILE .)
    caracter        reduce using rule 17 (INSTRUCCION -> WHILE .)
    loop            reduce using rule 17 (INSTRUCCION -> WHILE .)


state 83

    (18) INSTRUCCION -> EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 84

    (19) INSTRUCCION -> CALL . puntoycoma
    (60) EXPRESION -> CALL .

    puntoycoma      shift and go to state 185
    mas             reduce using rule 60 (EXPRESION -> CALL .)
    menos           reduce using rule 60 (EXPRESION -> CALL .)
    div             reduce using rule 60 (EXPRESION -> CALL .)
    multi           reduce using rule 60 (EXPRESION -> CALL .)
    mod             reduce using rule 60 (EXPRESION -> CALL .)
    mayor           reduce using rule 60 (EXPRESION -> CALL .)
    menor           reduce using rule 60 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 60 (EXPRESION -> CALL .)
    menorigual      reduce using rule 60 (EXPRESION -> CALL .)
    igualigual      reduce using rule 60 (EXPRESION -> CALL .)
    diferente       reduce using rule 60 (EXPRESION -> CALL .)
    and             reduce using rule 60 (EXPRESION -> CALL .)
    or              reduce using rule 60 (EXPRESION -> CALL .)
    as              reduce using rule 60 (EXPRESION -> CALL .)
    punto           reduce using rule 60 (EXPRESION -> CALL .)
    llavec          reduce using rule 60 (EXPRESION -> CALL .)
    println         reduce using rule 60 (EXPRESION -> CALL .)
    let             reduce using rule 60 (EXPRESION -> CALL .)
    id              reduce using rule 60 (EXPRESION -> CALL .)
    if              reduce using rule 60 (EXPRESION -> CALL .)
    match           reduce using rule 60 (EXPRESION -> CALL .)
    continue        reduce using rule 60 (EXPRESION -> CALL .)
    return          reduce using rule 60 (EXPRESION -> CALL .)
    break           reduce using rule 60 (EXPRESION -> CALL .)
    while           reduce using rule 60 (EXPRESION -> CALL .)
    i64             reduce using rule 60 (EXPRESION -> CALL .)
    f64             reduce using rule 60 (EXPRESION -> CALL .)
    not             reduce using rule 60 (EXPRESION -> CALL .)
    para            reduce using rule 60 (EXPRESION -> CALL .)
    fn              reduce using rule 60 (EXPRESION -> CALL .)
    for             reduce using rule 60 (EXPRESION -> CALL .)
    struct          reduce using rule 60 (EXPRESION -> CALL .)
    modulo          reduce using rule 60 (EXPRESION -> CALL .)
    entero          reduce using rule 60 (EXPRESION -> CALL .)
    decimal         reduce using rule 60 (EXPRESION -> CALL .)
    cadena          reduce using rule 60 (EXPRESION -> CALL .)
    true            reduce using rule 60 (EXPRESION -> CALL .)
    false           reduce using rule 60 (EXPRESION -> CALL .)
    caracter        reduce using rule 60 (EXPRESION -> CALL .)
    loop            reduce using rule 60 (EXPRESION -> CALL .)


state 85

    (20) INSTRUCCION -> FUNCION .

    llavec          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    println         reduce using rule 20 (INSTRUCCION -> FUNCION .)
    let             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    id              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    if              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    match           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    continue        reduce using rule 20 (INSTRUCCION -> FUNCION .)
    return          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    break           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    while           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    i64             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    f64             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    menos           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    not             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    para            reduce using rule 20 (INSTRUCCION -> FUNCION .)
    fn              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    for             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    struct          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    modulo          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    entero          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    decimal         reduce using rule 20 (INSTRUCCION -> FUNCION .)
    cadena          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    true            reduce using rule 20 (INSTRUCCION -> FUNCION .)
    false           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    caracter        reduce using rule 20 (INSTRUCCION -> FUNCION .)
    loop            reduce using rule 20 (INSTRUCCION -> FUNCION .)


state 86

    (21) INSTRUCCION -> DECVECTOR . puntoycoma

    puntoycoma      shift and go to state 186


state 87

    (22) INSTRUCCION -> PUSH . puntoycoma

    puntoycoma      shift and go to state 187


state 88

    (23) INSTRUCCION -> INSERT . puntoycoma

    puntoycoma      shift and go to state 188


state 89

    (24) INSTRUCCION -> DECARREGLO . puntoycoma

    puntoycoma      shift and go to state 189


state 90

    (25) INSTRUCCION -> FORIN .

    llavec          reduce using rule 25 (INSTRUCCION -> FORIN .)
    println         reduce using rule 25 (INSTRUCCION -> FORIN .)
    let             reduce using rule 25 (INSTRUCCION -> FORIN .)
    id              reduce using rule 25 (INSTRUCCION -> FORIN .)
    if              reduce using rule 25 (INSTRUCCION -> FORIN .)
    match           reduce using rule 25 (INSTRUCCION -> FORIN .)
    continue        reduce using rule 25 (INSTRUCCION -> FORIN .)
    return          reduce using rule 25 (INSTRUCCION -> FORIN .)
    break           reduce using rule 25 (INSTRUCCION -> FORIN .)
    while           reduce using rule 25 (INSTRUCCION -> FORIN .)
    i64             reduce using rule 25 (INSTRUCCION -> FORIN .)
    f64             reduce using rule 25 (INSTRUCCION -> FORIN .)
    menos           reduce using rule 25 (INSTRUCCION -> FORIN .)
    not             reduce using rule 25 (INSTRUCCION -> FORIN .)
    para            reduce using rule 25 (INSTRUCCION -> FORIN .)
    fn              reduce using rule 25 (INSTRUCCION -> FORIN .)
    for             reduce using rule 25 (INSTRUCCION -> FORIN .)
    struct          reduce using rule 25 (INSTRUCCION -> FORIN .)
    modulo          reduce using rule 25 (INSTRUCCION -> FORIN .)
    entero          reduce using rule 25 (INSTRUCCION -> FORIN .)
    decimal         reduce using rule 25 (INSTRUCCION -> FORIN .)
    cadena          reduce using rule 25 (INSTRUCCION -> FORIN .)
    true            reduce using rule 25 (INSTRUCCION -> FORIN .)
    false           reduce using rule 25 (INSTRUCCION -> FORIN .)
    caracter        reduce using rule 25 (INSTRUCCION -> FORIN .)
    loop            reduce using rule 25 (INSTRUCCION -> FORIN .)


state 91

    (26) INSTRUCCION -> STRUCT .

    llavec          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    println         reduce using rule 26 (INSTRUCCION -> STRUCT .)
    let             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    id              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    if              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    match           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    continue        reduce using rule 26 (INSTRUCCION -> STRUCT .)
    return          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    break           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    while           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    i64             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    f64             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    menos           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    not             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    para            reduce using rule 26 (INSTRUCCION -> STRUCT .)
    fn              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    for             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    struct          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    modulo          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    entero          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    decimal         reduce using rule 26 (INSTRUCCION -> STRUCT .)
    cadena          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    true            reduce using rule 26 (INSTRUCCION -> STRUCT .)
    false           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    caracter        reduce using rule 26 (INSTRUCCION -> STRUCT .)
    loop            reduce using rule 26 (INSTRUCCION -> STRUCT .)


state 92

    (27) INSTRUCCION -> DECSTRUCT . puntoycoma

    puntoycoma      shift and go to state 190


state 93

    (28) INSTRUCCION -> MOD_VAR_STRUCT . puntoycoma

    puntoycoma      shift and go to state 191


state 94

    (29) INSTRUCCION -> REMOVE . puntoycoma
    (61) EXPRESION -> REMOVE .

    puntoycoma      shift and go to state 192
    mas             reduce using rule 61 (EXPRESION -> REMOVE .)
    menos           reduce using rule 61 (EXPRESION -> REMOVE .)
    div             reduce using rule 61 (EXPRESION -> REMOVE .)
    multi           reduce using rule 61 (EXPRESION -> REMOVE .)
    mod             reduce using rule 61 (EXPRESION -> REMOVE .)
    mayor           reduce using rule 61 (EXPRESION -> REMOVE .)
    menor           reduce using rule 61 (EXPRESION -> REMOVE .)
    mayorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    menorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    igualigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    diferente       reduce using rule 61 (EXPRESION -> REMOVE .)
    and             reduce using rule 61 (EXPRESION -> REMOVE .)
    or              reduce using rule 61 (EXPRESION -> REMOVE .)
    as              reduce using rule 61 (EXPRESION -> REMOVE .)
    punto           reduce using rule 61 (EXPRESION -> REMOVE .)
    llavec          reduce using rule 61 (EXPRESION -> REMOVE .)
    println         reduce using rule 61 (EXPRESION -> REMOVE .)
    let             reduce using rule 61 (EXPRESION -> REMOVE .)
    id              reduce using rule 61 (EXPRESION -> REMOVE .)
    if              reduce using rule 61 (EXPRESION -> REMOVE .)
    match           reduce using rule 61 (EXPRESION -> REMOVE .)
    continue        reduce using rule 61 (EXPRESION -> REMOVE .)
    return          reduce using rule 61 (EXPRESION -> REMOVE .)
    break           reduce using rule 61 (EXPRESION -> REMOVE .)
    while           reduce using rule 61 (EXPRESION -> REMOVE .)
    i64             reduce using rule 61 (EXPRESION -> REMOVE .)
    f64             reduce using rule 61 (EXPRESION -> REMOVE .)
    not             reduce using rule 61 (EXPRESION -> REMOVE .)
    para            reduce using rule 61 (EXPRESION -> REMOVE .)
    fn              reduce using rule 61 (EXPRESION -> REMOVE .)
    for             reduce using rule 61 (EXPRESION -> REMOVE .)
    struct          reduce using rule 61 (EXPRESION -> REMOVE .)
    modulo          reduce using rule 61 (EXPRESION -> REMOVE .)
    entero          reduce using rule 61 (EXPRESION -> REMOVE .)
    decimal         reduce using rule 61 (EXPRESION -> REMOVE .)
    cadena          reduce using rule 61 (EXPRESION -> REMOVE .)
    true            reduce using rule 61 (EXPRESION -> REMOVE .)
    false           reduce using rule 61 (EXPRESION -> REMOVE .)
    caracter        reduce using rule 61 (EXPRESION -> REMOVE .)
    loop            reduce using rule 61 (EXPRESION -> REMOVE .)


state 95

    (30) INSTRUCCION -> MODULO .

    llavec          reduce using rule 30 (INSTRUCCION -> MODULO .)
    println         reduce using rule 30 (INSTRUCCION -> MODULO .)
    let             reduce using rule 30 (INSTRUCCION -> MODULO .)
    id              reduce using rule 30 (INSTRUCCION -> MODULO .)
    if              reduce using rule 30 (INSTRUCCION -> MODULO .)
    match           reduce using rule 30 (INSTRUCCION -> MODULO .)
    continue        reduce using rule 30 (INSTRUCCION -> MODULO .)
    return          reduce using rule 30 (INSTRUCCION -> MODULO .)
    break           reduce using rule 30 (INSTRUCCION -> MODULO .)
    while           reduce using rule 30 (INSTRUCCION -> MODULO .)
    i64             reduce using rule 30 (INSTRUCCION -> MODULO .)
    f64             reduce using rule 30 (INSTRUCCION -> MODULO .)
    menos           reduce using rule 30 (INSTRUCCION -> MODULO .)
    not             reduce using rule 30 (INSTRUCCION -> MODULO .)
    para            reduce using rule 30 (INSTRUCCION -> MODULO .)
    fn              reduce using rule 30 (INSTRUCCION -> MODULO .)
    for             reduce using rule 30 (INSTRUCCION -> MODULO .)
    struct          reduce using rule 30 (INSTRUCCION -> MODULO .)
    modulo          reduce using rule 30 (INSTRUCCION -> MODULO .)
    entero          reduce using rule 30 (INSTRUCCION -> MODULO .)
    decimal         reduce using rule 30 (INSTRUCCION -> MODULO .)
    cadena          reduce using rule 30 (INSTRUCCION -> MODULO .)
    true            reduce using rule 30 (INSTRUCCION -> MODULO .)
    false           reduce using rule 30 (INSTRUCCION -> MODULO .)
    caracter        reduce using rule 30 (INSTRUCCION -> MODULO .)
    loop            reduce using rule 30 (INSTRUCCION -> MODULO .)


state 96

    (31) INSTRUCCION -> ACCESO_MOD . puntoycoma
    (67) EXPRESION -> ACCESO_MOD .

    puntoycoma      shift and go to state 193
    mas             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    llavec          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)


state 97

    (114) PRINT -> println . para EXPRESION parc
    (115) PRINT -> println . para EXPRESION coma CONJEXP parc

    para            shift and go to state 194


state 98

    (49) EXPRESION -> para . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 195
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 99

    (116) DECLARACION -> let . mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let . mut id igual EXPRESION
    (118) DECLARACION -> let . id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> let . id igual EXPRESION
    (120) DECLARACION -> let . mut id dospuntos TIPOVAR
    (174) DECVECTOR -> let . id igual VECI
    (175) DECVECTOR -> let . mut id igual VECI
    (176) DECVECTOR -> let . id dospuntos VEC igual VECI
    (177) DECVECTOR -> let . mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> let . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> let . mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> let . id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let . mut id igual Vec dospuntos dospuntos FUNCVEC
    (206) DECARREGLO -> let . id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> let . mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> let . id igual ARREGLO
    (209) DECARREGLO -> let . mut id igual ARREGLO
    (235) DECSTRUCT -> let . id igual STRUCT_EXP
    (236) DECSTRUCT -> let . mut id igual STRUCT_EXP
    (237) DECSTRUCT -> let . id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> let . mut id dospuntos id igual STRUCT_EXP

    mut             shift and go to state 197
    id              shift and go to state 198


state 100

    (121) ASIGNACION -> id . igual EXPRESION
    (122) ASIGNACION -> id . INDEXS igual EXPRESION
    (123) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> id . igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> id . igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (193) PUSH -> id . punto push para EXPRESION parc
    (194) PUSH -> id . punto push para VECI parc
    (195) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    igual           shift and go to state 199
    para            shift and go to state 203
    punto           shift and go to state 201
    dospuntos       shift and go to state 202
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    llavec          reduce using rule 80 (ID -> id .)
    println         reduce using rule 80 (ID -> id .)
    let             reduce using rule 80 (ID -> id .)
    id              reduce using rule 80 (ID -> id .)
    if              reduce using rule 80 (ID -> id .)
    match           reduce using rule 80 (ID -> id .)
    continue        reduce using rule 80 (ID -> id .)
    return          reduce using rule 80 (ID -> id .)
    break           reduce using rule 80 (ID -> id .)
    while           reduce using rule 80 (ID -> id .)
    i64             reduce using rule 80 (ID -> id .)
    f64             reduce using rule 80 (ID -> id .)
    not             reduce using rule 80 (ID -> id .)
    fn              reduce using rule 80 (ID -> id .)
    for             reduce using rule 80 (ID -> id .)
    struct          reduce using rule 80 (ID -> id .)
    modulo          reduce using rule 80 (ID -> id .)
    entero          reduce using rule 80 (ID -> id .)
    decimal         reduce using rule 80 (ID -> id .)
    cadena          reduce using rule 80 (ID -> id .)
    true            reduce using rule 80 (ID -> id .)
    false           reduce using rule 80 (ID -> id .)
    caracter        reduce using rule 80 (ID -> id .)
    loop            reduce using rule 80 (ID -> id .)
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]
  ! para            [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 200

state 101

    (126) IF -> if . EXPRESION BLOQUE_INST
    (127) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> if . EXPRESION BLOQUE_INST else IF
    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 205
    IF_TER                         shift and go to state 113
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 102

    (129) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match . EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match . EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (97) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 206
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 103

    (151) CONTINUE -> continue .

    puntoycoma      reduce using rule 151 (CONTINUE -> continue .)


state 104

    (152) RETURN -> return . EXPRESION
    (153) RETURN -> return .
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    puntoycoma      reduce using rule 153 (RETURN -> return .)
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 207
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 105

    (149) BREAK -> break .
    (150) BREAK -> break . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    puntoycoma      reduce using rule 149 (BREAK -> break .)
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 208
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 106

    (154) WHILE -> while . EXPRESION BLOQUE_INST
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 209
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 107

    (39) EXPRESION -> menos . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 210
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 108

    (37) EXPRESION -> i64 . dospuntos dospuntos pow para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 211


state 109

    (38) EXPRESION -> f64 . dospuntos dospuntos powf para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 212


state 110

    (48) EXPRESION -> not . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 213
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 111

    (50) EXPRESION -> TIPODATO .

    mas             reduce using rule 50 (EXPRESION -> TIPODATO .)
    menos           reduce using rule 50 (EXPRESION -> TIPODATO .)
    div             reduce using rule 50 (EXPRESION -> TIPODATO .)
    multi           reduce using rule 50 (EXPRESION -> TIPODATO .)
    mod             reduce using rule 50 (EXPRESION -> TIPODATO .)
    mayor           reduce using rule 50 (EXPRESION -> TIPODATO .)
    menor           reduce using rule 50 (EXPRESION -> TIPODATO .)
    mayorigual      reduce using rule 50 (EXPRESION -> TIPODATO .)
    menorigual      reduce using rule 50 (EXPRESION -> TIPODATO .)
    igualigual      reduce using rule 50 (EXPRESION -> TIPODATO .)
    diferente       reduce using rule 50 (EXPRESION -> TIPODATO .)
    and             reduce using rule 50 (EXPRESION -> TIPODATO .)
    or              reduce using rule 50 (EXPRESION -> TIPODATO .)
    as              reduce using rule 50 (EXPRESION -> TIPODATO .)
    punto           reduce using rule 50 (EXPRESION -> TIPODATO .)
    llavec          reduce using rule 50 (EXPRESION -> TIPODATO .)
    println         reduce using rule 50 (EXPRESION -> TIPODATO .)
    let             reduce using rule 50 (EXPRESION -> TIPODATO .)
    id              reduce using rule 50 (EXPRESION -> TIPODATO .)
    if              reduce using rule 50 (EXPRESION -> TIPODATO .)
    match           reduce using rule 50 (EXPRESION -> TIPODATO .)
    continue        reduce using rule 50 (EXPRESION -> TIPODATO .)
    return          reduce using rule 50 (EXPRESION -> TIPODATO .)
    break           reduce using rule 50 (EXPRESION -> TIPODATO .)
    while           reduce using rule 50 (EXPRESION -> TIPODATO .)
    i64             reduce using rule 50 (EXPRESION -> TIPODATO .)
    f64             reduce using rule 50 (EXPRESION -> TIPODATO .)
    not             reduce using rule 50 (EXPRESION -> TIPODATO .)
    para            reduce using rule 50 (EXPRESION -> TIPODATO .)
    fn              reduce using rule 50 (EXPRESION -> TIPODATO .)
    for             reduce using rule 50 (EXPRESION -> TIPODATO .)
    struct          reduce using rule 50 (EXPRESION -> TIPODATO .)
    modulo          reduce using rule 50 (EXPRESION -> TIPODATO .)
    entero          reduce using rule 50 (EXPRESION -> TIPODATO .)
    decimal         reduce using rule 50 (EXPRESION -> TIPODATO .)
    cadena          reduce using rule 50 (EXPRESION -> TIPODATO .)
    true            reduce using rule 50 (EXPRESION -> TIPODATO .)
    false           reduce using rule 50 (EXPRESION -> TIPODATO .)
    caracter        reduce using rule 50 (EXPRESION -> TIPODATO .)
    loop            reduce using rule 50 (EXPRESION -> TIPODATO .)
    pub             reduce using rule 50 (EXPRESION -> TIPODATO .)
    coma            reduce using rule 50 (EXPRESION -> TIPODATO .)
    parc            reduce using rule 50 (EXPRESION -> TIPODATO .)
    llavea          reduce using rule 50 (EXPRESION -> TIPODATO .)
    puntoycoma      reduce using rule 50 (EXPRESION -> TIPODATO .)
    corc            reduce using rule 50 (EXPRESION -> TIPODATO .)
    igual           reduce using rule 50 (EXPRESION -> TIPODATO .)
    bvertical       reduce using rule 50 (EXPRESION -> TIPODATO .)


state 112

    (51) EXPRESION -> ID .

    mas             reduce using rule 51 (EXPRESION -> ID .)
    menos           reduce using rule 51 (EXPRESION -> ID .)
    div             reduce using rule 51 (EXPRESION -> ID .)
    multi           reduce using rule 51 (EXPRESION -> ID .)
    mod             reduce using rule 51 (EXPRESION -> ID .)
    mayor           reduce using rule 51 (EXPRESION -> ID .)
    menor           reduce using rule 51 (EXPRESION -> ID .)
    mayorigual      reduce using rule 51 (EXPRESION -> ID .)
    menorigual      reduce using rule 51 (EXPRESION -> ID .)
    igualigual      reduce using rule 51 (EXPRESION -> ID .)
    diferente       reduce using rule 51 (EXPRESION -> ID .)
    and             reduce using rule 51 (EXPRESION -> ID .)
    or              reduce using rule 51 (EXPRESION -> ID .)
    as              reduce using rule 51 (EXPRESION -> ID .)
    punto           reduce using rule 51 (EXPRESION -> ID .)
    llavec          reduce using rule 51 (EXPRESION -> ID .)
    println         reduce using rule 51 (EXPRESION -> ID .)
    let             reduce using rule 51 (EXPRESION -> ID .)
    id              reduce using rule 51 (EXPRESION -> ID .)
    if              reduce using rule 51 (EXPRESION -> ID .)
    match           reduce using rule 51 (EXPRESION -> ID .)
    continue        reduce using rule 51 (EXPRESION -> ID .)
    return          reduce using rule 51 (EXPRESION -> ID .)
    break           reduce using rule 51 (EXPRESION -> ID .)
    while           reduce using rule 51 (EXPRESION -> ID .)
    i64             reduce using rule 51 (EXPRESION -> ID .)
    f64             reduce using rule 51 (EXPRESION -> ID .)
    not             reduce using rule 51 (EXPRESION -> ID .)
    para            reduce using rule 51 (EXPRESION -> ID .)
    fn              reduce using rule 51 (EXPRESION -> ID .)
    for             reduce using rule 51 (EXPRESION -> ID .)
    struct          reduce using rule 51 (EXPRESION -> ID .)
    modulo          reduce using rule 51 (EXPRESION -> ID .)
    entero          reduce using rule 51 (EXPRESION -> ID .)
    decimal         reduce using rule 51 (EXPRESION -> ID .)
    cadena          reduce using rule 51 (EXPRESION -> ID .)
    true            reduce using rule 51 (EXPRESION -> ID .)
    false           reduce using rule 51 (EXPRESION -> ID .)
    caracter        reduce using rule 51 (EXPRESION -> ID .)
    loop            reduce using rule 51 (EXPRESION -> ID .)
    pub             reduce using rule 51 (EXPRESION -> ID .)
    coma            reduce using rule 51 (EXPRESION -> ID .)
    parc            reduce using rule 51 (EXPRESION -> ID .)
    llavea          reduce using rule 51 (EXPRESION -> ID .)
    puntoycoma      reduce using rule 51 (EXPRESION -> ID .)
    corc            reduce using rule 51 (EXPRESION -> ID .)
    igual           reduce using rule 51 (EXPRESION -> ID .)
    bvertical       reduce using rule 51 (EXPRESION -> ID .)


state 113

    (52) EXPRESION -> IF_TER .

    mas             reduce using rule 52 (EXPRESION -> IF_TER .)
    menos           reduce using rule 52 (EXPRESION -> IF_TER .)
    div             reduce using rule 52 (EXPRESION -> IF_TER .)
    multi           reduce using rule 52 (EXPRESION -> IF_TER .)
    mod             reduce using rule 52 (EXPRESION -> IF_TER .)
    mayor           reduce using rule 52 (EXPRESION -> IF_TER .)
    menor           reduce using rule 52 (EXPRESION -> IF_TER .)
    mayorigual      reduce using rule 52 (EXPRESION -> IF_TER .)
    menorigual      reduce using rule 52 (EXPRESION -> IF_TER .)
    igualigual      reduce using rule 52 (EXPRESION -> IF_TER .)
    diferente       reduce using rule 52 (EXPRESION -> IF_TER .)
    and             reduce using rule 52 (EXPRESION -> IF_TER .)
    or              reduce using rule 52 (EXPRESION -> IF_TER .)
    as              reduce using rule 52 (EXPRESION -> IF_TER .)
    punto           reduce using rule 52 (EXPRESION -> IF_TER .)
    llavec          reduce using rule 52 (EXPRESION -> IF_TER .)
    println         reduce using rule 52 (EXPRESION -> IF_TER .)
    let             reduce using rule 52 (EXPRESION -> IF_TER .)
    id              reduce using rule 52 (EXPRESION -> IF_TER .)
    if              reduce using rule 52 (EXPRESION -> IF_TER .)
    match           reduce using rule 52 (EXPRESION -> IF_TER .)
    continue        reduce using rule 52 (EXPRESION -> IF_TER .)
    return          reduce using rule 52 (EXPRESION -> IF_TER .)
    break           reduce using rule 52 (EXPRESION -> IF_TER .)
    while           reduce using rule 52 (EXPRESION -> IF_TER .)
    i64             reduce using rule 52 (EXPRESION -> IF_TER .)
    f64             reduce using rule 52 (EXPRESION -> IF_TER .)
    not             reduce using rule 52 (EXPRESION -> IF_TER .)
    para            reduce using rule 52 (EXPRESION -> IF_TER .)
    fn              reduce using rule 52 (EXPRESION -> IF_TER .)
    for             reduce using rule 52 (EXPRESION -> IF_TER .)
    struct          reduce using rule 52 (EXPRESION -> IF_TER .)
    modulo          reduce using rule 52 (EXPRESION -> IF_TER .)
    entero          reduce using rule 52 (EXPRESION -> IF_TER .)
    decimal         reduce using rule 52 (EXPRESION -> IF_TER .)
    cadena          reduce using rule 52 (EXPRESION -> IF_TER .)
    true            reduce using rule 52 (EXPRESION -> IF_TER .)
    false           reduce using rule 52 (EXPRESION -> IF_TER .)
    caracter        reduce using rule 52 (EXPRESION -> IF_TER .)
    loop            reduce using rule 52 (EXPRESION -> IF_TER .)
    pub             reduce using rule 52 (EXPRESION -> IF_TER .)
    coma            reduce using rule 52 (EXPRESION -> IF_TER .)
    parc            reduce using rule 52 (EXPRESION -> IF_TER .)
    llavea          reduce using rule 52 (EXPRESION -> IF_TER .)
    puntoycoma      reduce using rule 52 (EXPRESION -> IF_TER .)
    corc            reduce using rule 52 (EXPRESION -> IF_TER .)
    igual           reduce using rule 52 (EXPRESION -> IF_TER .)
    bvertical       reduce using rule 52 (EXPRESION -> IF_TER .)


state 114

    (53) EXPRESION -> MATCH_TER .

    mas             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    menos           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    div             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    multi           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    mod             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    mayor           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    menor           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    mayorigual      reduce using rule 53 (EXPRESION -> MATCH_TER .)
    menorigual      reduce using rule 53 (EXPRESION -> MATCH_TER .)
    igualigual      reduce using rule 53 (EXPRESION -> MATCH_TER .)
    diferente       reduce using rule 53 (EXPRESION -> MATCH_TER .)
    and             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    or              reduce using rule 53 (EXPRESION -> MATCH_TER .)
    as              reduce using rule 53 (EXPRESION -> MATCH_TER .)
    punto           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    llavec          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    println         reduce using rule 53 (EXPRESION -> MATCH_TER .)
    let             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    id              reduce using rule 53 (EXPRESION -> MATCH_TER .)
    if              reduce using rule 53 (EXPRESION -> MATCH_TER .)
    match           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    continue        reduce using rule 53 (EXPRESION -> MATCH_TER .)
    return          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    break           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    while           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    i64             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    f64             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    not             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    para            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    fn              reduce using rule 53 (EXPRESION -> MATCH_TER .)
    for             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    struct          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    modulo          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    entero          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    decimal         reduce using rule 53 (EXPRESION -> MATCH_TER .)
    cadena          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    true            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    false           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    caracter        reduce using rule 53 (EXPRESION -> MATCH_TER .)
    loop            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    pub             reduce using rule 53 (EXPRESION -> MATCH_TER .)
    coma            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    parc            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    llavea          reduce using rule 53 (EXPRESION -> MATCH_TER .)
    puntoycoma      reduce using rule 53 (EXPRESION -> MATCH_TER .)
    corc            reduce using rule 53 (EXPRESION -> MATCH_TER .)
    igual           reduce using rule 53 (EXPRESION -> MATCH_TER .)
    bvertical       reduce using rule 53 (EXPRESION -> MATCH_TER .)


state 115

    (54) EXPRESION -> LOOP .

    mas             reduce using rule 54 (EXPRESION -> LOOP .)
    menos           reduce using rule 54 (EXPRESION -> LOOP .)
    div             reduce using rule 54 (EXPRESION -> LOOP .)
    multi           reduce using rule 54 (EXPRESION -> LOOP .)
    mod             reduce using rule 54 (EXPRESION -> LOOP .)
    mayor           reduce using rule 54 (EXPRESION -> LOOP .)
    menor           reduce using rule 54 (EXPRESION -> LOOP .)
    mayorigual      reduce using rule 54 (EXPRESION -> LOOP .)
    menorigual      reduce using rule 54 (EXPRESION -> LOOP .)
    igualigual      reduce using rule 54 (EXPRESION -> LOOP .)
    diferente       reduce using rule 54 (EXPRESION -> LOOP .)
    and             reduce using rule 54 (EXPRESION -> LOOP .)
    or              reduce using rule 54 (EXPRESION -> LOOP .)
    as              reduce using rule 54 (EXPRESION -> LOOP .)
    punto           reduce using rule 54 (EXPRESION -> LOOP .)
    llavec          reduce using rule 54 (EXPRESION -> LOOP .)
    println         reduce using rule 54 (EXPRESION -> LOOP .)
    let             reduce using rule 54 (EXPRESION -> LOOP .)
    id              reduce using rule 54 (EXPRESION -> LOOP .)
    if              reduce using rule 54 (EXPRESION -> LOOP .)
    match           reduce using rule 54 (EXPRESION -> LOOP .)
    continue        reduce using rule 54 (EXPRESION -> LOOP .)
    return          reduce using rule 54 (EXPRESION -> LOOP .)
    break           reduce using rule 54 (EXPRESION -> LOOP .)
    while           reduce using rule 54 (EXPRESION -> LOOP .)
    i64             reduce using rule 54 (EXPRESION -> LOOP .)
    f64             reduce using rule 54 (EXPRESION -> LOOP .)
    not             reduce using rule 54 (EXPRESION -> LOOP .)
    para            reduce using rule 54 (EXPRESION -> LOOP .)
    fn              reduce using rule 54 (EXPRESION -> LOOP .)
    for             reduce using rule 54 (EXPRESION -> LOOP .)
    struct          reduce using rule 54 (EXPRESION -> LOOP .)
    modulo          reduce using rule 54 (EXPRESION -> LOOP .)
    entero          reduce using rule 54 (EXPRESION -> LOOP .)
    decimal         reduce using rule 54 (EXPRESION -> LOOP .)
    cadena          reduce using rule 54 (EXPRESION -> LOOP .)
    true            reduce using rule 54 (EXPRESION -> LOOP .)
    false           reduce using rule 54 (EXPRESION -> LOOP .)
    caracter        reduce using rule 54 (EXPRESION -> LOOP .)
    loop            reduce using rule 54 (EXPRESION -> LOOP .)
    pub             reduce using rule 54 (EXPRESION -> LOOP .)
    coma            reduce using rule 54 (EXPRESION -> LOOP .)
    parc            reduce using rule 54 (EXPRESION -> LOOP .)
    llavea          reduce using rule 54 (EXPRESION -> LOOP .)
    puntoycoma      reduce using rule 54 (EXPRESION -> LOOP .)
    corc            reduce using rule 54 (EXPRESION -> LOOP .)
    igual           reduce using rule 54 (EXPRESION -> LOOP .)
    bvertical       reduce using rule 54 (EXPRESION -> LOOP .)


state 116

    (55) EXPRESION -> CAST_AS .

    mas             reduce using rule 55 (EXPRESION -> CAST_AS .)
    menos           reduce using rule 55 (EXPRESION -> CAST_AS .)
    div             reduce using rule 55 (EXPRESION -> CAST_AS .)
    multi           reduce using rule 55 (EXPRESION -> CAST_AS .)
    mod             reduce using rule 55 (EXPRESION -> CAST_AS .)
    mayor           reduce using rule 55 (EXPRESION -> CAST_AS .)
    menor           reduce using rule 55 (EXPRESION -> CAST_AS .)
    mayorigual      reduce using rule 55 (EXPRESION -> CAST_AS .)
    menorigual      reduce using rule 55 (EXPRESION -> CAST_AS .)
    igualigual      reduce using rule 55 (EXPRESION -> CAST_AS .)
    diferente       reduce using rule 55 (EXPRESION -> CAST_AS .)
    and             reduce using rule 55 (EXPRESION -> CAST_AS .)
    or              reduce using rule 55 (EXPRESION -> CAST_AS .)
    as              reduce using rule 55 (EXPRESION -> CAST_AS .)
    punto           reduce using rule 55 (EXPRESION -> CAST_AS .)
    llavec          reduce using rule 55 (EXPRESION -> CAST_AS .)
    println         reduce using rule 55 (EXPRESION -> CAST_AS .)
    let             reduce using rule 55 (EXPRESION -> CAST_AS .)
    id              reduce using rule 55 (EXPRESION -> CAST_AS .)
    if              reduce using rule 55 (EXPRESION -> CAST_AS .)
    match           reduce using rule 55 (EXPRESION -> CAST_AS .)
    continue        reduce using rule 55 (EXPRESION -> CAST_AS .)
    return          reduce using rule 55 (EXPRESION -> CAST_AS .)
    break           reduce using rule 55 (EXPRESION -> CAST_AS .)
    while           reduce using rule 55 (EXPRESION -> CAST_AS .)
    i64             reduce using rule 55 (EXPRESION -> CAST_AS .)
    f64             reduce using rule 55 (EXPRESION -> CAST_AS .)
    not             reduce using rule 55 (EXPRESION -> CAST_AS .)
    para            reduce using rule 55 (EXPRESION -> CAST_AS .)
    fn              reduce using rule 55 (EXPRESION -> CAST_AS .)
    for             reduce using rule 55 (EXPRESION -> CAST_AS .)
    struct          reduce using rule 55 (EXPRESION -> CAST_AS .)
    modulo          reduce using rule 55 (EXPRESION -> CAST_AS .)
    entero          reduce using rule 55 (EXPRESION -> CAST_AS .)
    decimal         reduce using rule 55 (EXPRESION -> CAST_AS .)
    cadena          reduce using rule 55 (EXPRESION -> CAST_AS .)
    true            reduce using rule 55 (EXPRESION -> CAST_AS .)
    false           reduce using rule 55 (EXPRESION -> CAST_AS .)
    caracter        reduce using rule 55 (EXPRESION -> CAST_AS .)
    loop            reduce using rule 55 (EXPRESION -> CAST_AS .)
    pub             reduce using rule 55 (EXPRESION -> CAST_AS .)
    coma            reduce using rule 55 (EXPRESION -> CAST_AS .)
    parc            reduce using rule 55 (EXPRESION -> CAST_AS .)
    llavea          reduce using rule 55 (EXPRESION -> CAST_AS .)
    puntoycoma      reduce using rule 55 (EXPRESION -> CAST_AS .)
    corc            reduce using rule 55 (EXPRESION -> CAST_AS .)
    igual           reduce using rule 55 (EXPRESION -> CAST_AS .)
    bvertical       reduce using rule 55 (EXPRESION -> CAST_AS .)


state 117

    (56) EXPRESION -> ABS .

    mas             reduce using rule 56 (EXPRESION -> ABS .)
    menos           reduce using rule 56 (EXPRESION -> ABS .)
    div             reduce using rule 56 (EXPRESION -> ABS .)
    multi           reduce using rule 56 (EXPRESION -> ABS .)
    mod             reduce using rule 56 (EXPRESION -> ABS .)
    mayor           reduce using rule 56 (EXPRESION -> ABS .)
    menor           reduce using rule 56 (EXPRESION -> ABS .)
    mayorigual      reduce using rule 56 (EXPRESION -> ABS .)
    menorigual      reduce using rule 56 (EXPRESION -> ABS .)
    igualigual      reduce using rule 56 (EXPRESION -> ABS .)
    diferente       reduce using rule 56 (EXPRESION -> ABS .)
    and             reduce using rule 56 (EXPRESION -> ABS .)
    or              reduce using rule 56 (EXPRESION -> ABS .)
    as              reduce using rule 56 (EXPRESION -> ABS .)
    punto           reduce using rule 56 (EXPRESION -> ABS .)
    llavec          reduce using rule 56 (EXPRESION -> ABS .)
    println         reduce using rule 56 (EXPRESION -> ABS .)
    let             reduce using rule 56 (EXPRESION -> ABS .)
    id              reduce using rule 56 (EXPRESION -> ABS .)
    if              reduce using rule 56 (EXPRESION -> ABS .)
    match           reduce using rule 56 (EXPRESION -> ABS .)
    continue        reduce using rule 56 (EXPRESION -> ABS .)
    return          reduce using rule 56 (EXPRESION -> ABS .)
    break           reduce using rule 56 (EXPRESION -> ABS .)
    while           reduce using rule 56 (EXPRESION -> ABS .)
    i64             reduce using rule 56 (EXPRESION -> ABS .)
    f64             reduce using rule 56 (EXPRESION -> ABS .)
    not             reduce using rule 56 (EXPRESION -> ABS .)
    para            reduce using rule 56 (EXPRESION -> ABS .)
    fn              reduce using rule 56 (EXPRESION -> ABS .)
    for             reduce using rule 56 (EXPRESION -> ABS .)
    struct          reduce using rule 56 (EXPRESION -> ABS .)
    modulo          reduce using rule 56 (EXPRESION -> ABS .)
    entero          reduce using rule 56 (EXPRESION -> ABS .)
    decimal         reduce using rule 56 (EXPRESION -> ABS .)
    cadena          reduce using rule 56 (EXPRESION -> ABS .)
    true            reduce using rule 56 (EXPRESION -> ABS .)
    false           reduce using rule 56 (EXPRESION -> ABS .)
    caracter        reduce using rule 56 (EXPRESION -> ABS .)
    loop            reduce using rule 56 (EXPRESION -> ABS .)
    pub             reduce using rule 56 (EXPRESION -> ABS .)
    coma            reduce using rule 56 (EXPRESION -> ABS .)
    parc            reduce using rule 56 (EXPRESION -> ABS .)
    llavea          reduce using rule 56 (EXPRESION -> ABS .)
    puntoycoma      reduce using rule 56 (EXPRESION -> ABS .)
    corc            reduce using rule 56 (EXPRESION -> ABS .)
    igual           reduce using rule 56 (EXPRESION -> ABS .)
    bvertical       reduce using rule 56 (EXPRESION -> ABS .)


state 118

    (57) EXPRESION -> CLONE .

    mas             reduce using rule 57 (EXPRESION -> CLONE .)
    menos           reduce using rule 57 (EXPRESION -> CLONE .)
    div             reduce using rule 57 (EXPRESION -> CLONE .)
    multi           reduce using rule 57 (EXPRESION -> CLONE .)
    mod             reduce using rule 57 (EXPRESION -> CLONE .)
    mayor           reduce using rule 57 (EXPRESION -> CLONE .)
    menor           reduce using rule 57 (EXPRESION -> CLONE .)
    mayorigual      reduce using rule 57 (EXPRESION -> CLONE .)
    menorigual      reduce using rule 57 (EXPRESION -> CLONE .)
    igualigual      reduce using rule 57 (EXPRESION -> CLONE .)
    diferente       reduce using rule 57 (EXPRESION -> CLONE .)
    and             reduce using rule 57 (EXPRESION -> CLONE .)
    or              reduce using rule 57 (EXPRESION -> CLONE .)
    as              reduce using rule 57 (EXPRESION -> CLONE .)
    punto           reduce using rule 57 (EXPRESION -> CLONE .)
    llavec          reduce using rule 57 (EXPRESION -> CLONE .)
    println         reduce using rule 57 (EXPRESION -> CLONE .)
    let             reduce using rule 57 (EXPRESION -> CLONE .)
    id              reduce using rule 57 (EXPRESION -> CLONE .)
    if              reduce using rule 57 (EXPRESION -> CLONE .)
    match           reduce using rule 57 (EXPRESION -> CLONE .)
    continue        reduce using rule 57 (EXPRESION -> CLONE .)
    return          reduce using rule 57 (EXPRESION -> CLONE .)
    break           reduce using rule 57 (EXPRESION -> CLONE .)
    while           reduce using rule 57 (EXPRESION -> CLONE .)
    i64             reduce using rule 57 (EXPRESION -> CLONE .)
    f64             reduce using rule 57 (EXPRESION -> CLONE .)
    not             reduce using rule 57 (EXPRESION -> CLONE .)
    para            reduce using rule 57 (EXPRESION -> CLONE .)
    fn              reduce using rule 57 (EXPRESION -> CLONE .)
    for             reduce using rule 57 (EXPRESION -> CLONE .)
    struct          reduce using rule 57 (EXPRESION -> CLONE .)
    modulo          reduce using rule 57 (EXPRESION -> CLONE .)
    entero          reduce using rule 57 (EXPRESION -> CLONE .)
    decimal         reduce using rule 57 (EXPRESION -> CLONE .)
    cadena          reduce using rule 57 (EXPRESION -> CLONE .)
    true            reduce using rule 57 (EXPRESION -> CLONE .)
    false           reduce using rule 57 (EXPRESION -> CLONE .)
    caracter        reduce using rule 57 (EXPRESION -> CLONE .)
    loop            reduce using rule 57 (EXPRESION -> CLONE .)
    pub             reduce using rule 57 (EXPRESION -> CLONE .)
    coma            reduce using rule 57 (EXPRESION -> CLONE .)
    parc            reduce using rule 57 (EXPRESION -> CLONE .)
    llavea          reduce using rule 57 (EXPRESION -> CLONE .)
    puntoycoma      reduce using rule 57 (EXPRESION -> CLONE .)
    corc            reduce using rule 57 (EXPRESION -> CLONE .)
    igual           reduce using rule 57 (EXPRESION -> CLONE .)
    bvertical       reduce using rule 57 (EXPRESION -> CLONE .)


state 119

    (58) EXPRESION -> SQRT .

    mas             reduce using rule 58 (EXPRESION -> SQRT .)
    menos           reduce using rule 58 (EXPRESION -> SQRT .)
    div             reduce using rule 58 (EXPRESION -> SQRT .)
    multi           reduce using rule 58 (EXPRESION -> SQRT .)
    mod             reduce using rule 58 (EXPRESION -> SQRT .)
    mayor           reduce using rule 58 (EXPRESION -> SQRT .)
    menor           reduce using rule 58 (EXPRESION -> SQRT .)
    mayorigual      reduce using rule 58 (EXPRESION -> SQRT .)
    menorigual      reduce using rule 58 (EXPRESION -> SQRT .)
    igualigual      reduce using rule 58 (EXPRESION -> SQRT .)
    diferente       reduce using rule 58 (EXPRESION -> SQRT .)
    and             reduce using rule 58 (EXPRESION -> SQRT .)
    or              reduce using rule 58 (EXPRESION -> SQRT .)
    as              reduce using rule 58 (EXPRESION -> SQRT .)
    punto           reduce using rule 58 (EXPRESION -> SQRT .)
    llavec          reduce using rule 58 (EXPRESION -> SQRT .)
    println         reduce using rule 58 (EXPRESION -> SQRT .)
    let             reduce using rule 58 (EXPRESION -> SQRT .)
    id              reduce using rule 58 (EXPRESION -> SQRT .)
    if              reduce using rule 58 (EXPRESION -> SQRT .)
    match           reduce using rule 58 (EXPRESION -> SQRT .)
    continue        reduce using rule 58 (EXPRESION -> SQRT .)
    return          reduce using rule 58 (EXPRESION -> SQRT .)
    break           reduce using rule 58 (EXPRESION -> SQRT .)
    while           reduce using rule 58 (EXPRESION -> SQRT .)
    i64             reduce using rule 58 (EXPRESION -> SQRT .)
    f64             reduce using rule 58 (EXPRESION -> SQRT .)
    not             reduce using rule 58 (EXPRESION -> SQRT .)
    para            reduce using rule 58 (EXPRESION -> SQRT .)
    fn              reduce using rule 58 (EXPRESION -> SQRT .)
    for             reduce using rule 58 (EXPRESION -> SQRT .)
    struct          reduce using rule 58 (EXPRESION -> SQRT .)
    modulo          reduce using rule 58 (EXPRESION -> SQRT .)
    entero          reduce using rule 58 (EXPRESION -> SQRT .)
    decimal         reduce using rule 58 (EXPRESION -> SQRT .)
    cadena          reduce using rule 58 (EXPRESION -> SQRT .)
    true            reduce using rule 58 (EXPRESION -> SQRT .)
    false           reduce using rule 58 (EXPRESION -> SQRT .)
    caracter        reduce using rule 58 (EXPRESION -> SQRT .)
    loop            reduce using rule 58 (EXPRESION -> SQRT .)
    pub             reduce using rule 58 (EXPRESION -> SQRT .)
    coma            reduce using rule 58 (EXPRESION -> SQRT .)
    parc            reduce using rule 58 (EXPRESION -> SQRT .)
    llavea          reduce using rule 58 (EXPRESION -> SQRT .)
    puntoycoma      reduce using rule 58 (EXPRESION -> SQRT .)
    corc            reduce using rule 58 (EXPRESION -> SQRT .)
    igual           reduce using rule 58 (EXPRESION -> SQRT .)
    bvertical       reduce using rule 58 (EXPRESION -> SQRT .)


state 120

    (59) EXPRESION -> TO_STRING_OWNED .

    mas             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    menos           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    div             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    multi           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    mod             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    mayor           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    menor           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    mayorigual      reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    menorigual      reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    igualigual      reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    diferente       reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    and             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    or              reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    as              reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    punto           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    llavec          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    println         reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    let             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    id              reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    if              reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    match           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    continue        reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    return          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    break           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    while           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    i64             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    f64             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    not             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    para            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    fn              reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    for             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    struct          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    modulo          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    entero          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    decimal         reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    cadena          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    true            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    false           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    caracter        reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    loop            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    pub             reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    coma            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    parc            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    llavea          reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    puntoycoma      reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    corc            reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    igual           reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)
    bvertical       reduce using rule 59 (EXPRESION -> TO_STRING_OWNED .)


state 121

    (62) EXPRESION -> CONTAINS .

    mas             reduce using rule 62 (EXPRESION -> CONTAINS .)
    menos           reduce using rule 62 (EXPRESION -> CONTAINS .)
    div             reduce using rule 62 (EXPRESION -> CONTAINS .)
    multi           reduce using rule 62 (EXPRESION -> CONTAINS .)
    mod             reduce using rule 62 (EXPRESION -> CONTAINS .)
    mayor           reduce using rule 62 (EXPRESION -> CONTAINS .)
    menor           reduce using rule 62 (EXPRESION -> CONTAINS .)
    mayorigual      reduce using rule 62 (EXPRESION -> CONTAINS .)
    menorigual      reduce using rule 62 (EXPRESION -> CONTAINS .)
    igualigual      reduce using rule 62 (EXPRESION -> CONTAINS .)
    diferente       reduce using rule 62 (EXPRESION -> CONTAINS .)
    and             reduce using rule 62 (EXPRESION -> CONTAINS .)
    or              reduce using rule 62 (EXPRESION -> CONTAINS .)
    as              reduce using rule 62 (EXPRESION -> CONTAINS .)
    punto           reduce using rule 62 (EXPRESION -> CONTAINS .)
    llavec          reduce using rule 62 (EXPRESION -> CONTAINS .)
    println         reduce using rule 62 (EXPRESION -> CONTAINS .)
    let             reduce using rule 62 (EXPRESION -> CONTAINS .)
    id              reduce using rule 62 (EXPRESION -> CONTAINS .)
    if              reduce using rule 62 (EXPRESION -> CONTAINS .)
    match           reduce using rule 62 (EXPRESION -> CONTAINS .)
    continue        reduce using rule 62 (EXPRESION -> CONTAINS .)
    return          reduce using rule 62 (EXPRESION -> CONTAINS .)
    break           reduce using rule 62 (EXPRESION -> CONTAINS .)
    while           reduce using rule 62 (EXPRESION -> CONTAINS .)
    i64             reduce using rule 62 (EXPRESION -> CONTAINS .)
    f64             reduce using rule 62 (EXPRESION -> CONTAINS .)
    not             reduce using rule 62 (EXPRESION -> CONTAINS .)
    para            reduce using rule 62 (EXPRESION -> CONTAINS .)
    fn              reduce using rule 62 (EXPRESION -> CONTAINS .)
    for             reduce using rule 62 (EXPRESION -> CONTAINS .)
    struct          reduce using rule 62 (EXPRESION -> CONTAINS .)
    modulo          reduce using rule 62 (EXPRESION -> CONTAINS .)
    entero          reduce using rule 62 (EXPRESION -> CONTAINS .)
    decimal         reduce using rule 62 (EXPRESION -> CONTAINS .)
    cadena          reduce using rule 62 (EXPRESION -> CONTAINS .)
    true            reduce using rule 62 (EXPRESION -> CONTAINS .)
    false           reduce using rule 62 (EXPRESION -> CONTAINS .)
    caracter        reduce using rule 62 (EXPRESION -> CONTAINS .)
    loop            reduce using rule 62 (EXPRESION -> CONTAINS .)
    pub             reduce using rule 62 (EXPRESION -> CONTAINS .)
    coma            reduce using rule 62 (EXPRESION -> CONTAINS .)
    parc            reduce using rule 62 (EXPRESION -> CONTAINS .)
    llavea          reduce using rule 62 (EXPRESION -> CONTAINS .)
    puntoycoma      reduce using rule 62 (EXPRESION -> CONTAINS .)
    corc            reduce using rule 62 (EXPRESION -> CONTAINS .)
    igual           reduce using rule 62 (EXPRESION -> CONTAINS .)
    bvertical       reduce using rule 62 (EXPRESION -> CONTAINS .)


state 122

    (63) EXPRESION -> LEN .

    mas             reduce using rule 63 (EXPRESION -> LEN .)
    menos           reduce using rule 63 (EXPRESION -> LEN .)
    div             reduce using rule 63 (EXPRESION -> LEN .)
    multi           reduce using rule 63 (EXPRESION -> LEN .)
    mod             reduce using rule 63 (EXPRESION -> LEN .)
    mayor           reduce using rule 63 (EXPRESION -> LEN .)
    menor           reduce using rule 63 (EXPRESION -> LEN .)
    mayorigual      reduce using rule 63 (EXPRESION -> LEN .)
    menorigual      reduce using rule 63 (EXPRESION -> LEN .)
    igualigual      reduce using rule 63 (EXPRESION -> LEN .)
    diferente       reduce using rule 63 (EXPRESION -> LEN .)
    and             reduce using rule 63 (EXPRESION -> LEN .)
    or              reduce using rule 63 (EXPRESION -> LEN .)
    as              reduce using rule 63 (EXPRESION -> LEN .)
    punto           reduce using rule 63 (EXPRESION -> LEN .)
    llavec          reduce using rule 63 (EXPRESION -> LEN .)
    println         reduce using rule 63 (EXPRESION -> LEN .)
    let             reduce using rule 63 (EXPRESION -> LEN .)
    id              reduce using rule 63 (EXPRESION -> LEN .)
    if              reduce using rule 63 (EXPRESION -> LEN .)
    match           reduce using rule 63 (EXPRESION -> LEN .)
    continue        reduce using rule 63 (EXPRESION -> LEN .)
    return          reduce using rule 63 (EXPRESION -> LEN .)
    break           reduce using rule 63 (EXPRESION -> LEN .)
    while           reduce using rule 63 (EXPRESION -> LEN .)
    i64             reduce using rule 63 (EXPRESION -> LEN .)
    f64             reduce using rule 63 (EXPRESION -> LEN .)
    not             reduce using rule 63 (EXPRESION -> LEN .)
    para            reduce using rule 63 (EXPRESION -> LEN .)
    fn              reduce using rule 63 (EXPRESION -> LEN .)
    for             reduce using rule 63 (EXPRESION -> LEN .)
    struct          reduce using rule 63 (EXPRESION -> LEN .)
    modulo          reduce using rule 63 (EXPRESION -> LEN .)
    entero          reduce using rule 63 (EXPRESION -> LEN .)
    decimal         reduce using rule 63 (EXPRESION -> LEN .)
    cadena          reduce using rule 63 (EXPRESION -> LEN .)
    true            reduce using rule 63 (EXPRESION -> LEN .)
    false           reduce using rule 63 (EXPRESION -> LEN .)
    caracter        reduce using rule 63 (EXPRESION -> LEN .)
    loop            reduce using rule 63 (EXPRESION -> LEN .)
    pub             reduce using rule 63 (EXPRESION -> LEN .)
    coma            reduce using rule 63 (EXPRESION -> LEN .)
    parc            reduce using rule 63 (EXPRESION -> LEN .)
    llavea          reduce using rule 63 (EXPRESION -> LEN .)
    puntoycoma      reduce using rule 63 (EXPRESION -> LEN .)
    corc            reduce using rule 63 (EXPRESION -> LEN .)
    igual           reduce using rule 63 (EXPRESION -> LEN .)
    bvertical       reduce using rule 63 (EXPRESION -> LEN .)


state 123

    (64) EXPRESION -> CAPACITY .

    mas             reduce using rule 64 (EXPRESION -> CAPACITY .)
    menos           reduce using rule 64 (EXPRESION -> CAPACITY .)
    div             reduce using rule 64 (EXPRESION -> CAPACITY .)
    multi           reduce using rule 64 (EXPRESION -> CAPACITY .)
    mod             reduce using rule 64 (EXPRESION -> CAPACITY .)
    mayor           reduce using rule 64 (EXPRESION -> CAPACITY .)
    menor           reduce using rule 64 (EXPRESION -> CAPACITY .)
    mayorigual      reduce using rule 64 (EXPRESION -> CAPACITY .)
    menorigual      reduce using rule 64 (EXPRESION -> CAPACITY .)
    igualigual      reduce using rule 64 (EXPRESION -> CAPACITY .)
    diferente       reduce using rule 64 (EXPRESION -> CAPACITY .)
    and             reduce using rule 64 (EXPRESION -> CAPACITY .)
    or              reduce using rule 64 (EXPRESION -> CAPACITY .)
    as              reduce using rule 64 (EXPRESION -> CAPACITY .)
    punto           reduce using rule 64 (EXPRESION -> CAPACITY .)
    llavec          reduce using rule 64 (EXPRESION -> CAPACITY .)
    println         reduce using rule 64 (EXPRESION -> CAPACITY .)
    let             reduce using rule 64 (EXPRESION -> CAPACITY .)
    id              reduce using rule 64 (EXPRESION -> CAPACITY .)
    if              reduce using rule 64 (EXPRESION -> CAPACITY .)
    match           reduce using rule 64 (EXPRESION -> CAPACITY .)
    continue        reduce using rule 64 (EXPRESION -> CAPACITY .)
    return          reduce using rule 64 (EXPRESION -> CAPACITY .)
    break           reduce using rule 64 (EXPRESION -> CAPACITY .)
    while           reduce using rule 64 (EXPRESION -> CAPACITY .)
    i64             reduce using rule 64 (EXPRESION -> CAPACITY .)
    f64             reduce using rule 64 (EXPRESION -> CAPACITY .)
    not             reduce using rule 64 (EXPRESION -> CAPACITY .)
    para            reduce using rule 64 (EXPRESION -> CAPACITY .)
    fn              reduce using rule 64 (EXPRESION -> CAPACITY .)
    for             reduce using rule 64 (EXPRESION -> CAPACITY .)
    struct          reduce using rule 64 (EXPRESION -> CAPACITY .)
    modulo          reduce using rule 64 (EXPRESION -> CAPACITY .)
    entero          reduce using rule 64 (EXPRESION -> CAPACITY .)
    decimal         reduce using rule 64 (EXPRESION -> CAPACITY .)
    cadena          reduce using rule 64 (EXPRESION -> CAPACITY .)
    true            reduce using rule 64 (EXPRESION -> CAPACITY .)
    false           reduce using rule 64 (EXPRESION -> CAPACITY .)
    caracter        reduce using rule 64 (EXPRESION -> CAPACITY .)
    loop            reduce using rule 64 (EXPRESION -> CAPACITY .)
    pub             reduce using rule 64 (EXPRESION -> CAPACITY .)
    coma            reduce using rule 64 (EXPRESION -> CAPACITY .)
    parc            reduce using rule 64 (EXPRESION -> CAPACITY .)
    llavea          reduce using rule 64 (EXPRESION -> CAPACITY .)
    puntoycoma      reduce using rule 64 (EXPRESION -> CAPACITY .)
    corc            reduce using rule 64 (EXPRESION -> CAPACITY .)
    igual           reduce using rule 64 (EXPRESION -> CAPACITY .)
    bvertical       reduce using rule 64 (EXPRESION -> CAPACITY .)


state 124

    (65) EXPRESION -> ACCESVEC .

    mas             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    menos           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    div             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    multi           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    mod             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    mayor           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    menor           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    mayorigual      reduce using rule 65 (EXPRESION -> ACCESVEC .)
    menorigual      reduce using rule 65 (EXPRESION -> ACCESVEC .)
    igualigual      reduce using rule 65 (EXPRESION -> ACCESVEC .)
    diferente       reduce using rule 65 (EXPRESION -> ACCESVEC .)
    and             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    or              reduce using rule 65 (EXPRESION -> ACCESVEC .)
    as              reduce using rule 65 (EXPRESION -> ACCESVEC .)
    punto           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    llavec          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    println         reduce using rule 65 (EXPRESION -> ACCESVEC .)
    let             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    id              reduce using rule 65 (EXPRESION -> ACCESVEC .)
    if              reduce using rule 65 (EXPRESION -> ACCESVEC .)
    match           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    continue        reduce using rule 65 (EXPRESION -> ACCESVEC .)
    return          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    break           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    while           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    i64             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    f64             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    not             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    para            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    fn              reduce using rule 65 (EXPRESION -> ACCESVEC .)
    for             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    struct          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    modulo          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    entero          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    decimal         reduce using rule 65 (EXPRESION -> ACCESVEC .)
    cadena          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    true            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    false           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    caracter        reduce using rule 65 (EXPRESION -> ACCESVEC .)
    loop            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    pub             reduce using rule 65 (EXPRESION -> ACCESVEC .)
    coma            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    parc            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    llavea          reduce using rule 65 (EXPRESION -> ACCESVEC .)
    puntoycoma      reduce using rule 65 (EXPRESION -> ACCESVEC .)
    corc            reduce using rule 65 (EXPRESION -> ACCESVEC .)
    igual           reduce using rule 65 (EXPRESION -> ACCESVEC .)
    bvertical       reduce using rule 65 (EXPRESION -> ACCESVEC .)


state 125

    (66) EXPRESION -> ACCESO_STRUCT .

    mas             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    menos           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    div             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    multi           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    mod             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    mayor           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    menor           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    mayorigual      reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    menorigual      reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    igualigual      reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    diferente       reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    and             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    or              reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    as              reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    punto           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    llavec          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    println         reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    let             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    id              reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    if              reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    match           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    continue        reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    return          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    break           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    while           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    i64             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    f64             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    not             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    para            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    fn              reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    for             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    struct          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    modulo          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    entero          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    decimal         reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    cadena          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    true            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    false           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    caracter        reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    loop            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    pub             reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    coma            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    parc            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    llavea          reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    puntoycoma      reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    corc            reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    igual           reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)
    bvertical       reduce using rule 66 (EXPRESION -> ACCESO_STRUCT .)


state 126

    (220) FORIN -> for . id in ARRFOR BLOQUE_INST

    id              shift and go to state 214


state 127

    (75) TIPODATO -> entero .

    mas             reduce using rule 75 (TIPODATO -> entero .)
    menos           reduce using rule 75 (TIPODATO -> entero .)
    div             reduce using rule 75 (TIPODATO -> entero .)
    multi           reduce using rule 75 (TIPODATO -> entero .)
    mod             reduce using rule 75 (TIPODATO -> entero .)
    mayor           reduce using rule 75 (TIPODATO -> entero .)
    menor           reduce using rule 75 (TIPODATO -> entero .)
    mayorigual      reduce using rule 75 (TIPODATO -> entero .)
    menorigual      reduce using rule 75 (TIPODATO -> entero .)
    igualigual      reduce using rule 75 (TIPODATO -> entero .)
    diferente       reduce using rule 75 (TIPODATO -> entero .)
    and             reduce using rule 75 (TIPODATO -> entero .)
    or              reduce using rule 75 (TIPODATO -> entero .)
    as              reduce using rule 75 (TIPODATO -> entero .)
    punto           reduce using rule 75 (TIPODATO -> entero .)
    llavec          reduce using rule 75 (TIPODATO -> entero .)
    println         reduce using rule 75 (TIPODATO -> entero .)
    let             reduce using rule 75 (TIPODATO -> entero .)
    id              reduce using rule 75 (TIPODATO -> entero .)
    if              reduce using rule 75 (TIPODATO -> entero .)
    match           reduce using rule 75 (TIPODATO -> entero .)
    continue        reduce using rule 75 (TIPODATO -> entero .)
    return          reduce using rule 75 (TIPODATO -> entero .)
    break           reduce using rule 75 (TIPODATO -> entero .)
    while           reduce using rule 75 (TIPODATO -> entero .)
    i64             reduce using rule 75 (TIPODATO -> entero .)
    f64             reduce using rule 75 (TIPODATO -> entero .)
    not             reduce using rule 75 (TIPODATO -> entero .)
    para            reduce using rule 75 (TIPODATO -> entero .)
    fn              reduce using rule 75 (TIPODATO -> entero .)
    for             reduce using rule 75 (TIPODATO -> entero .)
    struct          reduce using rule 75 (TIPODATO -> entero .)
    modulo          reduce using rule 75 (TIPODATO -> entero .)
    entero          reduce using rule 75 (TIPODATO -> entero .)
    decimal         reduce using rule 75 (TIPODATO -> entero .)
    cadena          reduce using rule 75 (TIPODATO -> entero .)
    true            reduce using rule 75 (TIPODATO -> entero .)
    false           reduce using rule 75 (TIPODATO -> entero .)
    caracter        reduce using rule 75 (TIPODATO -> entero .)
    loop            reduce using rule 75 (TIPODATO -> entero .)
    pub             reduce using rule 75 (TIPODATO -> entero .)
    coma            reduce using rule 75 (TIPODATO -> entero .)
    parc            reduce using rule 75 (TIPODATO -> entero .)
    llavea          reduce using rule 75 (TIPODATO -> entero .)
    puntoycoma      reduce using rule 75 (TIPODATO -> entero .)
    corc            reduce using rule 75 (TIPODATO -> entero .)
    igual           reduce using rule 75 (TIPODATO -> entero .)
    bvertical       reduce using rule 75 (TIPODATO -> entero .)


state 128

    (76) TIPODATO -> decimal .

    mas             reduce using rule 76 (TIPODATO -> decimal .)
    menos           reduce using rule 76 (TIPODATO -> decimal .)
    div             reduce using rule 76 (TIPODATO -> decimal .)
    multi           reduce using rule 76 (TIPODATO -> decimal .)
    mod             reduce using rule 76 (TIPODATO -> decimal .)
    mayor           reduce using rule 76 (TIPODATO -> decimal .)
    menor           reduce using rule 76 (TIPODATO -> decimal .)
    mayorigual      reduce using rule 76 (TIPODATO -> decimal .)
    menorigual      reduce using rule 76 (TIPODATO -> decimal .)
    igualigual      reduce using rule 76 (TIPODATO -> decimal .)
    diferente       reduce using rule 76 (TIPODATO -> decimal .)
    and             reduce using rule 76 (TIPODATO -> decimal .)
    or              reduce using rule 76 (TIPODATO -> decimal .)
    as              reduce using rule 76 (TIPODATO -> decimal .)
    punto           reduce using rule 76 (TIPODATO -> decimal .)
    llavec          reduce using rule 76 (TIPODATO -> decimal .)
    println         reduce using rule 76 (TIPODATO -> decimal .)
    let             reduce using rule 76 (TIPODATO -> decimal .)
    id              reduce using rule 76 (TIPODATO -> decimal .)
    if              reduce using rule 76 (TIPODATO -> decimal .)
    match           reduce using rule 76 (TIPODATO -> decimal .)
    continue        reduce using rule 76 (TIPODATO -> decimal .)
    return          reduce using rule 76 (TIPODATO -> decimal .)
    break           reduce using rule 76 (TIPODATO -> decimal .)
    while           reduce using rule 76 (TIPODATO -> decimal .)
    i64             reduce using rule 76 (TIPODATO -> decimal .)
    f64             reduce using rule 76 (TIPODATO -> decimal .)
    not             reduce using rule 76 (TIPODATO -> decimal .)
    para            reduce using rule 76 (TIPODATO -> decimal .)
    fn              reduce using rule 76 (TIPODATO -> decimal .)
    for             reduce using rule 76 (TIPODATO -> decimal .)
    struct          reduce using rule 76 (TIPODATO -> decimal .)
    modulo          reduce using rule 76 (TIPODATO -> decimal .)
    entero          reduce using rule 76 (TIPODATO -> decimal .)
    decimal         reduce using rule 76 (TIPODATO -> decimal .)
    cadena          reduce using rule 76 (TIPODATO -> decimal .)
    true            reduce using rule 76 (TIPODATO -> decimal .)
    false           reduce using rule 76 (TIPODATO -> decimal .)
    caracter        reduce using rule 76 (TIPODATO -> decimal .)
    loop            reduce using rule 76 (TIPODATO -> decimal .)
    pub             reduce using rule 76 (TIPODATO -> decimal .)
    coma            reduce using rule 76 (TIPODATO -> decimal .)
    parc            reduce using rule 76 (TIPODATO -> decimal .)
    llavea          reduce using rule 76 (TIPODATO -> decimal .)
    puntoycoma      reduce using rule 76 (TIPODATO -> decimal .)
    corc            reduce using rule 76 (TIPODATO -> decimal .)
    igual           reduce using rule 76 (TIPODATO -> decimal .)
    bvertical       reduce using rule 76 (TIPODATO -> decimal .)


state 129

    (77) TIPODATO -> cadena .

    mas             reduce using rule 77 (TIPODATO -> cadena .)
    menos           reduce using rule 77 (TIPODATO -> cadena .)
    div             reduce using rule 77 (TIPODATO -> cadena .)
    multi           reduce using rule 77 (TIPODATO -> cadena .)
    mod             reduce using rule 77 (TIPODATO -> cadena .)
    mayor           reduce using rule 77 (TIPODATO -> cadena .)
    menor           reduce using rule 77 (TIPODATO -> cadena .)
    mayorigual      reduce using rule 77 (TIPODATO -> cadena .)
    menorigual      reduce using rule 77 (TIPODATO -> cadena .)
    igualigual      reduce using rule 77 (TIPODATO -> cadena .)
    diferente       reduce using rule 77 (TIPODATO -> cadena .)
    and             reduce using rule 77 (TIPODATO -> cadena .)
    or              reduce using rule 77 (TIPODATO -> cadena .)
    as              reduce using rule 77 (TIPODATO -> cadena .)
    punto           reduce using rule 77 (TIPODATO -> cadena .)
    llavec          reduce using rule 77 (TIPODATO -> cadena .)
    println         reduce using rule 77 (TIPODATO -> cadena .)
    let             reduce using rule 77 (TIPODATO -> cadena .)
    id              reduce using rule 77 (TIPODATO -> cadena .)
    if              reduce using rule 77 (TIPODATO -> cadena .)
    match           reduce using rule 77 (TIPODATO -> cadena .)
    continue        reduce using rule 77 (TIPODATO -> cadena .)
    return          reduce using rule 77 (TIPODATO -> cadena .)
    break           reduce using rule 77 (TIPODATO -> cadena .)
    while           reduce using rule 77 (TIPODATO -> cadena .)
    i64             reduce using rule 77 (TIPODATO -> cadena .)
    f64             reduce using rule 77 (TIPODATO -> cadena .)
    not             reduce using rule 77 (TIPODATO -> cadena .)
    para            reduce using rule 77 (TIPODATO -> cadena .)
    fn              reduce using rule 77 (TIPODATO -> cadena .)
    for             reduce using rule 77 (TIPODATO -> cadena .)
    struct          reduce using rule 77 (TIPODATO -> cadena .)
    modulo          reduce using rule 77 (TIPODATO -> cadena .)
    entero          reduce using rule 77 (TIPODATO -> cadena .)
    decimal         reduce using rule 77 (TIPODATO -> cadena .)
    cadena          reduce using rule 77 (TIPODATO -> cadena .)
    true            reduce using rule 77 (TIPODATO -> cadena .)
    false           reduce using rule 77 (TIPODATO -> cadena .)
    caracter        reduce using rule 77 (TIPODATO -> cadena .)
    loop            reduce using rule 77 (TIPODATO -> cadena .)
    pub             reduce using rule 77 (TIPODATO -> cadena .)
    coma            reduce using rule 77 (TIPODATO -> cadena .)
    parc            reduce using rule 77 (TIPODATO -> cadena .)
    llavea          reduce using rule 77 (TIPODATO -> cadena .)
    puntoycoma      reduce using rule 77 (TIPODATO -> cadena .)
    corc            reduce using rule 77 (TIPODATO -> cadena .)
    igual           reduce using rule 77 (TIPODATO -> cadena .)
    bvertical       reduce using rule 77 (TIPODATO -> cadena .)


state 130

    (78) TIPODATO -> true .

    mas             reduce using rule 78 (TIPODATO -> true .)
    menos           reduce using rule 78 (TIPODATO -> true .)
    div             reduce using rule 78 (TIPODATO -> true .)
    multi           reduce using rule 78 (TIPODATO -> true .)
    mod             reduce using rule 78 (TIPODATO -> true .)
    mayor           reduce using rule 78 (TIPODATO -> true .)
    menor           reduce using rule 78 (TIPODATO -> true .)
    mayorigual      reduce using rule 78 (TIPODATO -> true .)
    menorigual      reduce using rule 78 (TIPODATO -> true .)
    igualigual      reduce using rule 78 (TIPODATO -> true .)
    diferente       reduce using rule 78 (TIPODATO -> true .)
    and             reduce using rule 78 (TIPODATO -> true .)
    or              reduce using rule 78 (TIPODATO -> true .)
    as              reduce using rule 78 (TIPODATO -> true .)
    punto           reduce using rule 78 (TIPODATO -> true .)
    llavec          reduce using rule 78 (TIPODATO -> true .)
    println         reduce using rule 78 (TIPODATO -> true .)
    let             reduce using rule 78 (TIPODATO -> true .)
    id              reduce using rule 78 (TIPODATO -> true .)
    if              reduce using rule 78 (TIPODATO -> true .)
    match           reduce using rule 78 (TIPODATO -> true .)
    continue        reduce using rule 78 (TIPODATO -> true .)
    return          reduce using rule 78 (TIPODATO -> true .)
    break           reduce using rule 78 (TIPODATO -> true .)
    while           reduce using rule 78 (TIPODATO -> true .)
    i64             reduce using rule 78 (TIPODATO -> true .)
    f64             reduce using rule 78 (TIPODATO -> true .)
    not             reduce using rule 78 (TIPODATO -> true .)
    para            reduce using rule 78 (TIPODATO -> true .)
    fn              reduce using rule 78 (TIPODATO -> true .)
    for             reduce using rule 78 (TIPODATO -> true .)
    struct          reduce using rule 78 (TIPODATO -> true .)
    modulo          reduce using rule 78 (TIPODATO -> true .)
    entero          reduce using rule 78 (TIPODATO -> true .)
    decimal         reduce using rule 78 (TIPODATO -> true .)
    cadena          reduce using rule 78 (TIPODATO -> true .)
    true            reduce using rule 78 (TIPODATO -> true .)
    false           reduce using rule 78 (TIPODATO -> true .)
    caracter        reduce using rule 78 (TIPODATO -> true .)
    loop            reduce using rule 78 (TIPODATO -> true .)
    pub             reduce using rule 78 (TIPODATO -> true .)
    coma            reduce using rule 78 (TIPODATO -> true .)
    parc            reduce using rule 78 (TIPODATO -> true .)
    llavea          reduce using rule 78 (TIPODATO -> true .)
    puntoycoma      reduce using rule 78 (TIPODATO -> true .)
    corc            reduce using rule 78 (TIPODATO -> true .)
    igual           reduce using rule 78 (TIPODATO -> true .)
    bvertical       reduce using rule 78 (TIPODATO -> true .)


state 131

    (79) TIPODATO -> false .

    mas             reduce using rule 79 (TIPODATO -> false .)
    menos           reduce using rule 79 (TIPODATO -> false .)
    div             reduce using rule 79 (TIPODATO -> false .)
    multi           reduce using rule 79 (TIPODATO -> false .)
    mod             reduce using rule 79 (TIPODATO -> false .)
    mayor           reduce using rule 79 (TIPODATO -> false .)
    menor           reduce using rule 79 (TIPODATO -> false .)
    mayorigual      reduce using rule 79 (TIPODATO -> false .)
    menorigual      reduce using rule 79 (TIPODATO -> false .)
    igualigual      reduce using rule 79 (TIPODATO -> false .)
    diferente       reduce using rule 79 (TIPODATO -> false .)
    and             reduce using rule 79 (TIPODATO -> false .)
    or              reduce using rule 79 (TIPODATO -> false .)
    as              reduce using rule 79 (TIPODATO -> false .)
    punto           reduce using rule 79 (TIPODATO -> false .)
    llavec          reduce using rule 79 (TIPODATO -> false .)
    println         reduce using rule 79 (TIPODATO -> false .)
    let             reduce using rule 79 (TIPODATO -> false .)
    id              reduce using rule 79 (TIPODATO -> false .)
    if              reduce using rule 79 (TIPODATO -> false .)
    match           reduce using rule 79 (TIPODATO -> false .)
    continue        reduce using rule 79 (TIPODATO -> false .)
    return          reduce using rule 79 (TIPODATO -> false .)
    break           reduce using rule 79 (TIPODATO -> false .)
    while           reduce using rule 79 (TIPODATO -> false .)
    i64             reduce using rule 79 (TIPODATO -> false .)
    f64             reduce using rule 79 (TIPODATO -> false .)
    not             reduce using rule 79 (TIPODATO -> false .)
    para            reduce using rule 79 (TIPODATO -> false .)
    fn              reduce using rule 79 (TIPODATO -> false .)
    for             reduce using rule 79 (TIPODATO -> false .)
    struct          reduce using rule 79 (TIPODATO -> false .)
    modulo          reduce using rule 79 (TIPODATO -> false .)
    entero          reduce using rule 79 (TIPODATO -> false .)
    decimal         reduce using rule 79 (TIPODATO -> false .)
    cadena          reduce using rule 79 (TIPODATO -> false .)
    true            reduce using rule 79 (TIPODATO -> false .)
    false           reduce using rule 79 (TIPODATO -> false .)
    caracter        reduce using rule 79 (TIPODATO -> false .)
    loop            reduce using rule 79 (TIPODATO -> false .)
    pub             reduce using rule 79 (TIPODATO -> false .)
    coma            reduce using rule 79 (TIPODATO -> false .)
    parc            reduce using rule 79 (TIPODATO -> false .)
    llavea          reduce using rule 79 (TIPODATO -> false .)
    puntoycoma      reduce using rule 79 (TIPODATO -> false .)
    corc            reduce using rule 79 (TIPODATO -> false .)
    igual           reduce using rule 79 (TIPODATO -> false .)
    bvertical       reduce using rule 79 (TIPODATO -> false .)


state 132

    (81) TIPODATO -> caracter .

    mas             reduce using rule 81 (TIPODATO -> caracter .)
    menos           reduce using rule 81 (TIPODATO -> caracter .)
    div             reduce using rule 81 (TIPODATO -> caracter .)
    multi           reduce using rule 81 (TIPODATO -> caracter .)
    mod             reduce using rule 81 (TIPODATO -> caracter .)
    mayor           reduce using rule 81 (TIPODATO -> caracter .)
    menor           reduce using rule 81 (TIPODATO -> caracter .)
    mayorigual      reduce using rule 81 (TIPODATO -> caracter .)
    menorigual      reduce using rule 81 (TIPODATO -> caracter .)
    igualigual      reduce using rule 81 (TIPODATO -> caracter .)
    diferente       reduce using rule 81 (TIPODATO -> caracter .)
    and             reduce using rule 81 (TIPODATO -> caracter .)
    or              reduce using rule 81 (TIPODATO -> caracter .)
    as              reduce using rule 81 (TIPODATO -> caracter .)
    punto           reduce using rule 81 (TIPODATO -> caracter .)
    llavec          reduce using rule 81 (TIPODATO -> caracter .)
    println         reduce using rule 81 (TIPODATO -> caracter .)
    let             reduce using rule 81 (TIPODATO -> caracter .)
    id              reduce using rule 81 (TIPODATO -> caracter .)
    if              reduce using rule 81 (TIPODATO -> caracter .)
    match           reduce using rule 81 (TIPODATO -> caracter .)
    continue        reduce using rule 81 (TIPODATO -> caracter .)
    return          reduce using rule 81 (TIPODATO -> caracter .)
    break           reduce using rule 81 (TIPODATO -> caracter .)
    while           reduce using rule 81 (TIPODATO -> caracter .)
    i64             reduce using rule 81 (TIPODATO -> caracter .)
    f64             reduce using rule 81 (TIPODATO -> caracter .)
    not             reduce using rule 81 (TIPODATO -> caracter .)
    para            reduce using rule 81 (TIPODATO -> caracter .)
    fn              reduce using rule 81 (TIPODATO -> caracter .)
    for             reduce using rule 81 (TIPODATO -> caracter .)
    struct          reduce using rule 81 (TIPODATO -> caracter .)
    modulo          reduce using rule 81 (TIPODATO -> caracter .)
    entero          reduce using rule 81 (TIPODATO -> caracter .)
    decimal         reduce using rule 81 (TIPODATO -> caracter .)
    cadena          reduce using rule 81 (TIPODATO -> caracter .)
    true            reduce using rule 81 (TIPODATO -> caracter .)
    false           reduce using rule 81 (TIPODATO -> caracter .)
    caracter        reduce using rule 81 (TIPODATO -> caracter .)
    loop            reduce using rule 81 (TIPODATO -> caracter .)
    pub             reduce using rule 81 (TIPODATO -> caracter .)
    coma            reduce using rule 81 (TIPODATO -> caracter .)
    parc            reduce using rule 81 (TIPODATO -> caracter .)
    llavea          reduce using rule 81 (TIPODATO -> caracter .)
    puntoycoma      reduce using rule 81 (TIPODATO -> caracter .)
    corc            reduce using rule 81 (TIPODATO -> caracter .)
    igual           reduce using rule 81 (TIPODATO -> caracter .)
    bvertical       reduce using rule 81 (TIPODATO -> caracter .)


state 133

    (148) LOOP -> loop . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 215

state 134

    (165) PARAMETRO -> mut id dospuntos . TIPOVAR
    (169) PARAMETRO -> mut id dospuntos . ampersand VEC
    (171) PARAMETRO -> mut id dospuntos . VEC
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    ampersand       shift and go to state 217
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    Vec             shift and go to state 67

    TIPOVAR                        shift and go to state 216
    VEC                            shift and go to state 218

state 135

    (234) ELSTRUCT -> id dospuntos id .

    llavec          reduce using rule 234 (ELSTRUCT -> id dospuntos id .)
    coma            reduce using rule 234 (ELSTRUCT -> id dospuntos id .)


state 136

    (233) ELSTRUCT -> id dospuntos TIPOVAR .

    llavec          reduce using rule 233 (ELSTRUCT -> id dospuntos TIPOVAR .)
    coma            reduce using rule 233 (ELSTRUCT -> id dospuntos TIPOVAR .)


state 137

    (230) CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .

    llavec          reduce using rule 230 (CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .)
    coma            reduce using rule 230 (CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .)


state 138

    (116) DECLARACION -> let mut id dospuntos . TIPOVAR igual EXPRESION
    (120) DECLARACION -> let mut id dospuntos . TIPOVAR
    (207) DECARREGLO -> let mut id dospuntos . DIMENSION_ARR igual ARREGLO
    (177) DECVECTOR -> let mut id dospuntos . VEC igual VECI
    (179) DECVECTOR -> let mut id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (238) DECSTRUCT -> let mut id dospuntos . id igual STRUCT_EXP
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    id              shift and go to state 219
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    cora            shift and go to state 144
    Vec             shift and go to state 67

    TIPOVAR                        shift and go to state 220
    DIMENSION_ARR                  shift and go to state 221
    VEC                            shift and go to state 222

state 139

    (117) DECLARACION -> let mut id igual . EXPRESION
    (209) DECARREGLO -> let mut id igual . ARREGLO
    (175) DECVECTOR -> let mut id igual . VECI
    (181) DECVECTOR -> let mut id igual . Vec dospuntos dospuntos FUNCVEC
    (236) DECSTRUCT -> let mut id igual . STRUCT_EXP
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    Vec             shift and go to state 226
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    cora            shift and go to state 154
    vecI            shift and go to state 155
    id              shift and go to state 145
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 223
    ARREGLO                        shift and go to state 224
    VECI                           shift and go to state 225
    STRUCT_EXP                     shift and go to state 227
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 140

    (237) DECSTRUCT -> let id dospuntos id . igual STRUCT_EXP

    igual           shift and go to state 228


state 141

    (118) DECLARACION -> let id dospuntos TIPOVAR . igual EXPRESION

    igual           shift and go to state 229


state 142

    (206) DECARREGLO -> let id dospuntos DIMENSION_ARR . igual ARREGLO

    igual           shift and go to state 230


state 143

    (176) DECVECTOR -> let id dospuntos VEC . igual VECI
    (178) DECVECTOR -> let id dospuntos VEC . igual Vec dospuntos dospuntos FUNCVEC

    igual           shift and go to state 231


state 144

    (210) DIMENSION_ARR -> cora . DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> cora . TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> cora . id puntoycoma EXPRESION corc
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize

    id              shift and go to state 234
    cora            shift and go to state 144
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66

    DIMENSION_ARR                  shift and go to state 232
    TIPOVAR                        shift and go to state 233

state 145

    (239) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec
    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    llavea          shift and go to state 235
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    llavec          reduce using rule 80 (ID -> id .)
    pub             reduce using rule 80 (ID -> id .)
    fn              reduce using rule 80 (ID -> id .)
    modulo          reduce using rule 80 (ID -> id .)
    struct          reduce using rule 80 (ID -> id .)
    let             reduce using rule 80 (ID -> id .)
    coma            reduce using rule 80 (ID -> id .)
    puntoycoma      reduce using rule 80 (ID -> id .)
    corc            reduce using rule 80 (ID -> id .)
    punto           shift and go to state 236
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 237

state 146

    (119) DECLARACION -> let id igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    pub             reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    fn              reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    modulo          reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    struct          reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    let             reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    puntoycoma      reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    coma            reduce using rule 119 (DECLARACION -> let id igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 147

    (208) DECARREGLO -> let id igual ARREGLO .

    llavec          reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    pub             reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    fn              reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    modulo          reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    struct          reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    let             reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    puntoycoma      reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)
    coma            reduce using rule 208 (DECARREGLO -> let id igual ARREGLO .)


state 148

    (174) DECVECTOR -> let id igual VECI .

    llavec          reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    pub             reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    fn              reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    modulo          reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    struct          reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    let             reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    puntoycoma      reduce using rule 174 (DECVECTOR -> let id igual VECI .)
    coma            reduce using rule 174 (DECVECTOR -> let id igual VECI .)


state 149

    (180) DECVECTOR -> let id igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 238


state 150

    (235) DECSTRUCT -> let id igual STRUCT_EXP .

    llavec          reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    pub             reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    fn              reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    modulo          reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    struct          reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    let             reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)
    coma            reduce using rule 235 (DECSTRUCT -> let id igual STRUCT_EXP .)


state 151

    (60) EXPRESION -> CALL .

    mas             reduce using rule 60 (EXPRESION -> CALL .)
    menos           reduce using rule 60 (EXPRESION -> CALL .)
    div             reduce using rule 60 (EXPRESION -> CALL .)
    multi           reduce using rule 60 (EXPRESION -> CALL .)
    mod             reduce using rule 60 (EXPRESION -> CALL .)
    mayor           reduce using rule 60 (EXPRESION -> CALL .)
    menor           reduce using rule 60 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 60 (EXPRESION -> CALL .)
    menorigual      reduce using rule 60 (EXPRESION -> CALL .)
    igualigual      reduce using rule 60 (EXPRESION -> CALL .)
    diferente       reduce using rule 60 (EXPRESION -> CALL .)
    and             reduce using rule 60 (EXPRESION -> CALL .)
    or              reduce using rule 60 (EXPRESION -> CALL .)
    as              reduce using rule 60 (EXPRESION -> CALL .)
    punto           reduce using rule 60 (EXPRESION -> CALL .)
    llavec          reduce using rule 60 (EXPRESION -> CALL .)
    pub             reduce using rule 60 (EXPRESION -> CALL .)
    fn              reduce using rule 60 (EXPRESION -> CALL .)
    modulo          reduce using rule 60 (EXPRESION -> CALL .)
    struct          reduce using rule 60 (EXPRESION -> CALL .)
    let             reduce using rule 60 (EXPRESION -> CALL .)
    coma            reduce using rule 60 (EXPRESION -> CALL .)
    parc            reduce using rule 60 (EXPRESION -> CALL .)
    llavea          reduce using rule 60 (EXPRESION -> CALL .)
    puntoycoma      reduce using rule 60 (EXPRESION -> CALL .)
    println         reduce using rule 60 (EXPRESION -> CALL .)
    id              reduce using rule 60 (EXPRESION -> CALL .)
    if              reduce using rule 60 (EXPRESION -> CALL .)
    match           reduce using rule 60 (EXPRESION -> CALL .)
    continue        reduce using rule 60 (EXPRESION -> CALL .)
    return          reduce using rule 60 (EXPRESION -> CALL .)
    break           reduce using rule 60 (EXPRESION -> CALL .)
    while           reduce using rule 60 (EXPRESION -> CALL .)
    i64             reduce using rule 60 (EXPRESION -> CALL .)
    f64             reduce using rule 60 (EXPRESION -> CALL .)
    not             reduce using rule 60 (EXPRESION -> CALL .)
    para            reduce using rule 60 (EXPRESION -> CALL .)
    for             reduce using rule 60 (EXPRESION -> CALL .)
    entero          reduce using rule 60 (EXPRESION -> CALL .)
    decimal         reduce using rule 60 (EXPRESION -> CALL .)
    cadena          reduce using rule 60 (EXPRESION -> CALL .)
    true            reduce using rule 60 (EXPRESION -> CALL .)
    false           reduce using rule 60 (EXPRESION -> CALL .)
    caracter        reduce using rule 60 (EXPRESION -> CALL .)
    loop            reduce using rule 60 (EXPRESION -> CALL .)
    corc            reduce using rule 60 (EXPRESION -> CALL .)
    igual           reduce using rule 60 (EXPRESION -> CALL .)
    bvertical       reduce using rule 60 (EXPRESION -> CALL .)


state 152

    (61) EXPRESION -> REMOVE .

    mas             reduce using rule 61 (EXPRESION -> REMOVE .)
    menos           reduce using rule 61 (EXPRESION -> REMOVE .)
    div             reduce using rule 61 (EXPRESION -> REMOVE .)
    multi           reduce using rule 61 (EXPRESION -> REMOVE .)
    mod             reduce using rule 61 (EXPRESION -> REMOVE .)
    mayor           reduce using rule 61 (EXPRESION -> REMOVE .)
    menor           reduce using rule 61 (EXPRESION -> REMOVE .)
    mayorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    menorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    igualigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    diferente       reduce using rule 61 (EXPRESION -> REMOVE .)
    and             reduce using rule 61 (EXPRESION -> REMOVE .)
    or              reduce using rule 61 (EXPRESION -> REMOVE .)
    as              reduce using rule 61 (EXPRESION -> REMOVE .)
    punto           reduce using rule 61 (EXPRESION -> REMOVE .)
    llavec          reduce using rule 61 (EXPRESION -> REMOVE .)
    pub             reduce using rule 61 (EXPRESION -> REMOVE .)
    fn              reduce using rule 61 (EXPRESION -> REMOVE .)
    modulo          reduce using rule 61 (EXPRESION -> REMOVE .)
    struct          reduce using rule 61 (EXPRESION -> REMOVE .)
    let             reduce using rule 61 (EXPRESION -> REMOVE .)
    coma            reduce using rule 61 (EXPRESION -> REMOVE .)
    parc            reduce using rule 61 (EXPRESION -> REMOVE .)
    llavea          reduce using rule 61 (EXPRESION -> REMOVE .)
    puntoycoma      reduce using rule 61 (EXPRESION -> REMOVE .)
    println         reduce using rule 61 (EXPRESION -> REMOVE .)
    id              reduce using rule 61 (EXPRESION -> REMOVE .)
    if              reduce using rule 61 (EXPRESION -> REMOVE .)
    match           reduce using rule 61 (EXPRESION -> REMOVE .)
    continue        reduce using rule 61 (EXPRESION -> REMOVE .)
    return          reduce using rule 61 (EXPRESION -> REMOVE .)
    break           reduce using rule 61 (EXPRESION -> REMOVE .)
    while           reduce using rule 61 (EXPRESION -> REMOVE .)
    i64             reduce using rule 61 (EXPRESION -> REMOVE .)
    f64             reduce using rule 61 (EXPRESION -> REMOVE .)
    not             reduce using rule 61 (EXPRESION -> REMOVE .)
    para            reduce using rule 61 (EXPRESION -> REMOVE .)
    for             reduce using rule 61 (EXPRESION -> REMOVE .)
    entero          reduce using rule 61 (EXPRESION -> REMOVE .)
    decimal         reduce using rule 61 (EXPRESION -> REMOVE .)
    cadena          reduce using rule 61 (EXPRESION -> REMOVE .)
    true            reduce using rule 61 (EXPRESION -> REMOVE .)
    false           reduce using rule 61 (EXPRESION -> REMOVE .)
    caracter        reduce using rule 61 (EXPRESION -> REMOVE .)
    loop            reduce using rule 61 (EXPRESION -> REMOVE .)
    corc            reduce using rule 61 (EXPRESION -> REMOVE .)
    igual           reduce using rule 61 (EXPRESION -> REMOVE .)
    bvertical       reduce using rule 61 (EXPRESION -> REMOVE .)


state 153

    (67) EXPRESION -> ACCESO_MOD .

    mas             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    llavec          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    pub             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    coma            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    parc            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    llavea          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    puntoycoma      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    corc            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    igual           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    bvertical       reduce using rule 67 (EXPRESION -> ACCESO_MOD .)


state 154

    (213) ARREGLO -> cora . CONT_ARR corc
    (214) ARREGLO -> cora . EXPRESION puntoycoma EXPRESION corc
    (215) CONT_ARR -> . CONT_ARR coma ELARR
    (216) CONT_ARR -> . ELARR
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (217) ELARR -> . ARREGLO
    (218) ELARR -> . EXPRESION
    (219) ELARR -> . STRUCT_EXP
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 244
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133
    cora            shift and go to state 154

    CONT_ARR                       shift and go to state 239
    EXPRESION                      shift and go to state 240
    ELARR                          shift and go to state 241
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153
    ARREGLO                        shift and go to state 242
    STRUCT_EXP                     shift and go to state 243

state 155

    (185) VECI -> vecI . cora CONJVECI corc
    (186) VECI -> vecI . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 245


state 156

    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 246
    IF_TER                         shift and go to state 113
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 157

    (97) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 247
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 158

    (166) PARAMETRO -> id dospuntos ampersand mut . cora TIPOVAR corc
    (167) PARAMETRO -> id dospuntos ampersand mut . DIMENSION_ARR
    (168) PARAMETRO -> id dospuntos ampersand mut . VEC
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    cora            shift and go to state 248
    Vec             shift and go to state 67

    DIMENSION_ARR                  shift and go to state 249
    VEC                            shift and go to state 250

state 159

    (182) VEC -> Vec menor . VEC mayor
    (183) VEC -> Vec menor . TIPOVAR mayor
    (184) VEC -> Vec menor . CONJ_ACCES_MOD mayor
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (261) CONJ_ACCES_MOD -> . CONJ_ACCES_MOD dospuntos dospuntos id
    (262) CONJ_ACCES_MOD -> . id

    Vec             shift and go to state 67
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    id              shift and go to state 254

    VEC                            shift and go to state 251
    TIPOVAR                        shift and go to state 252
    CONJ_ACCES_MOD                 shift and go to state 253

state 160

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . TIPOVAR BLOQUE_INST
    (160) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . id BLOQUE_INST
    (161) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . VEC BLOQUE_INST
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    id              shift and go to state 255
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    Vec             shift and go to state 67

    TIPOVAR                        shift and go to state 256
    VEC                            shift and go to state 257

state 161

    (158) FUNCION -> fn id para parc menos mayor TIPOVAR . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 258

state 162

    (155) BLOQUE_INST -> llavea INSTRUCCIONES llavec .

    modulo          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    fn              reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    struct          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    $end            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    llavec          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    pub             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    let             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    println         reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    id              reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    if              reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    match           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    continue        reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    return          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    break           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    while           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    i64             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    f64             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menos           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    not             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    para            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    for             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    entero          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    decimal         reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    cadena          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    true            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    false           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    caracter        reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    loop            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mas             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    div             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    multi           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mod             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mayor           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menor           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mayorigual      reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menorigual      reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    igualigual      reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    diferente       reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    and             reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    or              reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    as              reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    punto           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    coma            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    parc            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    llavea          reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    puntoycoma      reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    corc            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    igual           reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    bvertical       reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    else            reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    guionbajo       reduce using rule 155 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)


state 163

    (7) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    llavec          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    println         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    let             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    id              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    if              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    match           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    continue        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    return          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    break           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    while           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    i64             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    f64             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    menos           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    not             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    para            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    fn              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    for             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    struct          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    modulo          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    entero          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    decimal         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    cadena          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    true            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    false           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    caracter        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    loop            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 164

    (9) INSTRUCCION -> PRINT puntoycoma .

    llavec          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    println         reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    let             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    id              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    if              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    match           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    continue        reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    return          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    break           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    while           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    i64             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    f64             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    menos           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    not             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    para            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    fn              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    for             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    struct          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    modulo          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    entero          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    decimal         reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    cadena          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    true            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    false           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    caracter        reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    loop            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)


state 165

    (10) INSTRUCCION -> DECLARACION puntoycoma .

    llavec          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    println         reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    let             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    id              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    if              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    match           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    continue        reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    return          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    break           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    while           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    i64             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    f64             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    menos           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    not             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    para            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    fn              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    for             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    struct          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    modulo          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    entero          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    decimal         reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    cadena          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    true            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    false           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    caracter        reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    loop            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)


state 166

    (11) INSTRUCCION -> ASIGNACION puntoycoma .

    llavec          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    println         reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    let             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    id              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    if              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    match           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    continue        reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    return          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    break           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    while           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    i64             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    f64             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    menos           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    not             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    para            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    fn              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    for             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    struct          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    modulo          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    entero          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    decimal         reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    cadena          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    true            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    false           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    caracter        reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    loop            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)


state 167

    (14) INSTRUCCION -> CONTINUE puntoycoma .

    llavec          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    println         reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    let             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    id              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    if              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    match           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    continue        reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    return          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    break           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    while           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    i64             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    f64             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    menos           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    not             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    para            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    fn              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    for             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    struct          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    modulo          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    entero          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    decimal         reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    cadena          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    true            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    false           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    caracter        reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    loop            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)


state 168

    (15) INSTRUCCION -> RETURN puntoycoma .

    llavec          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    println         reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    let             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    id              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    if              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    match           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    continue        reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    return          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    break           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    while           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    i64             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    f64             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    menos           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    not             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    para            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    fn              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    for             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    struct          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    modulo          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    entero          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    decimal         reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    cadena          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    true            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    false           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    caracter        reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    loop            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)


state 169

    (16) INSTRUCCION -> BREAK puntoycoma .

    llavec          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    println         reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    let             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    id              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    if              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    match           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    continue        reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    return          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    break           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    while           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    i64             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    f64             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    menos           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    not             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    para            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    fn              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    for             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    struct          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    modulo          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    entero          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    decimal         reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    cadena          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    true            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    false           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    caracter        reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    loop            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)


state 170

    (32) EXPRESION -> EXPRESION mas . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 259
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 171

    (33) EXPRESION -> EXPRESION menos . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 260
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 172

    (34) EXPRESION -> EXPRESION div . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 261
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 173

    (35) EXPRESION -> EXPRESION multi . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 262
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 174

    (36) EXPRESION -> EXPRESION mod . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 263
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 175

    (40) EXPRESION -> EXPRESION mayor . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 264
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 176

    (41) EXPRESION -> EXPRESION menor . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 265
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 177

    (42) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 266
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 178

    (43) EXPRESION -> EXPRESION menorigual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 267
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 179

    (44) EXPRESION -> EXPRESION igualigual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 268
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 180

    (45) EXPRESION -> EXPRESION diferente . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 269
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 181

    (46) EXPRESION -> EXPRESION and . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 270
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 182

    (47) EXPRESION -> EXPRESION or . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 271
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 183

    (102) CAST_AS -> EXPRESION as . TIPOVAR
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize

    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66

    TIPOVAR                        shift and go to state 272

state 184

    (103) ABS -> EXPRESION punto . abs para parc
    (105) CLONE -> EXPRESION punto . clone para parc
    (108) SQRT -> EXPRESION punto . sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION punto . toString para parc
    (111) TO_STRING_OWNED -> EXPRESION punto . toOwned para parc
    (198) LEN -> EXPRESION punto . len para parc

    abs             shift and go to state 273
    clone           shift and go to state 274
    sqrt            shift and go to state 275
    toString        shift and go to state 276
    toOwned         shift and go to state 277
    len             shift and go to state 278


state 185

    (19) INSTRUCCION -> CALL puntoycoma .

    llavec          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    println         reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    let             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    id              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    if              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    match           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    continue        reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    return          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    break           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    while           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    i64             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    f64             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    menos           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    not             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    para            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    fn              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    for             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    struct          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    modulo          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    entero          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    decimal         reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    cadena          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    true            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    false           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    caracter        reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    loop            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)


state 186

    (21) INSTRUCCION -> DECVECTOR puntoycoma .

    llavec          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    println         reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    let             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    id              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    if              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    match           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    continue        reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    return          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    break           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    while           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    i64             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    f64             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    menos           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    not             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    para            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    fn              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    for             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    struct          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    modulo          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    entero          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    decimal         reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    cadena          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    true            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    false           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    caracter        reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    loop            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)


state 187

    (22) INSTRUCCION -> PUSH puntoycoma .

    llavec          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    println         reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    let             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    id              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    if              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    match           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    continue        reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    return          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    break           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    while           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    i64             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    f64             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    menos           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    not             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    para            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    fn              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    for             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    struct          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    modulo          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    entero          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    decimal         reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    cadena          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    true            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    false           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    caracter        reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    loop            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)


state 188

    (23) INSTRUCCION -> INSERT puntoycoma .

    llavec          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    println         reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    let             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    id              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    if              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    match           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    continue        reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    return          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    break           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    while           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    i64             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    f64             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    menos           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    not             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    para            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    fn              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    for             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    struct          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    modulo          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    entero          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    decimal         reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    cadena          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    true            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    false           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    caracter        reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    loop            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)


state 189

    (24) INSTRUCCION -> DECARREGLO puntoycoma .

    llavec          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    println         reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    let             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    id              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    if              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    match           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    continue        reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    return          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    break           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    while           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    i64             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    f64             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    menos           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    not             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    para            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    fn              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    for             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    struct          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    modulo          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    entero          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    decimal         reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    cadena          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    true            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    false           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    caracter        reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    loop            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)


state 190

    (27) INSTRUCCION -> DECSTRUCT puntoycoma .

    llavec          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    println         reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    let             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    id              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    if              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    match           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    continue        reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    return          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    break           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    while           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    i64             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    f64             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    menos           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    not             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    para            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    fn              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    for             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    struct          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    modulo          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    entero          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    decimal         reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    cadena          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    true            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    false           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    caracter        reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    loop            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)


state 191

    (28) INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .

    llavec          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    println         reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    let             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    id              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    if              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    match           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    continue        reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    return          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    break           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    while           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    i64             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    f64             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    menos           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    not             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    para            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    fn              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    for             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    struct          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    modulo          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    entero          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    decimal         reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    cadena          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    true            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    false           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    caracter        reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    loop            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)


state 192

    (29) INSTRUCCION -> REMOVE puntoycoma .

    llavec          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    println         reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    let             reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    id              reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    if              reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    match           reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    continue        reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    return          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    break           reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    while           reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    i64             reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    f64             reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    menos           reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    not             reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    para            reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    fn              reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    for             reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    struct          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    modulo          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    entero          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    decimal         reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    cadena          reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    true            reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    false           reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    caracter        reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)
    loop            reduce using rule 29 (INSTRUCCION -> REMOVE puntoycoma .)


state 193

    (31) INSTRUCCION -> ACCESO_MOD puntoycoma .

    llavec          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    println         reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    let             reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    id              reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    if              reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    match           reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    continue        reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    return          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    break           reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    while           reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    i64             reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    f64             reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    menos           reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    not             reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    para            reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    fn              reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    for             reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    struct          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    modulo          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    entero          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    decimal         reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    cadena          reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    true            reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    false           reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    caracter        reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    loop            reduce using rule 31 (INSTRUCCION -> ACCESO_MOD puntoycoma .)


state 194

    (114) PRINT -> println para . EXPRESION parc
    (115) PRINT -> println para . EXPRESION coma CONJEXP parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 279
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 195

    (49) EXPRESION -> para EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 280
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 196

    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    parc            reduce using rule 80 (ID -> id .)
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    llavea          reduce using rule 80 (ID -> id .)
    puntoycoma      reduce using rule 80 (ID -> id .)
    llavec          reduce using rule 80 (ID -> id .)
    println         reduce using rule 80 (ID -> id .)
    let             reduce using rule 80 (ID -> id .)
    id              reduce using rule 80 (ID -> id .)
    if              reduce using rule 80 (ID -> id .)
    match           reduce using rule 80 (ID -> id .)
    continue        reduce using rule 80 (ID -> id .)
    return          reduce using rule 80 (ID -> id .)
    break           reduce using rule 80 (ID -> id .)
    while           reduce using rule 80 (ID -> id .)
    i64             reduce using rule 80 (ID -> id .)
    f64             reduce using rule 80 (ID -> id .)
    not             reduce using rule 80 (ID -> id .)
    fn              reduce using rule 80 (ID -> id .)
    for             reduce using rule 80 (ID -> id .)
    struct          reduce using rule 80 (ID -> id .)
    modulo          reduce using rule 80 (ID -> id .)
    entero          reduce using rule 80 (ID -> id .)
    decimal         reduce using rule 80 (ID -> id .)
    cadena          reduce using rule 80 (ID -> id .)
    true            reduce using rule 80 (ID -> id .)
    false           reduce using rule 80 (ID -> id .)
    caracter        reduce using rule 80 (ID -> id .)
    loop            reduce using rule 80 (ID -> id .)
    pub             reduce using rule 80 (ID -> id .)
    coma            reduce using rule 80 (ID -> id .)
    corc            reduce using rule 80 (ID -> id .)
    igual           reduce using rule 80 (ID -> id .)
    bvertical       reduce using rule 80 (ID -> id .)
    punto           shift and go to state 236
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]
  ! para            [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 237

state 197

    (116) DECLARACION -> let mut . id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let mut . id igual EXPRESION
    (120) DECLARACION -> let mut . id dospuntos TIPOVAR
    (175) DECVECTOR -> let mut . id igual VECI
    (177) DECVECTOR -> let mut . id dospuntos VEC igual VECI
    (179) DECVECTOR -> let mut . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let mut . id igual Vec dospuntos dospuntos FUNCVEC
    (207) DECARREGLO -> let mut . id dospuntos DIMENSION_ARR igual ARREGLO
    (209) DECARREGLO -> let mut . id igual ARREGLO
    (236) DECSTRUCT -> let mut . id igual STRUCT_EXP
    (238) DECSTRUCT -> let mut . id dospuntos id igual STRUCT_EXP

    id              shift and go to state 281


state 198

    (118) DECLARACION -> let id . dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> let id . igual EXPRESION
    (174) DECVECTOR -> let id . igual VECI
    (176) DECVECTOR -> let id . dospuntos VEC igual VECI
    (178) DECVECTOR -> let id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> let id . igual Vec dospuntos dospuntos FUNCVEC
    (206) DECARREGLO -> let id . dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> let id . igual ARREGLO
    (235) DECSTRUCT -> let id . igual STRUCT_EXP
    (237) DECSTRUCT -> let id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 282
    igual           shift and go to state 283


state 199

    (121) ASIGNACION -> id igual . EXPRESION
    (124) ASIGNACION -> id igual . Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> id igual . Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    Vec             shift and go to state 285
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 284
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 200

    (122) ASIGNACION -> id INDEXS . igual EXPRESION
    (123) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (107) CLONE -> id INDEXS . punto clone para parc
    (199) LEN -> id INDEXS . punto len para parc
    (202) ACCESVEC -> id INDEXS .
    (203) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (204) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 286
    punto           shift and go to state 287
    mas             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 202 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    llavec          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    cora            shift and go to state 288

  ! punto           [ reduce using rule 202 (ACCESVEC -> id INDEXS .) ]


state 201

    (193) PUSH -> id punto . push para EXPRESION parc
    (194) PUSH -> id punto . push para VECI parc
    (195) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (196) REMOVE -> id punto . remove para EXPRESION parc
    (104) ABS -> id punto . abs para parc
    (106) CLONE -> id punto . clone para parc
    (109) SQRT -> id punto . sqrt para parc
    (112) TO_STRING_OWNED -> id punto . toString para parc
    (113) TO_STRING_OWNED -> id punto . toOwned para parc
    (197) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (200) LEN -> id punto . len para parc
    (201) CAPACITY -> id punto . capacity para parc
    (243) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    push            shift and go to state 290
    insert          shift and go to state 291
    remove          shift and go to state 293
    abs             shift and go to state 294
    clone           shift and go to state 295
    sqrt            shift and go to state 296
    toString        shift and go to state 297
    toOwned         shift and go to state 298
    contains        shift and go to state 299
    len             shift and go to state 300
    capacity        shift and go to state 301
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 292

state 202

    (259) ACCESO_MOD -> id dospuntos . dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id dospuntos . dospuntos CONJ_ACCES_MOD para parc

    dospuntos       shift and go to state 302


state 203

    (172) CALL -> id para . CONJEXP parc
    (173) CALL -> id para . parc
    (68) CONJEXP -> . CONJEXP coma ELCONJ
    (69) CONJEXP -> . ELCONJ
    (70) ELCONJ -> . ampersand ELCONJ
    (71) ELCONJ -> . EXPRESION
    (72) ELCONJ -> . VECI
    (73) ELCONJ -> . ARREGLO
    (74) ELCONJ -> . ampersand mut EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    parc            shift and go to state 304
    ampersand       shift and go to state 306
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    CONJEXP                        shift and go to state 303
    ELCONJ                         shift and go to state 305
    EXPRESION                      shift and go to state 307
    VECI                           shift and go to state 308
    ARREGLO                        shift and go to state 309
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 204

    (205) INDEXS -> cora . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 310
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 205

    (126) IF -> if EXPRESION . BLOQUE_INST
    (127) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (128) IF -> if EXPRESION . BLOQUE_INST else IF
    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 312
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184

    BLOQUE_INST                    shift and go to state 311

state 206

    (129) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match EXPRESION . llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match EXPRESION . llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (97) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 313
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 207

    (152) RETURN -> return EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 152 (RETURN -> return EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 208

    (150) BREAK -> break EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 150 (BREAK -> break EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 209

    (154) WHILE -> while EXPRESION . BLOQUE_INST
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184
    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 314

state 210

    (39) EXPRESION -> menos EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    div             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    multi           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    mod             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    mayor           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    menor           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    mayorigual      reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    menorigual      reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    igualigual      reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    diferente       reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    and             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    or              reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    as              reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    punto           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    llavec          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    println         reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    let             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    id              reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    if              reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    match           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    continue        reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    return          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    break           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    while           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    i64             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    f64             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    not             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    para            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    fn              reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    for             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    struct          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    entero          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    decimal         reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    cadena          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    true            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    false           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    caracter        reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    loop            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    pub             reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    coma            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    parc            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    llavea          reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    puntoycoma      reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    corc            reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    igual           reduce using rule 39 (EXPRESION -> menos EXPRESION .)
    bvertical       reduce using rule 39 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! div             [ shift and go to state 172 ]
  ! multi           [ shift and go to state 173 ]
  ! mod             [ shift and go to state 174 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 211

    (37) EXPRESION -> i64 dospuntos . dospuntos pow para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 315


state 212

    (38) EXPRESION -> f64 dospuntos . dospuntos powf para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 316


state 213

    (48) EXPRESION -> not EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    div             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    multi           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    mod             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 48 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 48 (EXPRESION -> not EXPRESION .)
    igualigual      reduce using rule 48 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 48 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 48 (EXPRESION -> not EXPRESION .)
    as              reduce using rule 48 (EXPRESION -> not EXPRESION .)
    punto           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    llavec          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    println         reduce using rule 48 (EXPRESION -> not EXPRESION .)
    let             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    id              reduce using rule 48 (EXPRESION -> not EXPRESION .)
    if              reduce using rule 48 (EXPRESION -> not EXPRESION .)
    match           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    continue        reduce using rule 48 (EXPRESION -> not EXPRESION .)
    return          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    break           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    while           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    i64             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    f64             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    not             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    para            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    fn              reduce using rule 48 (EXPRESION -> not EXPRESION .)
    for             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    struct          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    entero          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    decimal         reduce using rule 48 (EXPRESION -> not EXPRESION .)
    cadena          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    true            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    false           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    caracter        reduce using rule 48 (EXPRESION -> not EXPRESION .)
    loop            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    pub             reduce using rule 48 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    parc            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    llavea          reduce using rule 48 (EXPRESION -> not EXPRESION .)
    puntoycoma      reduce using rule 48 (EXPRESION -> not EXPRESION .)
    corc            reduce using rule 48 (EXPRESION -> not EXPRESION .)
    igual           reduce using rule 48 (EXPRESION -> not EXPRESION .)
    bvertical       reduce using rule 48 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! div             [ shift and go to state 172 ]
  ! multi           [ shift and go to state 173 ]
  ! mod             [ shift and go to state 174 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 214

    (220) FORIN -> for id . in ARRFOR BLOQUE_INST

    in              shift and go to state 317


state 215

    (148) LOOP -> loop BLOQUE_INST .

    mas             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    menos           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    div             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    multi           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    mod             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    mayor           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    menor           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    mayorigual      reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    menorigual      reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    igualigual      reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    diferente       reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    and             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    or              reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    as              reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    punto           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    llavec          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    println         reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    let             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    id              reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    if              reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    match           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    continue        reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    return          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    break           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    while           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    i64             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    f64             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    not             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    para            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    fn              reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    for             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    struct          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    modulo          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    entero          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    decimal         reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    cadena          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    true            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    false           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    caracter        reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    loop            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    pub             reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    coma            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    parc            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    llavea          reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    puntoycoma      reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    corc            reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    igual           reduce using rule 148 (LOOP -> loop BLOQUE_INST .)
    bvertical       reduce using rule 148 (LOOP -> loop BLOQUE_INST .)


state 216

    (165) PARAMETRO -> mut id dospuntos TIPOVAR .

    parc            reduce using rule 165 (PARAMETRO -> mut id dospuntos TIPOVAR .)
    coma            reduce using rule 165 (PARAMETRO -> mut id dospuntos TIPOVAR .)


state 217

    (169) PARAMETRO -> mut id dospuntos ampersand . VEC
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor

    Vec             shift and go to state 67

    VEC                            shift and go to state 318

state 218

    (171) PARAMETRO -> mut id dospuntos VEC .

    parc            reduce using rule 171 (PARAMETRO -> mut id dospuntos VEC .)
    coma            reduce using rule 171 (PARAMETRO -> mut id dospuntos VEC .)


state 219

    (238) DECSTRUCT -> let mut id dospuntos id . igual STRUCT_EXP

    igual           shift and go to state 319


state 220

    (116) DECLARACION -> let mut id dospuntos TIPOVAR . igual EXPRESION
    (120) DECLARACION -> let mut id dospuntos TIPOVAR .

    igual           shift and go to state 320
    llavec          reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    pub             reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    fn              reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    modulo          reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    struct          reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    let             reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    puntoycoma      reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    coma            reduce using rule 120 (DECLARACION -> let mut id dospuntos TIPOVAR .)


state 221

    (207) DECARREGLO -> let mut id dospuntos DIMENSION_ARR . igual ARREGLO

    igual           shift and go to state 321


state 222

    (177) DECVECTOR -> let mut id dospuntos VEC . igual VECI
    (179) DECVECTOR -> let mut id dospuntos VEC . igual Vec dospuntos dospuntos FUNCVEC

    igual           shift and go to state 322


state 223

    (117) DECLARACION -> let mut id igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    pub             reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    fn              reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    modulo          reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    struct          reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    let             reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    puntoycoma      reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    coma            reduce using rule 117 (DECLARACION -> let mut id igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 224

    (209) DECARREGLO -> let mut id igual ARREGLO .

    llavec          reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    pub             reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    fn              reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    modulo          reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    struct          reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    let             reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    puntoycoma      reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)
    coma            reduce using rule 209 (DECARREGLO -> let mut id igual ARREGLO .)


state 225

    (175) DECVECTOR -> let mut id igual VECI .

    llavec          reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    pub             reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    fn              reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    modulo          reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    struct          reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    let             reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    puntoycoma      reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)
    coma            reduce using rule 175 (DECVECTOR -> let mut id igual VECI .)


state 226

    (181) DECVECTOR -> let mut id igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 323


state 227

    (236) DECSTRUCT -> let mut id igual STRUCT_EXP .

    llavec          reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    pub             reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    fn              reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    modulo          reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    struct          reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    let             reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    coma            reduce using rule 236 (DECSTRUCT -> let mut id igual STRUCT_EXP .)


state 228

    (237) DECSTRUCT -> let id dospuntos id igual . STRUCT_EXP
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    id              shift and go to state 324

    STRUCT_EXP                     shift and go to state 325

state 229

    (118) DECLARACION -> let id dospuntos TIPOVAR igual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 326
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 230

    (206) DECARREGLO -> let id dospuntos DIMENSION_ARR igual . ARREGLO
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 154

    ARREGLO                        shift and go to state 327

state 231

    (176) DECVECTOR -> let id dospuntos VEC igual . VECI
    (178) DECVECTOR -> let id dospuntos VEC igual . Vec dospuntos dospuntos FUNCVEC
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    Vec             shift and go to state 329
    vecI            shift and go to state 155

    VECI                           shift and go to state 328

state 232

    (210) DIMENSION_ARR -> cora DIMENSION_ARR . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 330


state 233

    (211) DIMENSION_ARR -> cora TIPOVAR . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 331


state 234

    (212) DIMENSION_ARR -> cora id . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 332


state 235

    (239) STRUCT_EXP -> id llavea . CONJEXP_STRUCT llavec
    (240) CONJEXP_STRUCT -> . CONJEXP_STRUCT coma EXSTRUCT
    (241) CONJEXP_STRUCT -> . EXSTRUCT
    (242) EXSTRUCT -> . id dospuntos EXPRESION

    id              shift and go to state 333

    CONJEXP_STRUCT                 shift and go to state 334
    EXSTRUCT                       shift and go to state 335

state 236

    (104) ABS -> id punto . abs para parc
    (106) CLONE -> id punto . clone para parc
    (109) SQRT -> id punto . sqrt para parc
    (112) TO_STRING_OWNED -> id punto . toString para parc
    (113) TO_STRING_OWNED -> id punto . toOwned para parc
    (196) REMOVE -> id punto . remove para EXPRESION parc
    (197) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (200) LEN -> id punto . len para parc
    (201) CAPACITY -> id punto . capacity para parc
    (243) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    abs             shift and go to state 294
    clone           shift and go to state 295
    sqrt            shift and go to state 296
    toString        shift and go to state 297
    toOwned         shift and go to state 298
    remove          shift and go to state 293
    contains        shift and go to state 299
    len             shift and go to state 300
    capacity        shift and go to state 301
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 336

state 237

    (107) CLONE -> id INDEXS . punto clone para parc
    (199) LEN -> id INDEXS . punto len para parc
    (202) ACCESVEC -> id INDEXS .
    (203) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (204) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 337
    mas             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 202 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    llavec          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    pub             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    parc            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    llavea          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    puntoycoma      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    corc            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    igual           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    bvertical       reduce using rule 202 (ACCESVEC -> id INDEXS .)
    cora            shift and go to state 288

  ! punto           [ reduce using rule 202 (ACCESVEC -> id INDEXS .) ]


state 238

    (180) DECVECTOR -> let id igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 338


state 239

    (213) ARREGLO -> cora CONT_ARR . corc
    (215) CONT_ARR -> CONT_ARR . coma ELARR

    corc            shift and go to state 339
    coma            shift and go to state 340


state 240

    (214) ARREGLO -> cora EXPRESION . puntoycoma EXPRESION corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (218) ELARR -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      shift and go to state 341
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    corc            reduce using rule 218 (ELARR -> EXPRESION .)
    coma            reduce using rule 218 (ELARR -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184


state 241

    (216) CONT_ARR -> ELARR .

    corc            reduce using rule 216 (CONT_ARR -> ELARR .)
    coma            reduce using rule 216 (CONT_ARR -> ELARR .)


state 242

    (217) ELARR -> ARREGLO .

    corc            reduce using rule 217 (ELARR -> ARREGLO .)
    coma            reduce using rule 217 (ELARR -> ARREGLO .)


state 243

    (219) ELARR -> STRUCT_EXP .

    corc            reduce using rule 219 (ELARR -> STRUCT_EXP .)
    coma            reduce using rule 219 (ELARR -> STRUCT_EXP .)


state 244

    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (239) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    puntoycoma      reduce using rule 80 (ID -> id .)
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    corc            reduce using rule 80 (ID -> id .)
    coma            reduce using rule 80 (ID -> id .)
    punto           shift and go to state 236
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    llavea          shift and go to state 235
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 237

state 245

    (185) VECI -> vecI cora . CONJVECI corc
    (186) VECI -> vecI cora . EXPRESION puntoycoma EXPRESION corc
    (187) CONJVECI -> . CONJVECI coma ELVEC
    (188) CONJVECI -> . ELVEC
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (189) ELVEC -> . EXPRESION
    (190) ELVEC -> . VECI
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133
    vecI            shift and go to state 155

    CONJVECI                       shift and go to state 342
    EXPRESION                      shift and go to state 343
    ELVEC                          shift and go to state 344
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153
    VECI                           shift and go to state 345

state 246

    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 346
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 247

    (97) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 347
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 248

    (166) PARAMETRO -> id dospuntos ampersand mut cora . TIPOVAR corc
    (210) DIMENSION_ARR -> cora . DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> cora . TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> cora . id puntoycoma EXPRESION corc
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 234
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    cora            shift and go to state 144

    TIPOVAR                        shift and go to state 348
    DIMENSION_ARR                  shift and go to state 232

state 249

    (167) PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .

    parc            reduce using rule 167 (PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .)
    coma            reduce using rule 167 (PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .)


state 250

    (168) PARAMETRO -> id dospuntos ampersand mut VEC .

    parc            reduce using rule 168 (PARAMETRO -> id dospuntos ampersand mut VEC .)
    coma            reduce using rule 168 (PARAMETRO -> id dospuntos ampersand mut VEC .)


state 251

    (182) VEC -> Vec menor VEC . mayor

    mayor           shift and go to state 349


state 252

    (183) VEC -> Vec menor TIPOVAR . mayor

    mayor           shift and go to state 350


state 253

    (184) VEC -> Vec menor CONJ_ACCES_MOD . mayor
    (261) CONJ_ACCES_MOD -> CONJ_ACCES_MOD . dospuntos dospuntos id

    mayor           shift and go to state 351
    dospuntos       shift and go to state 352


state 254

    (262) CONJ_ACCES_MOD -> id .

    mayor           reduce using rule 262 (CONJ_ACCES_MOD -> id .)
    dospuntos       reduce using rule 262 (CONJ_ACCES_MOD -> id .)
    para            reduce using rule 262 (CONJ_ACCES_MOD -> id .)


state 255

    (160) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 353

state 256

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 354

state 257

    (161) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 355

state 258

    (158) FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .

    modulo          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    fn              reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    struct          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    $end            reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    llavec          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    pub             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    let             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    println         reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    id              reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    if              reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    match           reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    continue        reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    return          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    break           reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    while           reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    i64             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    f64             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    menos           reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    not             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    para            reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    for             reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    entero          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    decimal         reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    cadena          reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    true            reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    false           reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    caracter        reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    loop            reduce using rule 158 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)


state 259

    (32) EXPRESION -> EXPRESION mas EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    mayor           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    menor           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    mayorigual      reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    menorigual      reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    igualigual      reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    diferente       reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    and             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    or              reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    as              reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    punto           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    llavec          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    println         reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    let             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    id              reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    if              reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    match           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    continue        reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    return          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    break           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    while           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    i64             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    f64             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    not             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    para            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    fn              reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    for             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    struct          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    modulo          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    entero          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    decimal         reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    cadena          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    true            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    false           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    caracter        reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    loop            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    pub             reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    coma            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    parc            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    llavea          reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    puntoycoma      reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    corc            reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    igual           reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    bvertical       reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .)
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! div             [ reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! multi           [ reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mod             [ reduce using rule 32 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 260

    (33) EXPRESION -> EXPRESION menos EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    mayor           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    menor           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    mayorigual      reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    menorigual      reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    igualigual      reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    diferente       reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    and             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    or              reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    as              reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    punto           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    llavec          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    println         reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    let             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    id              reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    if              reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    match           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    continue        reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    return          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    break           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    while           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    i64             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    f64             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    not             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    para            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    fn              reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    for             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    struct          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    modulo          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    entero          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    decimal         reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    cadena          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    true            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    false           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    caracter        reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    loop            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    pub             reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    coma            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    parc            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    llavea          reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    puntoycoma      reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    corc            reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    igual           reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    bvertical       reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .)
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! div             [ reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! multi           [ reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mod             [ reduce using rule 33 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 261

    (34) EXPRESION -> EXPRESION div EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    menos           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    div             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    multi           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    mod             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    mayor           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    menor           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    mayorigual      reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    menorigual      reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    igualigual      reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    diferente       reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    and             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    or              reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    as              reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    punto           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    llavec          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    println         reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    let             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    id              reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    if              reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    match           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    continue        reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    return          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    break           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    while           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    i64             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    f64             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    not             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    para            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    fn              reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    for             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    struct          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    modulo          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    entero          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    decimal         reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    cadena          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    true            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    false           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    caracter        reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    loop            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    pub             reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    coma            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    parc            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    llavea          reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    puntoycoma      reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    corc            reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    igual           reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)
    bvertical       reduce using rule 34 (EXPRESION -> EXPRESION div EXPRESION .)

  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! div             [ shift and go to state 172 ]
  ! multi           [ shift and go to state 173 ]
  ! mod             [ shift and go to state 174 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 262

    (35) EXPRESION -> EXPRESION multi EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    menos           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    div             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    multi           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    mod             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    mayor           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    menor           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    mayorigual      reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    menorigual      reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    igualigual      reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    diferente       reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    and             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    or              reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    as              reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    punto           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    llavec          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    println         reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    let             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    id              reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    if              reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    match           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    continue        reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    return          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    break           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    while           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    i64             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    f64             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    not             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    para            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    fn              reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    for             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    struct          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    modulo          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    entero          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    decimal         reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    cadena          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    true            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    false           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    caracter        reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    loop            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    pub             reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    coma            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    parc            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    llavea          reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    puntoycoma      reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    corc            reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    igual           reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)
    bvertical       reduce using rule 35 (EXPRESION -> EXPRESION multi EXPRESION .)

  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! div             [ shift and go to state 172 ]
  ! multi           [ shift and go to state 173 ]
  ! mod             [ shift and go to state 174 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 263

    (36) EXPRESION -> EXPRESION mod EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    menos           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    div             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    multi           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    mod             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    mayor           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    menor           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    mayorigual      reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    menorigual      reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    igualigual      reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    diferente       reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    and             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    or              reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    as              reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    punto           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    llavec          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    println         reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    let             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    id              reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    if              reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    match           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    continue        reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    return          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    break           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    while           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    i64             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    f64             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    not             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    para            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    fn              reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    for             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    struct          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    modulo          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    entero          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    decimal         reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    cadena          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    true            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    false           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    caracter        reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    loop            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    pub             reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    coma            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    parc            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    llavea          reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    puntoycoma      reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    corc            reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    igual           reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)
    bvertical       reduce using rule 36 (EXPRESION -> EXPRESION mod EXPRESION .)

  ! mas             [ shift and go to state 170 ]
  ! menos           [ shift and go to state 171 ]
  ! div             [ shift and go to state 172 ]
  ! multi           [ shift and go to state 173 ]
  ! mod             [ shift and go to state 174 ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 264

    (40) EXPRESION -> EXPRESION mayor EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualigual      reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    as              reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    punto           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    llavec          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    println         reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    let             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    id              reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    if              reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    match           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    continue        reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    return          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    break           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    while           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    i64             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    f64             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    not             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    para            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    fn              reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    for             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    struct          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    modulo          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    entero          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    decimal         reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    cadena          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    true            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    false           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    caracter        reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    loop            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    pub             reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    parc            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    llavea          reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    puntoycoma      reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    corc            reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igual           reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    bvertical       reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! menos           [ reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! div             [ reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! multi           [ reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! mod             [ reduce using rule 40 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 265

    (41) EXPRESION -> EXPRESION menor EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualigual      reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    as              reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    punto           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    llavec          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    println         reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    let             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    id              reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    if              reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    match           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    continue        reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    return          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    break           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    while           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    i64             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    f64             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    not             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    para            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    fn              reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    for             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    struct          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    modulo          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    entero          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    decimal         reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    cadena          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    true            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    false           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    caracter        reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    loop            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    pub             reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    parc            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    llavea          reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    puntoycoma      reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    corc            reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    igual           reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    bvertical       reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! menos           [ reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! div             [ reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! multi           [ reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! mod             [ reduce using rule 41 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 266

    (42) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualigual      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    as              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    punto           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    llavec          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    println         reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    let             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    id              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    if              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    match           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    continue        reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    return          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    break           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    while           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    i64             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    f64             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    not             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    para            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    fn              reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    for             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    struct          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    modulo          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    entero          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    decimal         reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    cadena          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    true            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    false           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    caracter        reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    loop            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    pub             reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    parc            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    llavea          reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    puntoycoma      reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    corc            reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igual           reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    bvertical       reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! menos           [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! div             [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! multi           [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! mod             [ reduce using rule 42 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 267

    (43) EXPRESION -> EXPRESION menorigual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualigual      reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    as              reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    punto           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    llavec          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    println         reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    let             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    id              reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    if              reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    match           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    continue        reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    return          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    break           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    while           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    i64             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    f64             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    not             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    para            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    fn              reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    for             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    struct          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    modulo          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    entero          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    decimal         reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    cadena          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    true            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    false           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    caracter        reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    loop            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    pub             reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    parc            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    llavea          reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    puntoycoma      reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    corc            reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igual           reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    bvertical       reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! menos           [ reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! div             [ reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! multi           [ reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! mod             [ reduce using rule 43 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 268

    (44) EXPRESION -> EXPRESION igualigual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    menor           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    mayorigual      reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    menorigual      reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    igualigual      reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    diferente       reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    and             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    or              reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    as              reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    punto           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    llavec          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    println         reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    let             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    id              reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    if              reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    match           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    continue        reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    return          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    break           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    while           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    i64             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    f64             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    not             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    para            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    fn              reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    for             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    struct          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    modulo          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    entero          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    decimal         reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    cadena          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    true            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    false           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    caracter        reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    loop            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    pub             reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    coma            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    parc            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    llavea          reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    puntoycoma      reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    corc            reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    igual           reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    bvertical       reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! menos           [ reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! div             [ reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! multi           [ reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! mod             [ reduce using rule 44 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 269

    (45) EXPRESION -> EXPRESION diferente EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualigual      reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    as              reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    punto           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    llavec          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    println         reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    let             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    id              reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    if              reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    match           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    continue        reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    return          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    break           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    while           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    i64             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    f64             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    not             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    para            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    fn              reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    for             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    struct          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    modulo          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    entero          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    decimal         reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    cadena          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    true            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    false           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    caracter        reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    loop            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    pub             reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    parc            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    llavea          reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    puntoycoma      reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    corc            reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igual           reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    bvertical       reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174

  ! mas             [ reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! menos           [ reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! div             [ reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! multi           [ reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! mod             [ reduce using rule 45 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! mayor           [ shift and go to state 175 ]
  ! menor           [ shift and go to state 176 ]
  ! mayorigual      [ shift and go to state 177 ]
  ! menorigual      [ shift and go to state 178 ]
  ! igualigual      [ shift and go to state 179 ]
  ! diferente       [ shift and go to state 180 ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 270

    (46) EXPRESION -> EXPRESION and EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    and             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    as              reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    punto           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    llavec          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    println         reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    let             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    id              reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    if              reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    match           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    continue        reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    return          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    break           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    while           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    i64             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    f64             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    not             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    para            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    fn              reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    for             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    struct          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    modulo          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    entero          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    decimal         reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    cadena          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    true            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    false           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    caracter        reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    loop            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    pub             reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    parc            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    llavea          reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    puntoycoma      reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    corc            reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    igual           reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    bvertical       reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180

  ! mas             [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menos           [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! div             [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multi           [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mod             [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualigual      [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 46 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 181 ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 271

    (47) EXPRESION -> EXPRESION or EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    or              reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    as              reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    punto           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    llavec          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    println         reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    let             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    id              reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    if              reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    match           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    continue        reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    return          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    break           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    while           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    i64             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    f64             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    not             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    para            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    fn              reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    for             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    struct          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    modulo          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    entero          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    decimal         reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    cadena          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    true            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    false           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    caracter        reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    loop            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    pub             reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    parc            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    llavea          reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    puntoycoma      reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    corc            reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    igual           reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    bvertical       reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181

  ! mas             [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menos           [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! div             [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multi           [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mod             [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualigual      [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 47 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 182 ]
  ! as              [ shift and go to state 183 ]
  ! punto           [ shift and go to state 184 ]


state 272

    (102) CAST_AS -> EXPRESION as TIPOVAR .

    mas             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    menos           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    div             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    multi           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    mod             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    mayor           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    menor           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    mayorigual      reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    menorigual      reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    igualigual      reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    diferente       reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    and             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    or              reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    as              reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    punto           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    llavec          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    println         reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    let             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    id              reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    if              reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    match           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    continue        reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    return          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    break           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    while           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    i64             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    f64             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    not             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    para            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    fn              reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    for             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    struct          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    modulo          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    entero          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    decimal         reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    cadena          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    true            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    false           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    caracter        reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    loop            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    pub             reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    coma            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    parc            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    llavea          reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    puntoycoma      reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    corc            reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    igual           reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)
    bvertical       reduce using rule 102 (CAST_AS -> EXPRESION as TIPOVAR .)


state 273

    (103) ABS -> EXPRESION punto abs . para parc

    para            shift and go to state 356


state 274

    (105) CLONE -> EXPRESION punto clone . para parc

    para            shift and go to state 357


state 275

    (108) SQRT -> EXPRESION punto sqrt . para parc

    para            shift and go to state 358


state 276

    (110) TO_STRING_OWNED -> EXPRESION punto toString . para parc

    para            shift and go to state 359


state 277

    (111) TO_STRING_OWNED -> EXPRESION punto toOwned . para parc

    para            shift and go to state 360


state 278

    (198) LEN -> EXPRESION punto len . para parc

    para            shift and go to state 361


state 279

    (114) PRINT -> println para EXPRESION . parc
    (115) PRINT -> println para EXPRESION . coma CONJEXP parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 362
    coma            shift and go to state 363
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 280

    (49) EXPRESION -> para EXPRESION parc .

    mas             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    menos           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    div             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    multi           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    mod             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    mayor           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    menor           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    mayorigual      reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    menorigual      reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    igualigual      reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    diferente       reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    and             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    or              reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    as              reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    punto           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    llavec          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    println         reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    let             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    id              reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    if              reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    match           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    continue        reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    return          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    break           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    while           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    i64             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    f64             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    not             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    para            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    fn              reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    for             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    struct          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    modulo          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    entero          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    decimal         reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    cadena          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    true            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    false           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    caracter        reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    loop            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    pub             reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    coma            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    parc            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    llavea          reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    puntoycoma      reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    corc            reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    igual           reduce using rule 49 (EXPRESION -> para EXPRESION parc .)
    bvertical       reduce using rule 49 (EXPRESION -> para EXPRESION parc .)


state 281

    (116) DECLARACION -> let mut id . dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let mut id . igual EXPRESION
    (120) DECLARACION -> let mut id . dospuntos TIPOVAR
    (175) DECVECTOR -> let mut id . igual VECI
    (177) DECVECTOR -> let mut id . dospuntos VEC igual VECI
    (179) DECVECTOR -> let mut id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> let mut id . igual Vec dospuntos dospuntos FUNCVEC
    (207) DECARREGLO -> let mut id . dospuntos DIMENSION_ARR igual ARREGLO
    (209) DECARREGLO -> let mut id . igual ARREGLO
    (236) DECSTRUCT -> let mut id . igual STRUCT_EXP
    (238) DECSTRUCT -> let mut id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 364
    igual           shift and go to state 365


state 282

    (118) DECLARACION -> let id dospuntos . TIPOVAR igual EXPRESION
    (176) DECVECTOR -> let id dospuntos . VEC igual VECI
    (178) DECVECTOR -> let id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (206) DECARREGLO -> let id dospuntos . DIMENSION_ARR igual ARREGLO
    (237) DECSTRUCT -> let id dospuntos . id igual STRUCT_EXP
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 140
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    Vec             shift and go to state 67
    cora            shift and go to state 144

    TIPOVAR                        shift and go to state 141
    VEC                            shift and go to state 143
    DIMENSION_ARR                  shift and go to state 142

state 283

    (119) DECLARACION -> let id igual . EXPRESION
    (174) DECVECTOR -> let id igual . VECI
    (180) DECVECTOR -> let id igual . Vec dospuntos dospuntos FUNCVEC
    (208) DECARREGLO -> let id igual . ARREGLO
    (235) DECSTRUCT -> let id igual . STRUCT_EXP
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    Vec             shift and go to state 149
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    id              shift and go to state 145
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 146
    VECI                           shift and go to state 148
    ARREGLO                        shift and go to state 147
    STRUCT_EXP                     shift and go to state 150
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 284

    (121) ASIGNACION -> id igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 121 (ASIGNACION -> id igual EXPRESION .)
    coma            reduce using rule 121 (ASIGNACION -> id igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 285

    (124) ASIGNACION -> id igual Vec . dospuntos dospuntos new para parc
    (125) ASIGNACION -> id igual Vec . dospuntos dospuntos withcapacity para EXPRESION parc

    dospuntos       shift and go to state 366


state 286

    (122) ASIGNACION -> id INDEXS igual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 367
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 287

    (123) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (107) CLONE -> id INDEXS punto . clone para parc
    (199) LEN -> id INDEXS punto . len para parc
    (203) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    clone           shift and go to state 369
    len             shift and go to state 370
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 368

state 288

    (204) INDEXS -> INDEXS cora . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 371
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 289

    (245) CONJ_ACCES -> id .

    igual           reduce using rule 245 (CONJ_ACCES -> id .)
    punto           reduce using rule 245 (CONJ_ACCES -> id .)
    mas             reduce using rule 245 (CONJ_ACCES -> id .)
    menos           reduce using rule 245 (CONJ_ACCES -> id .)
    div             reduce using rule 245 (CONJ_ACCES -> id .)
    multi           reduce using rule 245 (CONJ_ACCES -> id .)
    mod             reduce using rule 245 (CONJ_ACCES -> id .)
    mayor           reduce using rule 245 (CONJ_ACCES -> id .)
    menor           reduce using rule 245 (CONJ_ACCES -> id .)
    mayorigual      reduce using rule 245 (CONJ_ACCES -> id .)
    menorigual      reduce using rule 245 (CONJ_ACCES -> id .)
    igualigual      reduce using rule 245 (CONJ_ACCES -> id .)
    diferente       reduce using rule 245 (CONJ_ACCES -> id .)
    and             reduce using rule 245 (CONJ_ACCES -> id .)
    or              reduce using rule 245 (CONJ_ACCES -> id .)
    as              reduce using rule 245 (CONJ_ACCES -> id .)
    llavec          reduce using rule 245 (CONJ_ACCES -> id .)
    println         reduce using rule 245 (CONJ_ACCES -> id .)
    let             reduce using rule 245 (CONJ_ACCES -> id .)
    id              reduce using rule 245 (CONJ_ACCES -> id .)
    if              reduce using rule 245 (CONJ_ACCES -> id .)
    match           reduce using rule 245 (CONJ_ACCES -> id .)
    continue        reduce using rule 245 (CONJ_ACCES -> id .)
    return          reduce using rule 245 (CONJ_ACCES -> id .)
    break           reduce using rule 245 (CONJ_ACCES -> id .)
    while           reduce using rule 245 (CONJ_ACCES -> id .)
    i64             reduce using rule 245 (CONJ_ACCES -> id .)
    f64             reduce using rule 245 (CONJ_ACCES -> id .)
    not             reduce using rule 245 (CONJ_ACCES -> id .)
    para            reduce using rule 245 (CONJ_ACCES -> id .)
    fn              reduce using rule 245 (CONJ_ACCES -> id .)
    for             reduce using rule 245 (CONJ_ACCES -> id .)
    struct          reduce using rule 245 (CONJ_ACCES -> id .)
    modulo          reduce using rule 245 (CONJ_ACCES -> id .)
    entero          reduce using rule 245 (CONJ_ACCES -> id .)
    decimal         reduce using rule 245 (CONJ_ACCES -> id .)
    cadena          reduce using rule 245 (CONJ_ACCES -> id .)
    true            reduce using rule 245 (CONJ_ACCES -> id .)
    false           reduce using rule 245 (CONJ_ACCES -> id .)
    caracter        reduce using rule 245 (CONJ_ACCES -> id .)
    loop            reduce using rule 245 (CONJ_ACCES -> id .)
    pub             reduce using rule 245 (CONJ_ACCES -> id .)
    coma            reduce using rule 245 (CONJ_ACCES -> id .)
    parc            reduce using rule 245 (CONJ_ACCES -> id .)
    llavea          reduce using rule 245 (CONJ_ACCES -> id .)
    puntoycoma      reduce using rule 245 (CONJ_ACCES -> id .)
    corc            reduce using rule 245 (CONJ_ACCES -> id .)
    bvertical       reduce using rule 245 (CONJ_ACCES -> id .)


state 290

    (193) PUSH -> id punto push . para EXPRESION parc
    (194) PUSH -> id punto push . para VECI parc

    para            shift and go to state 372


state 291

    (195) INSERT -> id punto insert . para EXPRESION coma EXPRESION parc

    para            shift and go to state 373


state 292

    (246) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (243) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 375
    mas             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavec          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    punto           shift and go to state 374

  ! punto           [ reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 293

    (196) REMOVE -> id punto remove . para EXPRESION parc

    para            shift and go to state 376


state 294

    (104) ABS -> id punto abs . para parc

    para            shift and go to state 377


state 295

    (106) CLONE -> id punto clone . para parc

    para            shift and go to state 378


state 296

    (109) SQRT -> id punto sqrt . para parc

    para            shift and go to state 379


state 297

    (112) TO_STRING_OWNED -> id punto toString . para parc

    para            shift and go to state 380


state 298

    (113) TO_STRING_OWNED -> id punto toOwned . para parc

    para            shift and go to state 381


state 299

    (197) CONTAINS -> id punto contains . para ampersand EXPRESION parc

    para            shift and go to state 382


state 300

    (200) LEN -> id punto len . para parc

    para            shift and go to state 383


state 301

    (201) CAPACITY -> id punto capacity . para parc

    para            shift and go to state 384


state 302

    (259) ACCESO_MOD -> id dospuntos dospuntos . CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id dospuntos dospuntos . CONJ_ACCES_MOD para parc
    (261) CONJ_ACCES_MOD -> . CONJ_ACCES_MOD dospuntos dospuntos id
    (262) CONJ_ACCES_MOD -> . id

    id              shift and go to state 254

    CONJ_ACCES_MOD                 shift and go to state 385

state 303

    (172) CALL -> id para CONJEXP . parc
    (68) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 386
    coma            shift and go to state 387


state 304

    (173) CALL -> id para parc .

    puntoycoma      reduce using rule 173 (CALL -> id para parc .)
    mas             reduce using rule 173 (CALL -> id para parc .)
    menos           reduce using rule 173 (CALL -> id para parc .)
    div             reduce using rule 173 (CALL -> id para parc .)
    multi           reduce using rule 173 (CALL -> id para parc .)
    mod             reduce using rule 173 (CALL -> id para parc .)
    mayor           reduce using rule 173 (CALL -> id para parc .)
    menor           reduce using rule 173 (CALL -> id para parc .)
    mayorigual      reduce using rule 173 (CALL -> id para parc .)
    menorigual      reduce using rule 173 (CALL -> id para parc .)
    igualigual      reduce using rule 173 (CALL -> id para parc .)
    diferente       reduce using rule 173 (CALL -> id para parc .)
    and             reduce using rule 173 (CALL -> id para parc .)
    or              reduce using rule 173 (CALL -> id para parc .)
    as              reduce using rule 173 (CALL -> id para parc .)
    punto           reduce using rule 173 (CALL -> id para parc .)
    llavec          reduce using rule 173 (CALL -> id para parc .)
    println         reduce using rule 173 (CALL -> id para parc .)
    let             reduce using rule 173 (CALL -> id para parc .)
    id              reduce using rule 173 (CALL -> id para parc .)
    if              reduce using rule 173 (CALL -> id para parc .)
    match           reduce using rule 173 (CALL -> id para parc .)
    continue        reduce using rule 173 (CALL -> id para parc .)
    return          reduce using rule 173 (CALL -> id para parc .)
    break           reduce using rule 173 (CALL -> id para parc .)
    while           reduce using rule 173 (CALL -> id para parc .)
    i64             reduce using rule 173 (CALL -> id para parc .)
    f64             reduce using rule 173 (CALL -> id para parc .)
    not             reduce using rule 173 (CALL -> id para parc .)
    para            reduce using rule 173 (CALL -> id para parc .)
    fn              reduce using rule 173 (CALL -> id para parc .)
    for             reduce using rule 173 (CALL -> id para parc .)
    struct          reduce using rule 173 (CALL -> id para parc .)
    modulo          reduce using rule 173 (CALL -> id para parc .)
    entero          reduce using rule 173 (CALL -> id para parc .)
    decimal         reduce using rule 173 (CALL -> id para parc .)
    cadena          reduce using rule 173 (CALL -> id para parc .)
    true            reduce using rule 173 (CALL -> id para parc .)
    false           reduce using rule 173 (CALL -> id para parc .)
    caracter        reduce using rule 173 (CALL -> id para parc .)
    loop            reduce using rule 173 (CALL -> id para parc .)
    pub             reduce using rule 173 (CALL -> id para parc .)
    coma            reduce using rule 173 (CALL -> id para parc .)
    parc            reduce using rule 173 (CALL -> id para parc .)
    llavea          reduce using rule 173 (CALL -> id para parc .)
    corc            reduce using rule 173 (CALL -> id para parc .)
    igual           reduce using rule 173 (CALL -> id para parc .)
    bvertical       reduce using rule 173 (CALL -> id para parc .)


state 305

    (69) CONJEXP -> ELCONJ .

    parc            reduce using rule 69 (CONJEXP -> ELCONJ .)
    coma            reduce using rule 69 (CONJEXP -> ELCONJ .)


state 306

    (70) ELCONJ -> ampersand . ELCONJ
    (74) ELCONJ -> ampersand . mut EXPRESION
    (70) ELCONJ -> . ampersand ELCONJ
    (71) ELCONJ -> . EXPRESION
    (72) ELCONJ -> . VECI
    (73) ELCONJ -> . ARREGLO
    (74) ELCONJ -> . ampersand mut EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    mut             shift and go to state 389
    ampersand       shift and go to state 306
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    ELCONJ                         shift and go to state 388
    EXPRESION                      shift and go to state 307
    VECI                           shift and go to state 308
    ARREGLO                        shift and go to state 309
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 307

    (71) ELCONJ -> EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            reduce using rule 71 (ELCONJ -> EXPRESION .)
    coma            reduce using rule 71 (ELCONJ -> EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 308

    (72) ELCONJ -> VECI .

    parc            reduce using rule 72 (ELCONJ -> VECI .)
    coma            reduce using rule 72 (ELCONJ -> VECI .)


state 309

    (73) ELCONJ -> ARREGLO .

    parc            reduce using rule 73 (ELCONJ -> ARREGLO .)
    coma            reduce using rule 73 (ELCONJ -> ARREGLO .)


state 310

    (205) INDEXS -> cora EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 390
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 311

    (126) IF -> if EXPRESION BLOQUE_INST .
    (127) IF -> if EXPRESION BLOQUE_INST . else BLOQUE_INST
    (128) IF -> if EXPRESION BLOQUE_INST . else IF

    llavec          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    println         reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    let             reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    id              reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    if              reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    match           reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    continue        reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    return          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    break           reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    while           reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    i64             reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    f64             reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    menos           reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    not             reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    para            reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    fn              reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    for             reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    struct          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    modulo          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    entero          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    decimal         reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    cadena          reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    true            reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    false           reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    caracter        reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    loop            reduce using rule 126 (IF -> if EXPRESION BLOQUE_INST .)
    else            shift and go to state 391


state 312

    (89) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION llavea . EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if EXPRESION llavea . EXPRESION llavec else IF_TER
    (155) BLOQUE_INST -> llavea . INSTRUCCIONES llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 393
    INSTRUCCIONES                  shift and go to state 394
    IF_TER                         shift and go to state 113
    INSTRUCCION                    shift and go to state 73
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 313

    (129) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match EXPRESION llavea . guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match EXPRESION llavea . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (97) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (142) BRAZOS -> . BRAZOS BRAZO
    (143) BRAZOS -> . BRAZO
    (99) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (100) BRAZOS_TER -> . BRAZO_TER
    (144) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (145) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (101) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (146) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (147) CONJEXPM -> . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 402
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 400
    BRAZOS                         shift and go to state 401
    BRAZOS_TER                     shift and go to state 403
    BRAZO                          shift and go to state 404
    BRAZO_TER                      shift and go to state 405
    CONJEXPM                       shift and go to state 406
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 314

    (154) WHILE -> while EXPRESION BLOQUE_INST .

    llavec          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    println         reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    let             reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    id              reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    if              reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    match           reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    continue        reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    return          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    break           reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    while           reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    i64             reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    f64             reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    menos           reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    not             reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    para            reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    fn              reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    for             reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    struct          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    modulo          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    entero          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    decimal         reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    cadena          reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    true            reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    false           reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    caracter        reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)
    loop            reduce using rule 154 (WHILE -> while EXPRESION BLOQUE_INST .)


state 315

    (37) EXPRESION -> i64 dospuntos dospuntos . pow para EXPRESION coma EXPRESION parc

    pow             shift and go to state 407


state 316

    (38) EXPRESION -> f64 dospuntos dospuntos . powf para EXPRESION coma EXPRESION parc

    powf            shift and go to state 408


state 317

    (220) FORIN -> for id in . ARRFOR BLOQUE_INST
    (221) ARRFOR -> . CHARS
    (222) ARRFOR -> . ARREGLO
    (223) ARRFOR -> . VECI
    (224) ARRFOR -> . RANGO
    (225) ARRFOR -> . ID
    (226) CHARS -> . EXPRESION punto chars para parc
    (227) CHARS -> . id punto chars para parc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (228) RANGO -> . EXPRESION punto punto EXPRESION
    (80) ID -> . id
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    id              shift and go to state 409
    cora            shift and go to state 154
    vecI            shift and go to state 155
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    ARRFOR                         shift and go to state 410
    CHARS                          shift and go to state 411
    ARREGLO                        shift and go to state 412
    VECI                           shift and go to state 413
    RANGO                          shift and go to state 414
    ID                             shift and go to state 415
    EXPRESION                      shift and go to state 416
    TIPODATO                       shift and go to state 111
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 318

    (169) PARAMETRO -> mut id dospuntos ampersand VEC .

    parc            reduce using rule 169 (PARAMETRO -> mut id dospuntos ampersand VEC .)
    coma            reduce using rule 169 (PARAMETRO -> mut id dospuntos ampersand VEC .)


state 319

    (238) DECSTRUCT -> let mut id dospuntos id igual . STRUCT_EXP
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    id              shift and go to state 324

    STRUCT_EXP                     shift and go to state 417

state 320

    (116) DECLARACION -> let mut id dospuntos TIPOVAR igual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 418
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 321

    (207) DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual . ARREGLO
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 154

    ARREGLO                        shift and go to state 419

state 322

    (177) DECVECTOR -> let mut id dospuntos VEC igual . VECI
    (179) DECVECTOR -> let mut id dospuntos VEC igual . Vec dospuntos dospuntos FUNCVEC
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    Vec             shift and go to state 421
    vecI            shift and go to state 155

    VECI                           shift and go to state 420

state 323

    (181) DECVECTOR -> let mut id igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 422


state 324

    (239) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec

    llavea          shift and go to state 235


state 325

    (237) DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .

    llavec          reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    pub             reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    fn              reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    modulo          reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    struct          reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    let             reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    coma            reduce using rule 237 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)


state 326

    (118) DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    pub             reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    fn              reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    modulo          reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    struct          reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    let             reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    puntoycoma      reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    coma            reduce using rule 118 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 327

    (206) DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .

    llavec          reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    pub             reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    fn              reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    modulo          reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    struct          reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    let             reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    puntoycoma      reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    coma            reduce using rule 206 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)


state 328

    (176) DECVECTOR -> let id dospuntos VEC igual VECI .

    llavec          reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    pub             reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    fn              reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    modulo          reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    struct          reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    let             reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    puntoycoma      reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    coma            reduce using rule 176 (DECVECTOR -> let id dospuntos VEC igual VECI .)


state 329

    (178) DECVECTOR -> let id dospuntos VEC igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 423


state 330

    (210) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 424
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 331

    (211) DIMENSION_ARR -> cora TIPOVAR puntoycoma . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 425
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 332

    (212) DIMENSION_ARR -> cora id puntoycoma . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 426
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 333

    (242) EXSTRUCT -> id . dospuntos EXPRESION

    dospuntos       shift and go to state 427


state 334

    (239) STRUCT_EXP -> id llavea CONJEXP_STRUCT . llavec
    (240) CONJEXP_STRUCT -> CONJEXP_STRUCT . coma EXSTRUCT

    llavec          shift and go to state 428
    coma            shift and go to state 429


state 335

    (241) CONJEXP_STRUCT -> EXSTRUCT .

    llavec          reduce using rule 241 (CONJEXP_STRUCT -> EXSTRUCT .)
    coma            reduce using rule 241 (CONJEXP_STRUCT -> EXSTRUCT .)


state 336

    (243) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    mas             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavec          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    pub             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    parc            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavea          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    puntoycoma      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    corc            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igual           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    bvertical       reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    punto           shift and go to state 374

  ! punto           [ reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 337

    (107) CLONE -> id INDEXS punto . clone para parc
    (199) LEN -> id INDEXS punto . len para parc
    (203) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    clone           shift and go to state 369
    len             shift and go to state 370
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 430

state 338

    (180) DECVECTOR -> let id igual Vec dospuntos dospuntos . FUNCVEC
    (191) FUNCVEC -> . new para parc
    (192) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 432
    withcapacity    shift and go to state 433

    FUNCVEC                        shift and go to state 431

state 339

    (213) ARREGLO -> cora CONT_ARR corc .

    llavec          reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    pub             reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    fn              reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    modulo          reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    struct          reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    let             reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    coma            reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    corc            reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    parc            reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    puntoycoma      reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)
    llavea          reduce using rule 213 (ARREGLO -> cora CONT_ARR corc .)


state 340

    (215) CONT_ARR -> CONT_ARR coma . ELARR
    (217) ELARR -> . ARREGLO
    (218) ELARR -> . EXPRESION
    (219) ELARR -> . STRUCT_EXP
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    cora            shift and go to state 154
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    id              shift and go to state 145
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    ELARR                          shift and go to state 434
    ARREGLO                        shift and go to state 242
    EXPRESION                      shift and go to state 435
    STRUCT_EXP                     shift and go to state 243
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 341

    (214) ARREGLO -> cora EXPRESION puntoycoma . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 436
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 342

    (185) VECI -> vecI cora CONJVECI . corc
    (187) CONJVECI -> CONJVECI . coma ELVEC

    corc            shift and go to state 437
    coma            shift and go to state 438


state 343

    (186) VECI -> vecI cora EXPRESION . puntoycoma EXPRESION corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (189) ELVEC -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      shift and go to state 439
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    corc            reduce using rule 189 (ELVEC -> EXPRESION .)
    coma            reduce using rule 189 (ELVEC -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184


state 344

    (188) CONJVECI -> ELVEC .

    corc            reduce using rule 188 (CONJVECI -> ELVEC .)
    coma            reduce using rule 188 (CONJVECI -> ELVEC .)


state 345

    (190) ELVEC -> VECI .

    corc            reduce using rule 190 (ELVEC -> VECI .)
    coma            reduce using rule 190 (ELVEC -> VECI .)


state 346

    (89) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION llavea . EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if EXPRESION llavea . EXPRESION llavec else IF_TER
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 393
    INSTRUCCIONES                  shift and go to state 440
    IF_TER                         shift and go to state 113
    INSTRUCCION                    shift and go to state 73
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 347

    (97) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (99) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (100) BRAZOS_TER -> . BRAZO_TER
    (101) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (146) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (147) CONJEXPM -> . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 441
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 400
    BRAZOS_TER                     shift and go to state 403
    BRAZO_TER                      shift and go to state 405
    CONJEXPM                       shift and go to state 442
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 348

    (166) PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR . corc
    (211) DIMENSION_ARR -> cora TIPOVAR . puntoycoma EXPRESION corc

    corc            shift and go to state 443
    puntoycoma      shift and go to state 331


state 349

    (182) VEC -> Vec menor VEC mayor .

    parc            reduce using rule 182 (VEC -> Vec menor VEC mayor .)
    coma            reduce using rule 182 (VEC -> Vec menor VEC mayor .)
    igual           reduce using rule 182 (VEC -> Vec menor VEC mayor .)
    mayor           reduce using rule 182 (VEC -> Vec menor VEC mayor .)
    llavea          reduce using rule 182 (VEC -> Vec menor VEC mayor .)


state 350

    (183) VEC -> Vec menor TIPOVAR mayor .

    parc            reduce using rule 183 (VEC -> Vec menor TIPOVAR mayor .)
    coma            reduce using rule 183 (VEC -> Vec menor TIPOVAR mayor .)
    igual           reduce using rule 183 (VEC -> Vec menor TIPOVAR mayor .)
    mayor           reduce using rule 183 (VEC -> Vec menor TIPOVAR mayor .)
    llavea          reduce using rule 183 (VEC -> Vec menor TIPOVAR mayor .)


state 351

    (184) VEC -> Vec menor CONJ_ACCES_MOD mayor .

    parc            reduce using rule 184 (VEC -> Vec menor CONJ_ACCES_MOD mayor .)
    coma            reduce using rule 184 (VEC -> Vec menor CONJ_ACCES_MOD mayor .)
    igual           reduce using rule 184 (VEC -> Vec menor CONJ_ACCES_MOD mayor .)
    mayor           reduce using rule 184 (VEC -> Vec menor CONJ_ACCES_MOD mayor .)
    llavea          reduce using rule 184 (VEC -> Vec menor CONJ_ACCES_MOD mayor .)


state 352

    (261) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos . dospuntos id

    dospuntos       shift and go to state 444


state 353

    (160) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .

    modulo          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    fn              reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    struct          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    $end            reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    llavec          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    pub             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    let             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    println         reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    id              reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    if              reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    match           reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    continue        reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    return          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    break           reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    while           reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    i64             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    f64             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    menos           reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    not             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    para            reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    for             reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    entero          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    decimal         reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    cadena          reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    true            reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    false           reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    caracter        reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    loop            reduce using rule 160 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)


state 354

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .

    modulo          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    fn              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    struct          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    $end            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    llavec          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    pub             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    let             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    println         reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    id              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    if              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    match           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    continue        reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    return          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    break           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    while           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    i64             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    f64             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    menos           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    not             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    para            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    for             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    entero          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    decimal         reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    cadena          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    true            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    false           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    caracter        reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    loop            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)


state 355

    (161) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .

    modulo          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    fn              reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    struct          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    $end            reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    llavec          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    pub             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    let             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    println         reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    id              reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    if              reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    match           reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    continue        reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    return          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    break           reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    while           reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    i64             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    f64             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    menos           reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    not             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    para            reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    for             reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    entero          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    decimal         reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    cadena          reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    true            reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    false           reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    caracter        reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    loop            reduce using rule 161 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)


state 356

    (103) ABS -> EXPRESION punto abs para . parc

    parc            shift and go to state 445


state 357

    (105) CLONE -> EXPRESION punto clone para . parc

    parc            shift and go to state 446


state 358

    (108) SQRT -> EXPRESION punto sqrt para . parc

    parc            shift and go to state 447


state 359

    (110) TO_STRING_OWNED -> EXPRESION punto toString para . parc

    parc            shift and go to state 448


state 360

    (111) TO_STRING_OWNED -> EXPRESION punto toOwned para . parc

    parc            shift and go to state 449


state 361

    (198) LEN -> EXPRESION punto len para . parc

    parc            shift and go to state 450


state 362

    (114) PRINT -> println para EXPRESION parc .

    puntoycoma      reduce using rule 114 (PRINT -> println para EXPRESION parc .)
    coma            reduce using rule 114 (PRINT -> println para EXPRESION parc .)


state 363

    (115) PRINT -> println para EXPRESION coma . CONJEXP parc
    (68) CONJEXP -> . CONJEXP coma ELCONJ
    (69) CONJEXP -> . ELCONJ
    (70) ELCONJ -> . ampersand ELCONJ
    (71) ELCONJ -> . EXPRESION
    (72) ELCONJ -> . VECI
    (73) ELCONJ -> . ARREGLO
    (74) ELCONJ -> . ampersand mut EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    ampersand       shift and go to state 306
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 307
    CONJEXP                        shift and go to state 451
    ELCONJ                         shift and go to state 305
    VECI                           shift and go to state 308
    ARREGLO                        shift and go to state 309
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 364

    (116) DECLARACION -> let mut id dospuntos . TIPOVAR igual EXPRESION
    (120) DECLARACION -> let mut id dospuntos . TIPOVAR
    (177) DECVECTOR -> let mut id dospuntos . VEC igual VECI
    (179) DECVECTOR -> let mut id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (207) DECARREGLO -> let mut id dospuntos . DIMENSION_ARR igual ARREGLO
    (238) DECSTRUCT -> let mut id dospuntos . id igual STRUCT_EXP
    (82) TIPOVAR -> . i64
    (83) TIPOVAR -> . f64
    (84) TIPOVAR -> . bool
    (85) TIPOVAR -> . string
    (86) TIPOVAR -> . char
    (87) TIPOVAR -> . str
    (88) TIPOVAR -> . usize
    (182) VEC -> . Vec menor VEC mayor
    (183) VEC -> . Vec menor TIPOVAR mayor
    (184) VEC -> . Vec menor CONJ_ACCES_MOD mayor
    (210) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (211) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (212) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 219
    i64             shift and go to state 60
    f64             shift and go to state 61
    bool            shift and go to state 62
    string          shift and go to state 63
    char            shift and go to state 64
    str             shift and go to state 65
    usize           shift and go to state 66
    Vec             shift and go to state 67
    cora            shift and go to state 144

    TIPOVAR                        shift and go to state 220
    VEC                            shift and go to state 222
    DIMENSION_ARR                  shift and go to state 221

state 365

    (117) DECLARACION -> let mut id igual . EXPRESION
    (175) DECVECTOR -> let mut id igual . VECI
    (181) DECVECTOR -> let mut id igual . Vec dospuntos dospuntos FUNCVEC
    (209) DECARREGLO -> let mut id igual . ARREGLO
    (236) DECSTRUCT -> let mut id igual . STRUCT_EXP
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (239) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    Vec             shift and go to state 226
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    id              shift and go to state 145
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 223
    VECI                           shift and go to state 225
    ARREGLO                        shift and go to state 224
    STRUCT_EXP                     shift and go to state 227
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 366

    (124) ASIGNACION -> id igual Vec dospuntos . dospuntos new para parc
    (125) ASIGNACION -> id igual Vec dospuntos . dospuntos withcapacity para EXPRESION parc

    dospuntos       shift and go to state 452


state 367

    (122) ASIGNACION -> id INDEXS igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 122 (ASIGNACION -> id INDEXS igual EXPRESION .)
    coma            reduce using rule 122 (ASIGNACION -> id INDEXS igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 368

    (123) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (203) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 453
    mas             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavec          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    punto           shift and go to state 374

  ! punto           [ reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 369

    (107) CLONE -> id INDEXS punto clone . para parc

    para            shift and go to state 454


state 370

    (199) LEN -> id INDEXS punto len . para parc

    para            shift and go to state 455


state 371

    (204) INDEXS -> INDEXS cora EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 456
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 372

    (193) PUSH -> id punto push para . EXPRESION parc
    (194) PUSH -> id punto push para . VECI parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 457
    VECI                           shift and go to state 458
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 373

    (195) INSERT -> id punto insert para . EXPRESION coma EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 459
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 374

    (244) CONJ_ACCES -> CONJ_ACCES punto . id

    id              shift and go to state 460


state 375

    (246) MOD_VAR_STRUCT -> id punto CONJ_ACCES igual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 461
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 376

    (196) REMOVE -> id punto remove para . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 462
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 377

    (104) ABS -> id punto abs para . parc

    parc            shift and go to state 463


state 378

    (106) CLONE -> id punto clone para . parc

    parc            shift and go to state 464


state 379

    (109) SQRT -> id punto sqrt para . parc

    parc            shift and go to state 465


state 380

    (112) TO_STRING_OWNED -> id punto toString para . parc

    parc            shift and go to state 466


state 381

    (113) TO_STRING_OWNED -> id punto toOwned para . parc

    parc            shift and go to state 467


state 382

    (197) CONTAINS -> id punto contains para . ampersand EXPRESION parc

    ampersand       shift and go to state 468


state 383

    (200) LEN -> id punto len para . parc

    parc            shift and go to state 469


state 384

    (201) CAPACITY -> id punto capacity para . parc

    parc            shift and go to state 470


state 385

    (259) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD . para CONJEXP parc
    (260) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD . para parc
    (261) CONJ_ACCES_MOD -> CONJ_ACCES_MOD . dospuntos dospuntos id

    para            shift and go to state 471
    dospuntos       shift and go to state 352


state 386

    (172) CALL -> id para CONJEXP parc .

    puntoycoma      reduce using rule 172 (CALL -> id para CONJEXP parc .)
    mas             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    menos           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    div             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    multi           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    mod             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    mayor           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    menor           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    mayorigual      reduce using rule 172 (CALL -> id para CONJEXP parc .)
    menorigual      reduce using rule 172 (CALL -> id para CONJEXP parc .)
    igualigual      reduce using rule 172 (CALL -> id para CONJEXP parc .)
    diferente       reduce using rule 172 (CALL -> id para CONJEXP parc .)
    and             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    or              reduce using rule 172 (CALL -> id para CONJEXP parc .)
    as              reduce using rule 172 (CALL -> id para CONJEXP parc .)
    punto           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    llavec          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    println         reduce using rule 172 (CALL -> id para CONJEXP parc .)
    let             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    id              reduce using rule 172 (CALL -> id para CONJEXP parc .)
    if              reduce using rule 172 (CALL -> id para CONJEXP parc .)
    match           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    continue        reduce using rule 172 (CALL -> id para CONJEXP parc .)
    return          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    break           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    while           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    i64             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    f64             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    not             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    para            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    fn              reduce using rule 172 (CALL -> id para CONJEXP parc .)
    for             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    struct          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    modulo          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    entero          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    decimal         reduce using rule 172 (CALL -> id para CONJEXP parc .)
    cadena          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    true            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    false           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    caracter        reduce using rule 172 (CALL -> id para CONJEXP parc .)
    loop            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    pub             reduce using rule 172 (CALL -> id para CONJEXP parc .)
    coma            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    parc            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    llavea          reduce using rule 172 (CALL -> id para CONJEXP parc .)
    corc            reduce using rule 172 (CALL -> id para CONJEXP parc .)
    igual           reduce using rule 172 (CALL -> id para CONJEXP parc .)
    bvertical       reduce using rule 172 (CALL -> id para CONJEXP parc .)


state 387

    (68) CONJEXP -> CONJEXP coma . ELCONJ
    (70) ELCONJ -> . ampersand ELCONJ
    (71) ELCONJ -> . EXPRESION
    (72) ELCONJ -> . VECI
    (73) ELCONJ -> . ARREGLO
    (74) ELCONJ -> . ampersand mut EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    ampersand       shift and go to state 306
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    ELCONJ                         shift and go to state 472
    EXPRESION                      shift and go to state 307
    VECI                           shift and go to state 308
    ARREGLO                        shift and go to state 309
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 388

    (70) ELCONJ -> ampersand ELCONJ .

    parc            reduce using rule 70 (ELCONJ -> ampersand ELCONJ .)
    coma            reduce using rule 70 (ELCONJ -> ampersand ELCONJ .)


state 389

    (74) ELCONJ -> ampersand mut . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 473
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 390

    (205) INDEXS -> cora EXPRESION corc .

    igual           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    punto           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    cora            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    mas             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    menos           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    div             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    multi           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    mod             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    mayor           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    menor           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    mayorigual      reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    menorigual      reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    igualigual      reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    diferente       reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    and             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    or              reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    as              reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    llavec          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    println         reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    let             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    id              reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    if              reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    match           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    continue        reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    return          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    break           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    while           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    i64             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    f64             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    not             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    para            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    fn              reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    for             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    struct          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    modulo          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    entero          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    decimal         reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    cadena          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    true            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    false           reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    caracter        reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    loop            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    pub             reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    coma            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    puntoycoma      reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    corc            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    parc            reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    llavea          reduce using rule 205 (INDEXS -> cora EXPRESION corc .)
    bvertical       reduce using rule 205 (INDEXS -> cora EXPRESION corc .)


state 391

    (127) IF -> if EXPRESION BLOQUE_INST else . BLOQUE_INST
    (128) IF -> if EXPRESION BLOQUE_INST else . IF
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF

    llavea          shift and go to state 48
    if              shift and go to state 474

    BLOQUE_INST                    shift and go to state 475
    IF                             shift and go to state 476

state 392

    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (126) IF -> if . EXPRESION BLOQUE_INST
    (127) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> if . EXPRESION BLOQUE_INST else IF
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 477
    IF_TER                         shift and go to state 113
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 393

    (90) IF_TER -> if EXPRESION llavea EXPRESION . llavec
    (92) IF_TER -> if EXPRESION llavea EXPRESION . llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea EXPRESION . llavec else llavea INSTRUCCIONES EXPRESION llavec
    (96) IF_TER -> if EXPRESION llavea EXPRESION . llavec else IF_TER
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for llavec resolved as shift
  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 478
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184

  ! llavec          [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]
  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 394

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else IF_TER
    (155) BLOQUE_INST -> llavea INSTRUCCIONES . llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    llavec          shift and go to state 162
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 479
    IF_TER                         shift and go to state 113
    INSTRUCCION                    shift and go to state 163
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 395

    (60) EXPRESION -> CALL .
    (19) INSTRUCCION -> CALL . puntoycoma

    llavec          reduce using rule 60 (EXPRESION -> CALL .)
    mas             reduce using rule 60 (EXPRESION -> CALL .)
    menos           reduce using rule 60 (EXPRESION -> CALL .)
    div             reduce using rule 60 (EXPRESION -> CALL .)
    multi           reduce using rule 60 (EXPRESION -> CALL .)
    mod             reduce using rule 60 (EXPRESION -> CALL .)
    mayor           reduce using rule 60 (EXPRESION -> CALL .)
    menor           reduce using rule 60 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 60 (EXPRESION -> CALL .)
    menorigual      reduce using rule 60 (EXPRESION -> CALL .)
    igualigual      reduce using rule 60 (EXPRESION -> CALL .)
    diferente       reduce using rule 60 (EXPRESION -> CALL .)
    and             reduce using rule 60 (EXPRESION -> CALL .)
    or              reduce using rule 60 (EXPRESION -> CALL .)
    as              reduce using rule 60 (EXPRESION -> CALL .)
    punto           reduce using rule 60 (EXPRESION -> CALL .)
    i64             reduce using rule 60 (EXPRESION -> CALL .)
    f64             reduce using rule 60 (EXPRESION -> CALL .)
    not             reduce using rule 60 (EXPRESION -> CALL .)
    para            reduce using rule 60 (EXPRESION -> CALL .)
    entero          reduce using rule 60 (EXPRESION -> CALL .)
    decimal         reduce using rule 60 (EXPRESION -> CALL .)
    cadena          reduce using rule 60 (EXPRESION -> CALL .)
    true            reduce using rule 60 (EXPRESION -> CALL .)
    false           reduce using rule 60 (EXPRESION -> CALL .)
    caracter        reduce using rule 60 (EXPRESION -> CALL .)
    id              reduce using rule 60 (EXPRESION -> CALL .)
    if              reduce using rule 60 (EXPRESION -> CALL .)
    match           reduce using rule 60 (EXPRESION -> CALL .)
    loop            reduce using rule 60 (EXPRESION -> CALL .)
    println         reduce using rule 60 (EXPRESION -> CALL .)
    let             reduce using rule 60 (EXPRESION -> CALL .)
    continue        reduce using rule 60 (EXPRESION -> CALL .)
    return          reduce using rule 60 (EXPRESION -> CALL .)
    break           reduce using rule 60 (EXPRESION -> CALL .)
    while           reduce using rule 60 (EXPRESION -> CALL .)
    fn              reduce using rule 60 (EXPRESION -> CALL .)
    for             reduce using rule 60 (EXPRESION -> CALL .)
    struct          reduce using rule 60 (EXPRESION -> CALL .)
    modulo          reduce using rule 60 (EXPRESION -> CALL .)
    puntoycoma      shift and go to state 185


state 396

    (61) EXPRESION -> REMOVE .
    (29) INSTRUCCION -> REMOVE . puntoycoma

    llavec          reduce using rule 61 (EXPRESION -> REMOVE .)
    mas             reduce using rule 61 (EXPRESION -> REMOVE .)
    menos           reduce using rule 61 (EXPRESION -> REMOVE .)
    div             reduce using rule 61 (EXPRESION -> REMOVE .)
    multi           reduce using rule 61 (EXPRESION -> REMOVE .)
    mod             reduce using rule 61 (EXPRESION -> REMOVE .)
    mayor           reduce using rule 61 (EXPRESION -> REMOVE .)
    menor           reduce using rule 61 (EXPRESION -> REMOVE .)
    mayorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    menorigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    igualigual      reduce using rule 61 (EXPRESION -> REMOVE .)
    diferente       reduce using rule 61 (EXPRESION -> REMOVE .)
    and             reduce using rule 61 (EXPRESION -> REMOVE .)
    or              reduce using rule 61 (EXPRESION -> REMOVE .)
    as              reduce using rule 61 (EXPRESION -> REMOVE .)
    punto           reduce using rule 61 (EXPRESION -> REMOVE .)
    i64             reduce using rule 61 (EXPRESION -> REMOVE .)
    f64             reduce using rule 61 (EXPRESION -> REMOVE .)
    not             reduce using rule 61 (EXPRESION -> REMOVE .)
    para            reduce using rule 61 (EXPRESION -> REMOVE .)
    entero          reduce using rule 61 (EXPRESION -> REMOVE .)
    decimal         reduce using rule 61 (EXPRESION -> REMOVE .)
    cadena          reduce using rule 61 (EXPRESION -> REMOVE .)
    true            reduce using rule 61 (EXPRESION -> REMOVE .)
    false           reduce using rule 61 (EXPRESION -> REMOVE .)
    caracter        reduce using rule 61 (EXPRESION -> REMOVE .)
    id              reduce using rule 61 (EXPRESION -> REMOVE .)
    if              reduce using rule 61 (EXPRESION -> REMOVE .)
    match           reduce using rule 61 (EXPRESION -> REMOVE .)
    loop            reduce using rule 61 (EXPRESION -> REMOVE .)
    println         reduce using rule 61 (EXPRESION -> REMOVE .)
    let             reduce using rule 61 (EXPRESION -> REMOVE .)
    continue        reduce using rule 61 (EXPRESION -> REMOVE .)
    return          reduce using rule 61 (EXPRESION -> REMOVE .)
    break           reduce using rule 61 (EXPRESION -> REMOVE .)
    while           reduce using rule 61 (EXPRESION -> REMOVE .)
    fn              reduce using rule 61 (EXPRESION -> REMOVE .)
    for             reduce using rule 61 (EXPRESION -> REMOVE .)
    struct          reduce using rule 61 (EXPRESION -> REMOVE .)
    modulo          reduce using rule 61 (EXPRESION -> REMOVE .)
    puntoycoma      shift and go to state 192


state 397

    (67) EXPRESION -> ACCESO_MOD .
    (31) INSTRUCCION -> ACCESO_MOD . puntoycoma

    llavec          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mas             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 67 (EXPRESION -> ACCESO_MOD .)
    puntoycoma      shift and go to state 193


state 398

    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (121) ASIGNACION -> id . igual EXPRESION
    (122) ASIGNACION -> id . INDEXS igual EXPRESION
    (123) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> id . igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> id . igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> id . punto push para EXPRESION parc
    (194) PUSH -> id . punto push para VECI parc
    (195) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    llavec          reduce using rule 80 (ID -> id .)
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    i64             reduce using rule 80 (ID -> id .)
    f64             reduce using rule 80 (ID -> id .)
    not             reduce using rule 80 (ID -> id .)
    entero          reduce using rule 80 (ID -> id .)
    decimal         reduce using rule 80 (ID -> id .)
    cadena          reduce using rule 80 (ID -> id .)
    true            reduce using rule 80 (ID -> id .)
    false           reduce using rule 80 (ID -> id .)
    caracter        reduce using rule 80 (ID -> id .)
    id              reduce using rule 80 (ID -> id .)
    if              reduce using rule 80 (ID -> id .)
    match           reduce using rule 80 (ID -> id .)
    loop            reduce using rule 80 (ID -> id .)
    println         reduce using rule 80 (ID -> id .)
    let             reduce using rule 80 (ID -> id .)
    continue        reduce using rule 80 (ID -> id .)
    return          reduce using rule 80 (ID -> id .)
    break           reduce using rule 80 (ID -> id .)
    while           reduce using rule 80 (ID -> id .)
    fn              reduce using rule 80 (ID -> id .)
    for             reduce using rule 80 (ID -> id .)
    struct          reduce using rule 80 (ID -> id .)
    modulo          reduce using rule 80 (ID -> id .)
    coma            reduce using rule 80 (ID -> id .)
    punto           shift and go to state 480
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    igual           shift and go to state 199
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]
  ! para            [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 481

state 399

    (97) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (129) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match . EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match . EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 482
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 400

    (147) CONJEXPM -> EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    igual           reduce using rule 147 (CONJEXPM -> EXPRESION .)
    bvertical       reduce using rule 147 (CONJEXPM -> EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 401

    (129) MATCH -> match EXPRESION llavea BRAZOS . guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea BRAZOS . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (142) BRAZOS -> BRAZOS . BRAZO
    (144) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (145) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (146) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (147) CONJEXPM -> . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 483
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 400
    BRAZO                          shift and go to state 484
    CONJEXPM                       shift and go to state 485
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 402

    (130) MATCH -> match EXPRESION llavea guionbajo . igual mayor BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo . igual mayor INSTRUCCION_1LINE coma llavec
    (98) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 486


state 403

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER . guionbajo igual mayor EXPRESION coma llavec
    (99) BRAZOS_TER -> BRAZOS_TER . BRAZO_TER
    (101) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (146) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (147) CONJEXPM -> . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 487
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 400
    BRAZO_TER                      shift and go to state 488
    CONJEXPM                       shift and go to state 442
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 404

    (143) BRAZOS -> BRAZO .

    guionbajo       reduce using rule 143 (BRAZOS -> BRAZO .)
    i64             reduce using rule 143 (BRAZOS -> BRAZO .)
    f64             reduce using rule 143 (BRAZOS -> BRAZO .)
    menos           reduce using rule 143 (BRAZOS -> BRAZO .)
    not             reduce using rule 143 (BRAZOS -> BRAZO .)
    para            reduce using rule 143 (BRAZOS -> BRAZO .)
    entero          reduce using rule 143 (BRAZOS -> BRAZO .)
    decimal         reduce using rule 143 (BRAZOS -> BRAZO .)
    cadena          reduce using rule 143 (BRAZOS -> BRAZO .)
    true            reduce using rule 143 (BRAZOS -> BRAZO .)
    false           reduce using rule 143 (BRAZOS -> BRAZO .)
    caracter        reduce using rule 143 (BRAZOS -> BRAZO .)
    id              reduce using rule 143 (BRAZOS -> BRAZO .)
    if              reduce using rule 143 (BRAZOS -> BRAZO .)
    match           reduce using rule 143 (BRAZOS -> BRAZO .)
    loop            reduce using rule 143 (BRAZOS -> BRAZO .)


state 405

    (100) BRAZOS_TER -> BRAZO_TER .

    guionbajo       reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    i64             reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    f64             reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    menos           reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    not             reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    para            reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    entero          reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    decimal         reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    cadena          reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    true            reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    false           reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    caracter        reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    id              reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    if              reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    match           reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)
    loop            reduce using rule 100 (BRAZOS_TER -> BRAZO_TER .)


state 406

    (144) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (101) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (146) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 489
    bvertical       shift and go to state 490


state 407

    (37) EXPRESION -> i64 dospuntos dospuntos pow . para EXPRESION coma EXPRESION parc

    para            shift and go to state 491


state 408

    (38) EXPRESION -> f64 dospuntos dospuntos powf . para EXPRESION coma EXPRESION parc

    para            shift and go to state 492


state 409

    (227) CHARS -> id . punto chars para parc
    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 493
    llavea          reduce using rule 80 (ID -> id .)
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 237

state 410

    (220) FORIN -> for id in ARRFOR . BLOQUE_INST
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 494

state 411

    (221) ARRFOR -> CHARS .

    llavea          reduce using rule 221 (ARRFOR -> CHARS .)


state 412

    (222) ARRFOR -> ARREGLO .

    llavea          reduce using rule 222 (ARRFOR -> ARREGLO .)


state 413

    (223) ARRFOR -> VECI .

    llavea          reduce using rule 223 (ARRFOR -> VECI .)


state 414

    (224) ARRFOR -> RANGO .

    llavea          reduce using rule 224 (ARRFOR -> RANGO .)


state 415

    (225) ARRFOR -> ID .
    (51) EXPRESION -> ID .

    llavea          reduce using rule 225 (ARRFOR -> ID .)
    punto           reduce using rule 51 (EXPRESION -> ID .)
    mas             reduce using rule 51 (EXPRESION -> ID .)
    menos           reduce using rule 51 (EXPRESION -> ID .)
    div             reduce using rule 51 (EXPRESION -> ID .)
    multi           reduce using rule 51 (EXPRESION -> ID .)
    mod             reduce using rule 51 (EXPRESION -> ID .)
    mayor           reduce using rule 51 (EXPRESION -> ID .)
    menor           reduce using rule 51 (EXPRESION -> ID .)
    mayorigual      reduce using rule 51 (EXPRESION -> ID .)
    menorigual      reduce using rule 51 (EXPRESION -> ID .)
    igualigual      reduce using rule 51 (EXPRESION -> ID .)
    diferente       reduce using rule 51 (EXPRESION -> ID .)
    and             reduce using rule 51 (EXPRESION -> ID .)
    or              reduce using rule 51 (EXPRESION -> ID .)
    as              reduce using rule 51 (EXPRESION -> ID .)


state 416

    (226) CHARS -> EXPRESION . punto chars para parc
    (228) RANGO -> EXPRESION . punto punto EXPRESION
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    punto           shift and go to state 495
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183


state 417

    (238) DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .

    llavec          reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    pub             reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    fn              reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    modulo          reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    struct          reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    let             reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    coma            reduce using rule 238 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)


state 418

    (116) DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    pub             reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    fn              reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    modulo          reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    struct          reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    let             reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    puntoycoma      reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    coma            reduce using rule 116 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 419

    (207) DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .

    llavec          reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    pub             reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    fn              reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    modulo          reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    struct          reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    let             reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    puntoycoma      reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    coma            reduce using rule 207 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)


state 420

    (177) DECVECTOR -> let mut id dospuntos VEC igual VECI .

    llavec          reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    pub             reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    fn              reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    modulo          reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    struct          reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    let             reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    puntoycoma      reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    coma            reduce using rule 177 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)


state 421

    (179) DECVECTOR -> let mut id dospuntos VEC igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 496


state 422

    (181) DECVECTOR -> let mut id igual Vec dospuntos dospuntos . FUNCVEC
    (191) FUNCVEC -> . new para parc
    (192) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 432
    withcapacity    shift and go to state 433

    FUNCVEC                        shift and go to state 497

state 423

    (178) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 498


state 424

    (210) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 499
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 425

    (211) DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 500
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 426

    (212) DIMENSION_ARR -> cora id puntoycoma EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 501
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 427

    (242) EXSTRUCT -> id dospuntos . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 502
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 428

    (239) STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .

    llavec          reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    pub             reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    fn              reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    modulo          reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    struct          reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    let             reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    coma            reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    corc            reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    puntoycoma      reduce using rule 239 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)


state 429

    (240) CONJEXP_STRUCT -> CONJEXP_STRUCT coma . EXSTRUCT
    (242) EXSTRUCT -> . id dospuntos EXPRESION

    id              shift and go to state 333

    EXSTRUCT                       shift and go to state 503

state 430

    (203) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    mas             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavec          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    pub             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    parc            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavea          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    puntoycoma      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    corc            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igual           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    bvertical       reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    punto           shift and go to state 374

  ! punto           [ reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 431

    (180) DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 180 (DECVECTOR -> let id igual Vec dospuntos dospuntos FUNCVEC .)


state 432

    (191) FUNCVEC -> new . para parc

    para            shift and go to state 504


state 433

    (192) FUNCVEC -> withcapacity . para EXPRESION parc

    para            shift and go to state 505


state 434

    (215) CONT_ARR -> CONT_ARR coma ELARR .

    corc            reduce using rule 215 (CONT_ARR -> CONT_ARR coma ELARR .)
    coma            reduce using rule 215 (CONT_ARR -> CONT_ARR coma ELARR .)


state 435

    (218) ELARR -> EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            reduce using rule 218 (ELARR -> EXPRESION .)
    coma            reduce using rule 218 (ELARR -> EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 436

    (214) ARREGLO -> cora EXPRESION puntoycoma EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 506
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 437

    (185) VECI -> vecI cora CONJVECI corc .

    llavec          reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    pub             reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    fn              reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    modulo          reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    struct          reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    let             reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    coma            reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    parc            reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    puntoycoma      reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    corc            reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)
    llavea          reduce using rule 185 (VECI -> vecI cora CONJVECI corc .)


state 438

    (187) CONJVECI -> CONJVECI coma . ELVEC
    (189) ELVEC -> . EXPRESION
    (190) ELVEC -> . VECI
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    ELVEC                          shift and go to state 507
    EXPRESION                      shift and go to state 508
    VECI                           shift and go to state 345
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 439

    (186) VECI -> vecI cora EXPRESION puntoycoma . EXPRESION corc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 509
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 440

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else IF_TER
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 479
    IF_TER                         shift and go to state 113
    INSTRUCCION                    shift and go to state 163
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 441

    (98) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 510


state 442

    (101) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (146) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 511
    bvertical       shift and go to state 490


state 443

    (166) PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .

    parc            reduce using rule 166 (PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .)
    coma            reduce using rule 166 (PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .)


state 444

    (261) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos . id

    id              shift and go to state 512


state 445

    (103) ABS -> EXPRESION punto abs para parc .

    mas             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    menos           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    div             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    multi           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    mod             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    mayor           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    menor           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    mayorigual      reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    menorigual      reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    igualigual      reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    diferente       reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    and             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    or              reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    as              reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    punto           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    llavec          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    println         reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    let             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    id              reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    if              reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    match           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    continue        reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    return          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    break           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    while           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    i64             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    f64             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    not             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    para            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    fn              reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    for             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    struct          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    modulo          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    entero          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    decimal         reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    cadena          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    true            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    false           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    caracter        reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    loop            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    pub             reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    coma            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    parc            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    llavea          reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    puntoycoma      reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    corc            reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    igual           reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)
    bvertical       reduce using rule 103 (ABS -> EXPRESION punto abs para parc .)


state 446

    (105) CLONE -> EXPRESION punto clone para parc .

    mas             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    menos           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    div             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    multi           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    mod             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    mayor           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    menor           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    mayorigual      reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    menorigual      reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    igualigual      reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    diferente       reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    and             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    or              reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    as              reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    punto           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    llavec          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    println         reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    let             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    id              reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    if              reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    match           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    continue        reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    return          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    break           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    while           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    i64             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    f64             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    not             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    para            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    fn              reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    for             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    struct          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    modulo          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    entero          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    decimal         reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    cadena          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    true            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    false           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    caracter        reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    loop            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    pub             reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    coma            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    parc            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    llavea          reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    puntoycoma      reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    corc            reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    igual           reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)
    bvertical       reduce using rule 105 (CLONE -> EXPRESION punto clone para parc .)


state 447

    (108) SQRT -> EXPRESION punto sqrt para parc .

    mas             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    menos           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    div             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    multi           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    mod             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    mayor           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    menor           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    mayorigual      reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    menorigual      reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    igualigual      reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    diferente       reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    and             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    or              reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    as              reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    punto           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    llavec          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    println         reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    let             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    id              reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    if              reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    match           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    continue        reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    return          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    break           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    while           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    i64             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    f64             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    not             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    para            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    fn              reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    for             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    struct          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    modulo          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    entero          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    decimal         reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    cadena          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    true            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    false           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    caracter        reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    loop            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    pub             reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    coma            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    parc            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    llavea          reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    puntoycoma      reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    corc            reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    igual           reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)
    bvertical       reduce using rule 108 (SQRT -> EXPRESION punto sqrt para parc .)


state 448

    (110) TO_STRING_OWNED -> EXPRESION punto toString para parc .

    mas             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menos           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    div             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    multi           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mod             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mayor           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menor           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mayorigual      reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menorigual      reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    igualigual      reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    diferente       reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    and             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    or              reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    as              reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    punto           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    llavec          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    println         reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    let             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    id              reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    if              reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    match           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    continue        reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    return          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    break           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    while           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    i64             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    f64             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    not             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    para            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    fn              reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    for             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    struct          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    modulo          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    entero          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    decimal         reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    cadena          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    true            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    false           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    caracter        reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    loop            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    pub             reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    coma            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    parc            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    llavea          reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    puntoycoma      reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    corc            reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    igual           reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    bvertical       reduce using rule 110 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)


state 449

    (111) TO_STRING_OWNED -> EXPRESION punto toOwned para parc .

    mas             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menos           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    div             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    multi           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mod             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mayor           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menor           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mayorigual      reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menorigual      reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    igualigual      reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    diferente       reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    and             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    or              reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    as              reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    punto           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    llavec          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    println         reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    let             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    id              reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    if              reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    match           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    continue        reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    return          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    break           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    while           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    i64             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    f64             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    not             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    para            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    fn              reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    for             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    struct          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    modulo          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    entero          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    decimal         reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    cadena          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    true            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    false           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    caracter        reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    loop            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    pub             reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    coma            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    parc            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    llavea          reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    puntoycoma      reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    corc            reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    igual           reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    bvertical       reduce using rule 111 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)


state 450

    (198) LEN -> EXPRESION punto len para parc .

    mas             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    menos           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    div             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    multi           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    mod             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    mayor           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    menor           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    mayorigual      reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    menorigual      reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    igualigual      reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    diferente       reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    and             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    or              reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    as              reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    punto           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    llavec          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    println         reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    let             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    id              reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    if              reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    match           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    continue        reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    return          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    break           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    while           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    i64             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    f64             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    not             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    para            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    fn              reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    for             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    struct          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    modulo          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    entero          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    decimal         reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    cadena          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    true            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    false           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    caracter        reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    loop            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    pub             reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    coma            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    parc            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    llavea          reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    puntoycoma      reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    corc            reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    igual           reduce using rule 198 (LEN -> EXPRESION punto len para parc .)
    bvertical       reduce using rule 198 (LEN -> EXPRESION punto len para parc .)


state 451

    (115) PRINT -> println para EXPRESION coma CONJEXP . parc
    (68) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 513
    coma            shift and go to state 387


state 452

    (124) ASIGNACION -> id igual Vec dospuntos dospuntos . new para parc
    (125) ASIGNACION -> id igual Vec dospuntos dospuntos . withcapacity para EXPRESION parc

    new             shift and go to state 514
    withcapacity    shift and go to state 515


state 453

    (123) ASIGNACION -> id INDEXS punto CONJ_ACCES igual . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 516
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 454

    (107) CLONE -> id INDEXS punto clone para . parc

    parc            shift and go to state 517


state 455

    (199) LEN -> id INDEXS punto len para . parc

    parc            shift and go to state 518


state 456

    (204) INDEXS -> INDEXS cora EXPRESION corc .

    igual           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    punto           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    cora            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    mas             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    menos           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    div             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    multi           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    mod             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    mayor           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    menor           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    mayorigual      reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    menorigual      reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    igualigual      reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    diferente       reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    and             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    or              reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    as              reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    llavec          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    println         reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    let             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    id              reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    if              reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    match           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    continue        reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    return          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    break           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    while           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    i64             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    f64             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    not             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    para            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    fn              reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    for             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    struct          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    modulo          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    entero          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    decimal         reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    cadena          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    true            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    false           reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    caracter        reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    loop            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    pub             reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    coma            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    puntoycoma      reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    corc            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    parc            reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    llavea          reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)
    bvertical       reduce using rule 204 (INDEXS -> INDEXS cora EXPRESION corc .)


state 457

    (193) PUSH -> id punto push para EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 519
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 458

    (194) PUSH -> id punto push para VECI . parc

    parc            shift and go to state 520


state 459

    (195) INSERT -> id punto insert para EXPRESION . coma EXPRESION parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 521
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 460

    (244) CONJ_ACCES -> CONJ_ACCES punto id .

    igual           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    punto           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mas             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menos           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    div             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    multi           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mod             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mayor           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menor           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mayorigual      reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menorigual      reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    igualigual      reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    diferente       reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    and             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    or              reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    as              reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    llavec          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    println         reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    let             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    id              reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    if              reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    match           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    continue        reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    return          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    break           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    while           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    i64             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    f64             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    not             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    para            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    fn              reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    for             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    struct          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    modulo          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    entero          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    decimal         reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    cadena          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    true            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    false           reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    caracter        reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    loop            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    pub             reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    coma            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    parc            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    llavea          reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    puntoycoma      reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    corc            reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)
    bvertical       reduce using rule 244 (CONJ_ACCES -> CONJ_ACCES punto id .)


state 461

    (246) MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 246 (MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .)
    coma            reduce using rule 246 (MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 462

    (196) REMOVE -> id punto remove para EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 522
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 463

    (104) ABS -> id punto abs para parc .

    mas             reduce using rule 104 (ABS -> id punto abs para parc .)
    menos           reduce using rule 104 (ABS -> id punto abs para parc .)
    div             reduce using rule 104 (ABS -> id punto abs para parc .)
    multi           reduce using rule 104 (ABS -> id punto abs para parc .)
    mod             reduce using rule 104 (ABS -> id punto abs para parc .)
    mayor           reduce using rule 104 (ABS -> id punto abs para parc .)
    menor           reduce using rule 104 (ABS -> id punto abs para parc .)
    mayorigual      reduce using rule 104 (ABS -> id punto abs para parc .)
    menorigual      reduce using rule 104 (ABS -> id punto abs para parc .)
    igualigual      reduce using rule 104 (ABS -> id punto abs para parc .)
    diferente       reduce using rule 104 (ABS -> id punto abs para parc .)
    and             reduce using rule 104 (ABS -> id punto abs para parc .)
    or              reduce using rule 104 (ABS -> id punto abs para parc .)
    as              reduce using rule 104 (ABS -> id punto abs para parc .)
    punto           reduce using rule 104 (ABS -> id punto abs para parc .)
    llavec          reduce using rule 104 (ABS -> id punto abs para parc .)
    println         reduce using rule 104 (ABS -> id punto abs para parc .)
    let             reduce using rule 104 (ABS -> id punto abs para parc .)
    id              reduce using rule 104 (ABS -> id punto abs para parc .)
    if              reduce using rule 104 (ABS -> id punto abs para parc .)
    match           reduce using rule 104 (ABS -> id punto abs para parc .)
    continue        reduce using rule 104 (ABS -> id punto abs para parc .)
    return          reduce using rule 104 (ABS -> id punto abs para parc .)
    break           reduce using rule 104 (ABS -> id punto abs para parc .)
    while           reduce using rule 104 (ABS -> id punto abs para parc .)
    i64             reduce using rule 104 (ABS -> id punto abs para parc .)
    f64             reduce using rule 104 (ABS -> id punto abs para parc .)
    not             reduce using rule 104 (ABS -> id punto abs para parc .)
    para            reduce using rule 104 (ABS -> id punto abs para parc .)
    fn              reduce using rule 104 (ABS -> id punto abs para parc .)
    for             reduce using rule 104 (ABS -> id punto abs para parc .)
    struct          reduce using rule 104 (ABS -> id punto abs para parc .)
    modulo          reduce using rule 104 (ABS -> id punto abs para parc .)
    entero          reduce using rule 104 (ABS -> id punto abs para parc .)
    decimal         reduce using rule 104 (ABS -> id punto abs para parc .)
    cadena          reduce using rule 104 (ABS -> id punto abs para parc .)
    true            reduce using rule 104 (ABS -> id punto abs para parc .)
    false           reduce using rule 104 (ABS -> id punto abs para parc .)
    caracter        reduce using rule 104 (ABS -> id punto abs para parc .)
    loop            reduce using rule 104 (ABS -> id punto abs para parc .)
    pub             reduce using rule 104 (ABS -> id punto abs para parc .)
    coma            reduce using rule 104 (ABS -> id punto abs para parc .)
    parc            reduce using rule 104 (ABS -> id punto abs para parc .)
    llavea          reduce using rule 104 (ABS -> id punto abs para parc .)
    puntoycoma      reduce using rule 104 (ABS -> id punto abs para parc .)
    corc            reduce using rule 104 (ABS -> id punto abs para parc .)
    igual           reduce using rule 104 (ABS -> id punto abs para parc .)
    bvertical       reduce using rule 104 (ABS -> id punto abs para parc .)


state 464

    (106) CLONE -> id punto clone para parc .

    mas             reduce using rule 106 (CLONE -> id punto clone para parc .)
    menos           reduce using rule 106 (CLONE -> id punto clone para parc .)
    div             reduce using rule 106 (CLONE -> id punto clone para parc .)
    multi           reduce using rule 106 (CLONE -> id punto clone para parc .)
    mod             reduce using rule 106 (CLONE -> id punto clone para parc .)
    mayor           reduce using rule 106 (CLONE -> id punto clone para parc .)
    menor           reduce using rule 106 (CLONE -> id punto clone para parc .)
    mayorigual      reduce using rule 106 (CLONE -> id punto clone para parc .)
    menorigual      reduce using rule 106 (CLONE -> id punto clone para parc .)
    igualigual      reduce using rule 106 (CLONE -> id punto clone para parc .)
    diferente       reduce using rule 106 (CLONE -> id punto clone para parc .)
    and             reduce using rule 106 (CLONE -> id punto clone para parc .)
    or              reduce using rule 106 (CLONE -> id punto clone para parc .)
    as              reduce using rule 106 (CLONE -> id punto clone para parc .)
    punto           reduce using rule 106 (CLONE -> id punto clone para parc .)
    llavec          reduce using rule 106 (CLONE -> id punto clone para parc .)
    println         reduce using rule 106 (CLONE -> id punto clone para parc .)
    let             reduce using rule 106 (CLONE -> id punto clone para parc .)
    id              reduce using rule 106 (CLONE -> id punto clone para parc .)
    if              reduce using rule 106 (CLONE -> id punto clone para parc .)
    match           reduce using rule 106 (CLONE -> id punto clone para parc .)
    continue        reduce using rule 106 (CLONE -> id punto clone para parc .)
    return          reduce using rule 106 (CLONE -> id punto clone para parc .)
    break           reduce using rule 106 (CLONE -> id punto clone para parc .)
    while           reduce using rule 106 (CLONE -> id punto clone para parc .)
    i64             reduce using rule 106 (CLONE -> id punto clone para parc .)
    f64             reduce using rule 106 (CLONE -> id punto clone para parc .)
    not             reduce using rule 106 (CLONE -> id punto clone para parc .)
    para            reduce using rule 106 (CLONE -> id punto clone para parc .)
    fn              reduce using rule 106 (CLONE -> id punto clone para parc .)
    for             reduce using rule 106 (CLONE -> id punto clone para parc .)
    struct          reduce using rule 106 (CLONE -> id punto clone para parc .)
    modulo          reduce using rule 106 (CLONE -> id punto clone para parc .)
    entero          reduce using rule 106 (CLONE -> id punto clone para parc .)
    decimal         reduce using rule 106 (CLONE -> id punto clone para parc .)
    cadena          reduce using rule 106 (CLONE -> id punto clone para parc .)
    true            reduce using rule 106 (CLONE -> id punto clone para parc .)
    false           reduce using rule 106 (CLONE -> id punto clone para parc .)
    caracter        reduce using rule 106 (CLONE -> id punto clone para parc .)
    loop            reduce using rule 106 (CLONE -> id punto clone para parc .)
    pub             reduce using rule 106 (CLONE -> id punto clone para parc .)
    coma            reduce using rule 106 (CLONE -> id punto clone para parc .)
    parc            reduce using rule 106 (CLONE -> id punto clone para parc .)
    llavea          reduce using rule 106 (CLONE -> id punto clone para parc .)
    puntoycoma      reduce using rule 106 (CLONE -> id punto clone para parc .)
    corc            reduce using rule 106 (CLONE -> id punto clone para parc .)
    igual           reduce using rule 106 (CLONE -> id punto clone para parc .)
    bvertical       reduce using rule 106 (CLONE -> id punto clone para parc .)


state 465

    (109) SQRT -> id punto sqrt para parc .

    mas             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    menos           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    div             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    multi           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    mod             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    mayor           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    menor           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    mayorigual      reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    menorigual      reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    igualigual      reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    diferente       reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    and             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    or              reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    as              reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    punto           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    llavec          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    println         reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    let             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    id              reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    if              reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    match           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    continue        reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    return          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    break           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    while           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    i64             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    f64             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    not             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    para            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    fn              reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    for             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    struct          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    modulo          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    entero          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    decimal         reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    cadena          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    true            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    false           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    caracter        reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    loop            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    pub             reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    coma            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    parc            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    llavea          reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    puntoycoma      reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    corc            reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    igual           reduce using rule 109 (SQRT -> id punto sqrt para parc .)
    bvertical       reduce using rule 109 (SQRT -> id punto sqrt para parc .)


state 466

    (112) TO_STRING_OWNED -> id punto toString para parc .

    mas             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    menos           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    div             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    multi           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    mod             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    mayor           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    menor           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    mayorigual      reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    menorigual      reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    igualigual      reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    diferente       reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    and             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    or              reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    as              reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    punto           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    llavec          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    println         reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    let             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    id              reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    if              reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    match           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    continue        reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    return          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    break           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    while           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    i64             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    f64             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    not             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    para            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    fn              reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    for             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    struct          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    modulo          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    entero          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    decimal         reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    cadena          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    true            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    false           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    caracter        reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    loop            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    pub             reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    coma            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    parc            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    llavea          reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    puntoycoma      reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    corc            reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    igual           reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)
    bvertical       reduce using rule 112 (TO_STRING_OWNED -> id punto toString para parc .)


state 467

    (113) TO_STRING_OWNED -> id punto toOwned para parc .

    mas             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menos           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    div             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    multi           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mod             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mayor           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menor           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mayorigual      reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menorigual      reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    igualigual      reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    diferente       reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    and             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    or              reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    as              reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    punto           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    llavec          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    println         reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    let             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    id              reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    if              reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    match           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    continue        reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    return          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    break           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    while           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    i64             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    f64             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    not             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    para            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    fn              reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    for             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    struct          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    modulo          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    entero          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    decimal         reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    cadena          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    true            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    false           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    caracter        reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    loop            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    pub             reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    coma            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    parc            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    llavea          reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    puntoycoma      reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    corc            reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    igual           reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)
    bvertical       reduce using rule 113 (TO_STRING_OWNED -> id punto toOwned para parc .)


state 468

    (197) CONTAINS -> id punto contains para ampersand . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 523
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 469

    (200) LEN -> id punto len para parc .

    mas             reduce using rule 200 (LEN -> id punto len para parc .)
    menos           reduce using rule 200 (LEN -> id punto len para parc .)
    div             reduce using rule 200 (LEN -> id punto len para parc .)
    multi           reduce using rule 200 (LEN -> id punto len para parc .)
    mod             reduce using rule 200 (LEN -> id punto len para parc .)
    mayor           reduce using rule 200 (LEN -> id punto len para parc .)
    menor           reduce using rule 200 (LEN -> id punto len para parc .)
    mayorigual      reduce using rule 200 (LEN -> id punto len para parc .)
    menorigual      reduce using rule 200 (LEN -> id punto len para parc .)
    igualigual      reduce using rule 200 (LEN -> id punto len para parc .)
    diferente       reduce using rule 200 (LEN -> id punto len para parc .)
    and             reduce using rule 200 (LEN -> id punto len para parc .)
    or              reduce using rule 200 (LEN -> id punto len para parc .)
    as              reduce using rule 200 (LEN -> id punto len para parc .)
    punto           reduce using rule 200 (LEN -> id punto len para parc .)
    llavec          reduce using rule 200 (LEN -> id punto len para parc .)
    println         reduce using rule 200 (LEN -> id punto len para parc .)
    let             reduce using rule 200 (LEN -> id punto len para parc .)
    id              reduce using rule 200 (LEN -> id punto len para parc .)
    if              reduce using rule 200 (LEN -> id punto len para parc .)
    match           reduce using rule 200 (LEN -> id punto len para parc .)
    continue        reduce using rule 200 (LEN -> id punto len para parc .)
    return          reduce using rule 200 (LEN -> id punto len para parc .)
    break           reduce using rule 200 (LEN -> id punto len para parc .)
    while           reduce using rule 200 (LEN -> id punto len para parc .)
    i64             reduce using rule 200 (LEN -> id punto len para parc .)
    f64             reduce using rule 200 (LEN -> id punto len para parc .)
    not             reduce using rule 200 (LEN -> id punto len para parc .)
    para            reduce using rule 200 (LEN -> id punto len para parc .)
    fn              reduce using rule 200 (LEN -> id punto len para parc .)
    for             reduce using rule 200 (LEN -> id punto len para parc .)
    struct          reduce using rule 200 (LEN -> id punto len para parc .)
    modulo          reduce using rule 200 (LEN -> id punto len para parc .)
    entero          reduce using rule 200 (LEN -> id punto len para parc .)
    decimal         reduce using rule 200 (LEN -> id punto len para parc .)
    cadena          reduce using rule 200 (LEN -> id punto len para parc .)
    true            reduce using rule 200 (LEN -> id punto len para parc .)
    false           reduce using rule 200 (LEN -> id punto len para parc .)
    caracter        reduce using rule 200 (LEN -> id punto len para parc .)
    loop            reduce using rule 200 (LEN -> id punto len para parc .)
    pub             reduce using rule 200 (LEN -> id punto len para parc .)
    coma            reduce using rule 200 (LEN -> id punto len para parc .)
    parc            reduce using rule 200 (LEN -> id punto len para parc .)
    llavea          reduce using rule 200 (LEN -> id punto len para parc .)
    puntoycoma      reduce using rule 200 (LEN -> id punto len para parc .)
    corc            reduce using rule 200 (LEN -> id punto len para parc .)
    igual           reduce using rule 200 (LEN -> id punto len para parc .)
    bvertical       reduce using rule 200 (LEN -> id punto len para parc .)


state 470

    (201) CAPACITY -> id punto capacity para parc .

    mas             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    menos           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    div             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    multi           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    mod             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    mayor           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    menor           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    mayorigual      reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    menorigual      reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    igualigual      reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    diferente       reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    and             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    or              reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    as              reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    punto           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    llavec          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    println         reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    let             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    id              reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    if              reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    match           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    continue        reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    return          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    break           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    while           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    i64             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    f64             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    not             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    para            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    fn              reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    for             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    struct          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    modulo          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    entero          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    decimal         reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    cadena          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    true            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    false           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    caracter        reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    loop            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    pub             reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    coma            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    parc            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    llavea          reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    puntoycoma      reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    corc            reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    igual           reduce using rule 201 (CAPACITY -> id punto capacity para parc .)
    bvertical       reduce using rule 201 (CAPACITY -> id punto capacity para parc .)


state 471

    (259) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para . CONJEXP parc
    (260) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para . parc
    (68) CONJEXP -> . CONJEXP coma ELCONJ
    (69) CONJEXP -> . ELCONJ
    (70) ELCONJ -> . ampersand ELCONJ
    (71) ELCONJ -> . EXPRESION
    (72) ELCONJ -> . VECI
    (73) ELCONJ -> . ARREGLO
    (74) ELCONJ -> . ampersand mut EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (185) VECI -> . vecI cora CONJVECI corc
    (186) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (213) ARREGLO -> . cora CONT_ARR corc
    (214) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    parc            shift and go to state 525
    ampersand       shift and go to state 306
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    vecI            shift and go to state 155
    cora            shift and go to state 154
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    CONJEXP                        shift and go to state 524
    ELCONJ                         shift and go to state 305
    EXPRESION                      shift and go to state 307
    VECI                           shift and go to state 308
    ARREGLO                        shift and go to state 309
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 472

    (68) CONJEXP -> CONJEXP coma ELCONJ .

    parc            reduce using rule 68 (CONJEXP -> CONJEXP coma ELCONJ .)
    coma            reduce using rule 68 (CONJEXP -> CONJEXP coma ELCONJ .)


state 473

    (74) ELCONJ -> ampersand mut EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            reduce using rule 74 (ELCONJ -> ampersand mut EXPRESION .)
    coma            reduce using rule 74 (ELCONJ -> ampersand mut EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 474

    (126) IF -> if . EXPRESION BLOQUE_INST
    (127) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> if . EXPRESION BLOQUE_INST else IF
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 526
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 475

    (127) IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .

    llavec          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    println         reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    let             reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    id              reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    if              reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    match           reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    continue        reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    return          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    break           reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    while           reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    i64             reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    f64             reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    menos           reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    not             reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    para            reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    fn              reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    for             reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    struct          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    modulo          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    entero          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    decimal         reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    cadena          reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    true            reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    false           reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    caracter        reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    loop            reduce using rule 127 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)


state 476

    (128) IF -> if EXPRESION BLOQUE_INST else IF .

    llavec          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    println         reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    let             reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    id              reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    if              reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    match           reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    continue        reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    return          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    break           reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    while           reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    i64             reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    f64             reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    menos           reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    not             reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    para            reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    fn              reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    for             reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    struct          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    modulo          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    entero          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    decimal         reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    cadena          reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    true            reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    false           reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    caracter        reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)
    loop            reduce using rule 128 (IF -> if EXPRESION BLOQUE_INST else IF .)


state 477

    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (126) IF -> if EXPRESION . BLOQUE_INST
    (127) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (128) IF -> if EXPRESION . BLOQUE_INST else IF
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 312
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184

    BLOQUE_INST                    shift and go to state 311

state 478

    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec .
    (92) IF_TER -> if EXPRESION llavea EXPRESION llavec . else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec . else llavea INSTRUCCIONES EXPRESION llavec
    (96) IF_TER -> if EXPRESION llavea EXPRESION llavec . else IF_TER

    mas             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menos           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    div             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    multi           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mod             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mayor           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menor           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mayorigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menorigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    igualigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    diferente       reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    and             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    or              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    as              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    punto           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    llavec          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    println         reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    let             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    id              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    if              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    match           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    continue        reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    return          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    break           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    while           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    i64             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    f64             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    not             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    para            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    fn              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    for             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    struct          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    modulo          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    entero          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    decimal         reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    cadena          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    true            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    false           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    caracter        reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    loop            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    pub             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    coma            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    parc            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    llavea          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    corc            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    igual           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    bvertical       reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    else            shift and go to state 527


state 479

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec
    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else IF_TER
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for llavec resolved as shift
  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 528
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184

  ! llavec          [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]
  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 480

    (104) ABS -> id punto . abs para parc
    (106) CLONE -> id punto . clone para parc
    (109) SQRT -> id punto . sqrt para parc
    (112) TO_STRING_OWNED -> id punto . toString para parc
    (113) TO_STRING_OWNED -> id punto . toOwned para parc
    (196) REMOVE -> id punto . remove para EXPRESION parc
    (197) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (200) LEN -> id punto . len para parc
    (201) CAPACITY -> id punto . capacity para parc
    (243) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (193) PUSH -> id punto . push para EXPRESION parc
    (194) PUSH -> id punto . push para VECI parc
    (195) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    abs             shift and go to state 294
    clone           shift and go to state 295
    sqrt            shift and go to state 296
    toString        shift and go to state 297
    toOwned         shift and go to state 298
    remove          shift and go to state 293
    contains        shift and go to state 299
    len             shift and go to state 300
    capacity        shift and go to state 301
    push            shift and go to state 290
    insert          shift and go to state 291
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 529

state 481

    (107) CLONE -> id INDEXS . punto clone para parc
    (199) LEN -> id INDEXS . punto len para parc
    (202) ACCESVEC -> id INDEXS .
    (203) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (122) ASIGNACION -> id INDEXS . igual EXPRESION
    (123) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (204) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 530
    llavec          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mas             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 202 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 202 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 202 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 202 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 202 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 202 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 202 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 202 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 202 (ACCESVEC -> id INDEXS .)
    igual           shift and go to state 286
    cora            shift and go to state 288

  ! punto           [ reduce using rule 202 (ACCESVEC -> id INDEXS .) ]


state 482

    (97) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (129) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match EXPRESION . llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match EXPRESION . llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 531
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 483

    (129) MATCH -> match EXPRESION llavea BRAZOS guionbajo . igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo . igual mayor INSTRUCCION_1LINE coma llavec

    igual           shift and go to state 532


state 484

    (142) BRAZOS -> BRAZOS BRAZO .

    guionbajo       reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    i64             reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    f64             reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    menos           reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    not             reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    para            reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    entero          reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    decimal         reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    cadena          reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    true            reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    false           reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    caracter        reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    id              reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    if              reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    match           reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)
    loop            reduce using rule 142 (BRAZOS -> BRAZOS BRAZO .)


state 485

    (144) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (146) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 533
    bvertical       shift and go to state 490


state 486

    (130) MATCH -> match EXPRESION llavea guionbajo igual . mayor BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo igual . mayor INSTRUCCION_1LINE coma llavec
    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 534


state 487

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 535


state 488

    (99) BRAZOS_TER -> BRAZOS_TER BRAZO_TER .

    guionbajo       reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    i64             reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    f64             reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    menos           reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    not             reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    para            reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    entero          reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    decimal         reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    cadena          reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    true            reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    false           reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    caracter        reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    id              reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    if              reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    match           reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    loop            reduce using rule 99 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)


state 489

    (144) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma
    (101) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma

    mayor           shift and go to state 536


state 490

    (146) CONJEXPM -> CONJEXPM bvertical . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 537
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 491

    (37) EXPRESION -> i64 dospuntos dospuntos pow para . EXPRESION coma EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 538
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 492

    (38) EXPRESION -> f64 dospuntos dospuntos powf para . EXPRESION coma EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 539
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 493

    (227) CHARS -> id punto . chars para parc
    (104) ABS -> id punto . abs para parc
    (106) CLONE -> id punto . clone para parc
    (109) SQRT -> id punto . sqrt para parc
    (112) TO_STRING_OWNED -> id punto . toString para parc
    (113) TO_STRING_OWNED -> id punto . toOwned para parc
    (196) REMOVE -> id punto . remove para EXPRESION parc
    (197) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (200) LEN -> id punto . len para parc
    (201) CAPACITY -> id punto . capacity para parc
    (243) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    chars           shift and go to state 540
    abs             shift and go to state 294
    clone           shift and go to state 295
    sqrt            shift and go to state 296
    toString        shift and go to state 297
    toOwned         shift and go to state 298
    remove          shift and go to state 293
    contains        shift and go to state 299
    len             shift and go to state 300
    capacity        shift and go to state 301
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 336

state 494

    (220) FORIN -> for id in ARRFOR BLOQUE_INST .

    llavec          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    println         reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    let             reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    id              reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    if              reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    match           reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    continue        reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    return          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    break           reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    while           reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    i64             reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    f64             reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    menos           reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    not             reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    para            reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    fn              reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    for             reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    struct          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    modulo          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    entero          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    decimal         reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    cadena          reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    true            reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    false           reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    caracter        reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    loop            reduce using rule 220 (FORIN -> for id in ARRFOR BLOQUE_INST .)


state 495

    (226) CHARS -> EXPRESION punto . chars para parc
    (228) RANGO -> EXPRESION punto . punto EXPRESION
    (103) ABS -> EXPRESION punto . abs para parc
    (105) CLONE -> EXPRESION punto . clone para parc
    (108) SQRT -> EXPRESION punto . sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION punto . toString para parc
    (111) TO_STRING_OWNED -> EXPRESION punto . toOwned para parc
    (198) LEN -> EXPRESION punto . len para parc

    chars           shift and go to state 542
    punto           shift and go to state 541
    abs             shift and go to state 273
    clone           shift and go to state 274
    sqrt            shift and go to state 275
    toString        shift and go to state 276
    toOwned         shift and go to state 277
    len             shift and go to state 278


state 496

    (179) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 543


state 497

    (181) DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 181 (DECVECTOR -> let mut id igual Vec dospuntos dospuntos FUNCVEC .)


state 498

    (178) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos . FUNCVEC
    (191) FUNCVEC -> . new para parc
    (192) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 432
    withcapacity    shift and go to state 433

    FUNCVEC                        shift and go to state 544

state 499

    (210) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .

    igual           reduce using rule 210 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 210 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    parc            reduce using rule 210 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    coma            reduce using rule 210 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)


state 500

    (211) DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .

    igual           reduce using rule 211 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 211 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    parc            reduce using rule 211 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    coma            reduce using rule 211 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)


state 501

    (212) DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .

    igual           reduce using rule 212 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 212 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    parc            reduce using rule 212 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    coma            reduce using rule 212 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)


state 502

    (242) EXSTRUCT -> id dospuntos EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 242 (EXSTRUCT -> id dospuntos EXPRESION .)
    coma            reduce using rule 242 (EXSTRUCT -> id dospuntos EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 503

    (240) CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .

    llavec          reduce using rule 240 (CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .)
    coma            reduce using rule 240 (CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .)


state 504

    (191) FUNCVEC -> new para . parc

    parc            shift and go to state 545


state 505

    (192) FUNCVEC -> withcapacity para . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 546
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 506

    (214) ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .

    llavec          reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    pub             reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    fn              reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    modulo          reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    struct          reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    let             reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    coma            reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    corc            reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    parc            reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    llavea          reduce using rule 214 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)


state 507

    (187) CONJVECI -> CONJVECI coma ELVEC .

    corc            reduce using rule 187 (CONJVECI -> CONJVECI coma ELVEC .)
    coma            reduce using rule 187 (CONJVECI -> CONJVECI coma ELVEC .)


state 508

    (189) ELVEC -> EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            reduce using rule 189 (ELVEC -> EXPRESION .)
    coma            reduce using rule 189 (ELVEC -> EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 509

    (186) VECI -> vecI cora EXPRESION puntoycoma EXPRESION . corc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 547
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 510

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 548


state 511

    (101) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma

    mayor           shift and go to state 549


state 512

    (261) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .

    mayor           reduce using rule 261 (CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .)
    dospuntos       reduce using rule 261 (CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .)
    para            reduce using rule 261 (CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .)


state 513

    (115) PRINT -> println para EXPRESION coma CONJEXP parc .

    puntoycoma      reduce using rule 115 (PRINT -> println para EXPRESION coma CONJEXP parc .)
    coma            reduce using rule 115 (PRINT -> println para EXPRESION coma CONJEXP parc .)


state 514

    (124) ASIGNACION -> id igual Vec dospuntos dospuntos new . para parc

    para            shift and go to state 550


state 515

    (125) ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity . para EXPRESION parc

    para            shift and go to state 551


state 516

    (123) ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 123 (ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .)
    coma            reduce using rule 123 (ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 517

    (107) CLONE -> id INDEXS punto clone para parc .

    mas             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    menos           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    div             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    multi           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    mod             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    mayor           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    menor           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    mayorigual      reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    menorigual      reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    igualigual      reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    diferente       reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    and             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    or              reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    as              reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    punto           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    llavec          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    println         reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    let             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    id              reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    if              reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    match           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    continue        reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    return          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    break           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    while           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    i64             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    f64             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    not             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    para            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    fn              reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    for             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    struct          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    modulo          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    entero          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    decimal         reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    cadena          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    true            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    false           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    caracter        reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    loop            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    pub             reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    coma            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    parc            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    llavea          reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    puntoycoma      reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    corc            reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    igual           reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)
    bvertical       reduce using rule 107 (CLONE -> id INDEXS punto clone para parc .)


state 518

    (199) LEN -> id INDEXS punto len para parc .

    mas             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    menos           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    div             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    multi           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    mod             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    mayor           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    menor           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    mayorigual      reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    menorigual      reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    igualigual      reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    diferente       reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    and             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    or              reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    as              reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    punto           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    llavec          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    println         reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    let             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    id              reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    if              reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    match           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    continue        reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    return          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    break           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    while           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    i64             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    f64             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    not             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    para            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    fn              reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    for             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    struct          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    modulo          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    entero          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    decimal         reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    cadena          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    true            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    false           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    caracter        reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    loop            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    pub             reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    coma            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    parc            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    llavea          reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    puntoycoma      reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    corc            reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    igual           reduce using rule 199 (LEN -> id INDEXS punto len para parc .)
    bvertical       reduce using rule 199 (LEN -> id INDEXS punto len para parc .)


state 519

    (193) PUSH -> id punto push para EXPRESION parc .

    puntoycoma      reduce using rule 193 (PUSH -> id punto push para EXPRESION parc .)
    coma            reduce using rule 193 (PUSH -> id punto push para EXPRESION parc .)


state 520

    (194) PUSH -> id punto push para VECI parc .

    puntoycoma      reduce using rule 194 (PUSH -> id punto push para VECI parc .)
    coma            reduce using rule 194 (PUSH -> id punto push para VECI parc .)


state 521

    (195) INSERT -> id punto insert para EXPRESION coma . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 552
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 522

    (196) REMOVE -> id punto remove para EXPRESION parc .

    puntoycoma      reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    mas             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    menos           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    div             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    multi           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    mod             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    mayor           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    menor           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    mayorigual      reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    menorigual      reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    igualigual      reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    diferente       reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    and             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    or              reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    as              reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    punto           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    llavec          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    println         reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    let             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    id              reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    if              reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    match           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    continue        reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    return          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    break           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    while           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    i64             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    f64             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    not             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    para            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    fn              reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    for             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    struct          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    modulo          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    entero          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    decimal         reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    cadena          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    true            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    false           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    caracter        reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    loop            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    pub             reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    coma            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    parc            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    llavea          reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    corc            reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    igual           reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)
    bvertical       reduce using rule 196 (REMOVE -> id punto remove para EXPRESION parc .)


state 523

    (197) CONTAINS -> id punto contains para ampersand EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 553
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 524

    (259) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP . parc
    (68) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 554
    coma            shift and go to state 387


state 525

    (260) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .

    puntoycoma      reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mas             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menos           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    div             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    multi           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mod             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mayor           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menor           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mayorigual      reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menorigual      reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    igualigual      reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    diferente       reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    and             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    or              reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    as              reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    punto           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    llavec          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    println         reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    let             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    id              reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    if              reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    match           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    continue        reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    return          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    break           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    while           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    i64             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    f64             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    not             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    para            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    fn              reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    for             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    struct          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    modulo          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    entero          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    decimal         reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    cadena          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    true            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    false           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    caracter        reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    loop            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    pub             reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    coma            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    parc            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    llavea          reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    corc            reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    igual           reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    bvertical       reduce using rule 260 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)


state 526

    (126) IF -> if EXPRESION . BLOQUE_INST
    (127) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (128) IF -> if EXPRESION . BLOQUE_INST else IF
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184
    llavea          shift and go to state 48

    BLOQUE_INST                    shift and go to state 311

state 527

    (92) IF_TER -> if EXPRESION llavea EXPRESION llavec else . llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec else . llavea INSTRUCCIONES EXPRESION llavec
    (96) IF_TER -> if EXPRESION llavea EXPRESION llavec else . IF_TER
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER

    llavea          shift and go to state 555
    if              shift and go to state 156

    IF_TER                         shift and go to state 556

state 528

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .
    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else IF_TER

    mas             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    else            shift and go to state 557


state 529

    (243) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (246) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    llavec          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mas             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igual           shift and go to state 375
    punto           shift and go to state 374

  ! punto           [ reduce using rule 243 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 530

    (107) CLONE -> id INDEXS punto . clone para parc
    (199) LEN -> id INDEXS punto . len para parc
    (203) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (123) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    clone           shift and go to state 369
    len             shift and go to state 370
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 558

state 531

    (97) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (129) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> match EXPRESION llavea . guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> match EXPRESION llavea . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (99) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (100) BRAZOS_TER -> . BRAZO_TER
    (142) BRAZOS -> . BRAZOS BRAZO
    (143) BRAZOS -> . BRAZO
    (101) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (144) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (145) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (146) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (147) CONJEXPM -> . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 559
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 400
    BRAZOS_TER                     shift and go to state 403
    BRAZOS                         shift and go to state 401
    BRAZO_TER                      shift and go to state 405
    BRAZO                          shift and go to state 404
    CONJEXPM                       shift and go to state 560
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 532

    (129) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual . mayor BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual . mayor INSTRUCCION_1LINE coma llavec

    mayor           shift and go to state 561


state 533

    (144) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma

    mayor           shift and go to state 562


state 534

    (130) MATCH -> match EXPRESION llavea guionbajo igual mayor . BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    llavea          shift and go to state 48
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    println         shift and go to state 97
    let             shift and go to state 28
    id              shift and go to state 575
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 563
    BLOQUE_INST                    shift and go to state 564
    INSTRUCCION_1LINE              shift and go to state 565
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 535

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 576


state 536

    (144) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (101) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    llavea          shift and go to state 48
    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    println         shift and go to state 97
    let             shift and go to state 28
    id              shift and go to state 575
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    BLOQUE_INST                    shift and go to state 577
    INSTRUCCION_1LINE              shift and go to state 578
    EXPRESION                      shift and go to state 579
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 537

    (146) CONJEXPM -> CONJEXPM bvertical EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    igual           reduce using rule 146 (CONJEXPM -> CONJEXPM bvertical EXPRESION .)
    bvertical       reduce using rule 146 (CONJEXPM -> CONJEXPM bvertical EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 538

    (37) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION . coma EXPRESION parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 580
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 539

    (38) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION . coma EXPRESION parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 581
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 540

    (227) CHARS -> id punto chars . para parc

    para            shift and go to state 582


state 541

    (228) RANGO -> EXPRESION punto punto . EXPRESION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 583
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 542

    (226) CHARS -> EXPRESION punto chars . para parc

    para            shift and go to state 584


state 543

    (179) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos . FUNCVEC
    (191) FUNCVEC -> . new para parc
    (192) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 432
    withcapacity    shift and go to state 433

    FUNCVEC                        shift and go to state 585

state 544

    (178) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 178 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)


state 545

    (191) FUNCVEC -> new para parc .

    llavec          reduce using rule 191 (FUNCVEC -> new para parc .)
    pub             reduce using rule 191 (FUNCVEC -> new para parc .)
    fn              reduce using rule 191 (FUNCVEC -> new para parc .)
    modulo          reduce using rule 191 (FUNCVEC -> new para parc .)
    struct          reduce using rule 191 (FUNCVEC -> new para parc .)
    let             reduce using rule 191 (FUNCVEC -> new para parc .)
    puntoycoma      reduce using rule 191 (FUNCVEC -> new para parc .)
    coma            reduce using rule 191 (FUNCVEC -> new para parc .)


state 546

    (192) FUNCVEC -> withcapacity para EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 586
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 547

    (186) VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .

    llavec          reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    pub             reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    fn              reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    modulo          reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    struct          reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    let             reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    coma            reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    parc            reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    corc            reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    llavea          reduce using rule 186 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)


state 548

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 563
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 549

    (101) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 579
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 550

    (124) ASIGNACION -> id igual Vec dospuntos dospuntos new para . parc

    parc            shift and go to state 587


state 551

    (125) ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 588
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 552

    (195) INSERT -> id punto insert para EXPRESION coma EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 589
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 553

    (197) CONTAINS -> id punto contains para ampersand EXPRESION parc .

    mas             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menos           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    div             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    multi           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mod             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mayor           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menor           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mayorigual      reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menorigual      reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    igualigual      reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    diferente       reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    and             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    or              reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    as              reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    punto           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    llavec          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    println         reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    let             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    id              reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    if              reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    match           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    continue        reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    return          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    break           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    while           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    i64             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    f64             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    not             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    para            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    fn              reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    for             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    struct          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    modulo          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    entero          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    decimal         reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    cadena          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    true            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    false           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    caracter        reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    loop            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    pub             reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    coma            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    parc            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    llavea          reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    puntoycoma      reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    corc            reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    igual           reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    bvertical       reduce using rule 197 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)


state 554

    (259) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .

    puntoycoma      reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mas             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menos           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    div             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    multi           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mod             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mayor           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menor           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mayorigual      reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menorigual      reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    igualigual      reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    diferente       reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    and             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    or              reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    as              reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    punto           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    llavec          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    println         reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    let             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    id              reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    if              reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    match           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    continue        reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    return          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    break           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    while           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    i64             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    f64             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    not             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    para            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    fn              reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    for             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    struct          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    modulo          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    entero          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    decimal         reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    cadena          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    true            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    false           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    caracter        reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    loop            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    pub             reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    coma            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    parc            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    llavea          reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    corc            reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    igual           reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    bvertical       reduce using rule 259 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)


state 555

    (92) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea . EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea . INSTRUCCIONES EXPRESION llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 590
    INSTRUCCIONES                  shift and go to state 591
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    INSTRUCCION                    shift and go to state 73
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 556

    (96) IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .

    mas             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menos           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    div             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    multi           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mod             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mayor           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menor           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mayorigual      reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menorigual      reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    igualigual      reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    diferente       reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    and             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    or              reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    as              reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    punto           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    llavec          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    println         reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    let             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    id              reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    if              reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    match           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    continue        reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    return          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    break           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    while           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    i64             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    f64             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    not             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    para            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    fn              reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    for             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    struct          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    modulo          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    entero          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    decimal         reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    cadena          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    true            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    false           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    caracter        reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    loop            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    pub             reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    coma            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    parc            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    llavea          reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    puntoycoma      reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    corc            reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    igual           reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    bvertical       reduce using rule 96 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)


state 557

    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . llavea EXPRESION llavec
    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . IF_TER
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER

    llavea          shift and go to state 592
    if              shift and go to state 156

    IF_TER                         shift and go to state 593

state 558

    (203) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (123) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    llavec          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mas             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igual           shift and go to state 453
    punto           shift and go to state 374

  ! punto           [ reduce using rule 203 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 559

    (98) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec
    (130) MATCH -> match EXPRESION llavea guionbajo . igual mayor BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo . igual mayor INSTRUCCION_1LINE coma llavec

    igual           shift and go to state 594


state 560

    (101) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (144) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (146) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 595
    bvertical       shift and go to state 490


state 561

    (129) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor . BLOQUE_INST llavec
    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    llavea          shift and go to state 48
    println         shift and go to state 97
    let             shift and go to state 28
    id              shift and go to state 598

    BLOQUE_INST                    shift and go to state 596
    INSTRUCCION_1LINE              shift and go to state 597
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574

state 562

    (144) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    llavea          shift and go to state 48
    println         shift and go to state 97
    let             shift and go to state 28
    id              shift and go to state 598

    BLOQUE_INST                    shift and go to state 577
    INSTRUCCION_1LINE              shift and go to state 578
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574

state 563

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION . coma llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 599
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 564

    (130) MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST . llavec

    llavec          shift and go to state 600


state 565

    (132) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE . coma llavec

    coma            shift and go to state 601


state 566

    (133) INSTRUCCION_1LINE -> PRINT .

    coma            reduce using rule 133 (INSTRUCCION_1LINE -> PRINT .)


state 567

    (134) INSTRUCCION_1LINE -> DECLARACION .

    coma            reduce using rule 134 (INSTRUCCION_1LINE -> DECLARACION .)


state 568

    (135) INSTRUCCION_1LINE -> ASIGNACION .

    coma            reduce using rule 135 (INSTRUCCION_1LINE -> ASIGNACION .)


state 569

    (136) INSTRUCCION_1LINE -> PUSH .

    coma            reduce using rule 136 (INSTRUCCION_1LINE -> PUSH .)


state 570

    (137) INSTRUCCION_1LINE -> INSERT .

    coma            reduce using rule 137 (INSTRUCCION_1LINE -> INSERT .)


state 571

    (138) INSTRUCCION_1LINE -> DECARREGLO .

    coma            reduce using rule 138 (INSTRUCCION_1LINE -> DECARREGLO .)


state 572

    (139) INSTRUCCION_1LINE -> DECVECTOR .

    coma            reduce using rule 139 (INSTRUCCION_1LINE -> DECVECTOR .)


state 573

    (140) INSTRUCCION_1LINE -> DECSTRUCT .

    coma            reduce using rule 140 (INSTRUCCION_1LINE -> DECSTRUCT .)


state 574

    (141) INSTRUCCION_1LINE -> MOD_VAR_STRUCT .

    coma            reduce using rule 141 (INSTRUCCION_1LINE -> MOD_VAR_STRUCT .)


state 575

    (121) ASIGNACION -> id . igual EXPRESION
    (122) ASIGNACION -> id . INDEXS igual EXPRESION
    (123) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> id . igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> id . igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> id . punto push para EXPRESION parc
    (194) PUSH -> id . punto push para VECI parc
    (195) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (80) ID -> id .
    (104) ABS -> id . punto abs para parc
    (106) CLONE -> id . punto clone para parc
    (107) CLONE -> id . INDEXS punto clone para parc
    (109) SQRT -> id . punto sqrt para parc
    (112) TO_STRING_OWNED -> id . punto toString para parc
    (113) TO_STRING_OWNED -> id . punto toOwned para parc
    (172) CALL -> id . para CONJEXP parc
    (173) CALL -> id . para parc
    (196) REMOVE -> id . punto remove para EXPRESION parc
    (197) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (199) LEN -> id . INDEXS punto len para parc
    (200) LEN -> id . punto len para parc
    (201) CAPACITY -> id . punto capacity para parc
    (202) ACCESVEC -> id . INDEXS
    (203) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (259) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 199
    punto           shift and go to state 602
    coma            reduce using rule 80 (ID -> id .)
    mas             reduce using rule 80 (ID -> id .)
    menos           reduce using rule 80 (ID -> id .)
    div             reduce using rule 80 (ID -> id .)
    multi           reduce using rule 80 (ID -> id .)
    mod             reduce using rule 80 (ID -> id .)
    mayor           reduce using rule 80 (ID -> id .)
    menor           reduce using rule 80 (ID -> id .)
    mayorigual      reduce using rule 80 (ID -> id .)
    menorigual      reduce using rule 80 (ID -> id .)
    igualigual      reduce using rule 80 (ID -> id .)
    diferente       reduce using rule 80 (ID -> id .)
    and             reduce using rule 80 (ID -> id .)
    or              reduce using rule 80 (ID -> id .)
    as              reduce using rule 80 (ID -> id .)
    para            shift and go to state 203
    dospuntos       shift and go to state 202
    cora            shift and go to state 204

  ! punto           [ reduce using rule 80 (ID -> id .) ]

    INDEXS                         shift and go to state 200

state 576

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor . EXPRESION coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 603
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 577

    (144) BRAZO -> CONJEXPM igual mayor BLOQUE_INST .

    guionbajo       reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    i64             reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    f64             reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    menos           reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    not             reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    para            reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    entero          reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    decimal         reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    cadena          reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    true            reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    false           reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    caracter        reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    id              reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    if              reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    match           reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    loop            reduce using rule 144 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)


state 578

    (145) BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE . coma

    coma            shift and go to state 604


state 579

    (101) BRAZO_TER -> CONJEXPM igual mayor EXPRESION . coma
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 605
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 580

    (37) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 606
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 581

    (38) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma . EXPRESION parc
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 196
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133

    EXPRESION                      shift and go to state 607
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153

state 582

    (227) CHARS -> id punto chars para . parc

    parc            shift and go to state 608


state 583

    (228) RANGO -> EXPRESION punto punto EXPRESION .
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    llavea          reduce using rule 228 (RANGO -> EXPRESION punto punto EXPRESION .)
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 584

    (226) CHARS -> EXPRESION punto chars para . parc

    parc            shift and go to state 609


state 585

    (179) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 179 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)


state 586

    (192) FUNCVEC -> withcapacity para EXPRESION parc .

    llavec          reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    pub             reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    fn              reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    modulo          reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    struct          reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    let             reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    puntoycoma      reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)
    coma            reduce using rule 192 (FUNCVEC -> withcapacity para EXPRESION parc .)


state 587

    (124) ASIGNACION -> id igual Vec dospuntos dospuntos new para parc .

    puntoycoma      reduce using rule 124 (ASIGNACION -> id igual Vec dospuntos dospuntos new para parc .)
    coma            reduce using rule 124 (ASIGNACION -> id igual Vec dospuntos dospuntos new para parc .)


state 588

    (125) ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 610
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 589

    (195) INSERT -> id punto insert para EXPRESION coma EXPRESION parc .

    puntoycoma      reduce using rule 195 (INSERT -> id punto insert para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 195 (INSERT -> id punto insert para EXPRESION coma EXPRESION parc .)


state 590

    (92) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION . llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc
    (18) INSTRUCCION -> EXPRESION .

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 611
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 591

    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES . EXPRESION llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 612
    INSTRUCCION                    shift and go to state 163
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 592

    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea . INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea . EXPRESION llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 613
    INSTRUCCIONES                  shift and go to state 614
    INSTRUCCION                    shift and go to state 73
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 593

    (95) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .

    mas             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menos           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    div             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    multi           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mod             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mayor           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menor           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mayorigual      reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menorigual      reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    igualigual      reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    diferente       reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    and             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    or              reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    as              reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    punto           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    llavec          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    println         reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    let             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    id              reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    if              reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    match           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    continue        reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    return          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    break           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    while           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    i64             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    f64             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    not             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    para            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    fn              reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    for             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    struct          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    modulo          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    entero          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    decimal         reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    cadena          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    true            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    false           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    caracter        reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    loop            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    pub             reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    coma            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    parc            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    llavea          reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    puntoycoma      reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    corc            reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    igual           reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    bvertical       reduce using rule 95 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)


state 594

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec
    (130) MATCH -> match EXPRESION llavea guionbajo igual . mayor BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo igual . mayor INSTRUCCION_1LINE coma llavec

    mayor           shift and go to state 615


state 595

    (101) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma
    (144) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma

    mayor           shift and go to state 616


state 596

    (129) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST . llavec

    llavec          shift and go to state 617


state 597

    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE . coma llavec

    coma            shift and go to state 618


state 598

    (121) ASIGNACION -> id . igual EXPRESION
    (122) ASIGNACION -> id . INDEXS igual EXPRESION
    (123) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> id . igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> id . igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> id . punto push para EXPRESION parc
    (194) PUSH -> id . punto push para VECI parc
    (195) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (204) INDEXS -> . INDEXS cora EXPRESION corc
    (205) INDEXS -> . cora EXPRESION corc

    igual           shift and go to state 199
    punto           shift and go to state 620
    cora            shift and go to state 204

    INDEXS                         shift and go to state 619

state 599

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma . llavec

    llavec          shift and go to state 621


state 600

    (130) MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .

    llavec          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    println         reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    let             reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    id              reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    if              reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    match           reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    continue        reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    return          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    break           reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    while           reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    i64             reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    f64             reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    menos           reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    not             reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    para            reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    fn              reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    for             reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    struct          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    modulo          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    entero          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    decimal         reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    cadena          reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    true            reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    false           reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    caracter        reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    loop            reduce using rule 130 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)


state 601

    (132) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma . llavec

    llavec          shift and go to state 622


state 602

    (193) PUSH -> id punto . push para EXPRESION parc
    (194) PUSH -> id punto . push para VECI parc
    (195) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (104) ABS -> id punto . abs para parc
    (106) CLONE -> id punto . clone para parc
    (109) SQRT -> id punto . sqrt para parc
    (112) TO_STRING_OWNED -> id punto . toString para parc
    (113) TO_STRING_OWNED -> id punto . toOwned para parc
    (196) REMOVE -> id punto . remove para EXPRESION parc
    (197) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (200) LEN -> id punto . len para parc
    (201) CAPACITY -> id punto . capacity para parc
    (243) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    push            shift and go to state 290
    insert          shift and go to state 291
    abs             shift and go to state 294
    clone           shift and go to state 295
    sqrt            shift and go to state 296
    toString        shift and go to state 297
    toOwned         shift and go to state 298
    remove          shift and go to state 293
    contains        shift and go to state 299
    len             shift and go to state 300
    capacity        shift and go to state 301
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 292

state 603

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION . coma llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 623
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 604

    (145) BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .

    guionbajo       reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    i64             reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    f64             reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    menos           reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    not             reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    para            reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    entero          reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    decimal         reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    cadena          reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    true            reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    false           reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    caracter        reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    id              reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    if              reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    match           reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    loop            reduce using rule 145 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)


state 605

    (101) BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .

    guionbajo       reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    i64             reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    f64             reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    menos           reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    not             reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    para            reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    entero          reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    decimal         reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    cadena          reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    true            reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    false           reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    caracter        reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    id              reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    if              reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    match           reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    loop            reduce using rule 101 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)


state 606

    (37) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 624
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 607

    (38) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION . parc
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 625
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    as              shift and go to state 183
    punto           shift and go to state 184


state 608

    (227) CHARS -> id punto chars para parc .

    llavea          reduce using rule 227 (CHARS -> id punto chars para parc .)


state 609

    (226) CHARS -> EXPRESION punto chars para parc .

    llavea          reduce using rule 226 (CHARS -> EXPRESION punto chars para parc .)


state 610

    (125) ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc .

    puntoycoma      reduce using rule 125 (ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc .)
    coma            reduce using rule 125 (ASIGNACION -> id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc .)


state 611

    (92) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .

    mas             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menos           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    div             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    multi           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mod             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mayor           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menor           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mayorigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menorigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    igualigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    diferente       reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    and             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    or              reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    as              reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    punto           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    llavec          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    println         reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    let             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    id              reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    if              reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    match           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    continue        reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    return          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    break           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    while           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    i64             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    f64             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    not             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    para            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    fn              reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    for             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    struct          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    modulo          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    entero          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    decimal         reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    cadena          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    true            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    false           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    caracter        reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    loop            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    pub             reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    coma            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    parc            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    llavea          reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    corc            reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    igual           reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    bvertical       reduce using rule 92 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)


state 612

    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION . llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 626
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 613

    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION . llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 627
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 614

    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES . EXPRESION llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . REMOVE puntoycoma
    (30) INSTRUCCION -> . MODULO
    (31) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (126) IF -> . if EXPRESION BLOQUE_INST
    (127) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (128) IF -> . if EXPRESION BLOQUE_INST else IF
    (129) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (130) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (131) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (132) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (151) CONTINUE -> . continue
    (152) RETURN -> . return EXPRESION
    (153) RETURN -> . return
    (149) BREAK -> . break
    (150) BREAK -> . break EXPRESION
    (154) WHILE -> . while EXPRESION BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (158) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (159) FUNCION -> . fn id para parc BLOQUE_INST
    (160) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (161) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (220) FORIN -> . for id in ARRFOR BLOQUE_INST
    (229) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (247) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 392
    match           shift and go to state 399
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 99
    continue        shift and go to state 103
    return          shift and go to state 104
    break           shift and go to state 105
    while           shift and go to state 106
    fn              shift and go to state 8
    for             shift and go to state 126
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 628
    INSTRUCCION                    shift and go to state 163
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 395
    REMOVE                         shift and go to state 396
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 397
    PRINT                          shift and go to state 74
    DECLARACION                    shift and go to state 75
    ASIGNACION                     shift and go to state 76
    IF                             shift and go to state 77
    MATCH                          shift and go to state 78
    CONTINUE                       shift and go to state 79
    RETURN                         shift and go to state 80
    BREAK                          shift and go to state 81
    WHILE                          shift and go to state 82
    FUNCION                        shift and go to state 85
    DECVECTOR                      shift and go to state 86
    PUSH                           shift and go to state 87
    INSERT                         shift and go to state 88
    DECARREGLO                     shift and go to state 89
    FORIN                          shift and go to state 90
    STRUCT                         shift and go to state 91
    DECSTRUCT                      shift and go to state 92
    MOD_VAR_STRUCT                 shift and go to state 93
    MODULO                         shift and go to state 95

state 615

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (130) MATCH -> match EXPRESION llavea guionbajo igual mayor . BLOQUE_INST llavec
    (132) MATCH -> match EXPRESION llavea guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    llavea          shift and go to state 48
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 28

    EXPRESION                      shift and go to state 563
    BLOQUE_INST                    shift and go to state 564
    INSTRUCCION_1LINE              shift and go to state 565
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574

state 616

    (101) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (144) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (145) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (32) EXPRESION -> . EXPRESION mas EXPRESION
    (33) EXPRESION -> . EXPRESION menos EXPRESION
    (34) EXPRESION -> . EXPRESION div EXPRESION
    (35) EXPRESION -> . EXPRESION multi EXPRESION
    (36) EXPRESION -> . EXPRESION mod EXPRESION
    (37) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (39) EXPRESION -> . menos EXPRESION
    (40) EXPRESION -> . EXPRESION mayor EXPRESION
    (41) EXPRESION -> . EXPRESION menor EXPRESION
    (42) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (43) EXPRESION -> . EXPRESION menorigual EXPRESION
    (44) EXPRESION -> . EXPRESION igualigual EXPRESION
    (45) EXPRESION -> . EXPRESION diferente EXPRESION
    (46) EXPRESION -> . EXPRESION and EXPRESION
    (47) EXPRESION -> . EXPRESION or EXPRESION
    (48) EXPRESION -> . not EXPRESION
    (49) EXPRESION -> . para EXPRESION parc
    (50) EXPRESION -> . TIPODATO
    (51) EXPRESION -> . ID
    (52) EXPRESION -> . IF_TER
    (53) EXPRESION -> . MATCH_TER
    (54) EXPRESION -> . LOOP
    (55) EXPRESION -> . CAST_AS
    (56) EXPRESION -> . ABS
    (57) EXPRESION -> . CLONE
    (58) EXPRESION -> . SQRT
    (59) EXPRESION -> . TO_STRING_OWNED
    (60) EXPRESION -> . CALL
    (61) EXPRESION -> . REMOVE
    (62) EXPRESION -> . CONTAINS
    (63) EXPRESION -> . LEN
    (64) EXPRESION -> . CAPACITY
    (65) EXPRESION -> . ACCESVEC
    (66) EXPRESION -> . ACCESO_STRUCT
    (67) EXPRESION -> . ACCESO_MOD
    (155) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (133) INSTRUCCION_1LINE -> . PRINT
    (134) INSTRUCCION_1LINE -> . DECLARACION
    (135) INSTRUCCION_1LINE -> . ASIGNACION
    (136) INSTRUCCION_1LINE -> . PUSH
    (137) INSTRUCCION_1LINE -> . INSERT
    (138) INSTRUCCION_1LINE -> . DECARREGLO
    (139) INSTRUCCION_1LINE -> . DECVECTOR
    (140) INSTRUCCION_1LINE -> . DECSTRUCT
    (141) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (75) TIPODATO -> . entero
    (76) TIPODATO -> . decimal
    (77) TIPODATO -> . cadena
    (78) TIPODATO -> . true
    (79) TIPODATO -> . false
    (81) TIPODATO -> . caracter
    (80) ID -> . id
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (95) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (96) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (97) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (98) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (148) LOOP -> . loop BLOQUE_INST
    (102) CAST_AS -> . EXPRESION as TIPOVAR
    (103) ABS -> . EXPRESION punto abs para parc
    (104) ABS -> . id punto abs para parc
    (105) CLONE -> . EXPRESION punto clone para parc
    (106) CLONE -> . id punto clone para parc
    (107) CLONE -> . id INDEXS punto clone para parc
    (108) SQRT -> . EXPRESION punto sqrt para parc
    (109) SQRT -> . id punto sqrt para parc
    (110) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (111) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (112) TO_STRING_OWNED -> . id punto toString para parc
    (113) TO_STRING_OWNED -> . id punto toOwned para parc
    (172) CALL -> . id para CONJEXP parc
    (173) CALL -> . id para parc
    (196) REMOVE -> . id punto remove para EXPRESION parc
    (197) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (198) LEN -> . EXPRESION punto len para parc
    (199) LEN -> . id INDEXS punto len para parc
    (200) LEN -> . id punto len para parc
    (201) CAPACITY -> . id punto capacity para parc
    (202) ACCESVEC -> . id INDEXS
    (203) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (243) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (259) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (260) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (114) PRINT -> . println para EXPRESION parc
    (115) PRINT -> . println para EXPRESION coma CONJEXP parc
    (116) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let mut id igual EXPRESION
    (118) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (119) DECLARACION -> . let id igual EXPRESION
    (120) DECLARACION -> . let mut id dospuntos TIPOVAR
    (121) ASIGNACION -> . id igual EXPRESION
    (122) ASIGNACION -> . id INDEXS igual EXPRESION
    (123) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (124) ASIGNACION -> . id igual Vec dospuntos dospuntos new para parc
    (125) ASIGNACION -> . id igual Vec dospuntos dospuntos withcapacity para EXPRESION parc
    (193) PUSH -> . id punto push para EXPRESION parc
    (194) PUSH -> . id punto push para VECI parc
    (195) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (206) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (207) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (208) DECARREGLO -> . let id igual ARREGLO
    (209) DECARREGLO -> . let mut id igual ARREGLO
    (174) DECVECTOR -> . let id igual VECI
    (175) DECVECTOR -> . let mut id igual VECI
    (176) DECVECTOR -> . let id dospuntos VEC igual VECI
    (177) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (178) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (179) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (180) DECVECTOR -> . let id igual Vec dospuntos dospuntos FUNCVEC
    (181) DECVECTOR -> . let mut id igual Vec dospuntos dospuntos FUNCVEC
    (235) DECSTRUCT -> . let id igual STRUCT_EXP
    (236) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (237) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (238) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (246) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    i64             shift and go to state 108
    f64             shift and go to state 109
    menos           shift and go to state 107
    not             shift and go to state 110
    para            shift and go to state 98
    llavea          shift and go to state 48
    entero          shift and go to state 127
    decimal         shift and go to state 128
    cadena          shift and go to state 129
    true            shift and go to state 130
    false           shift and go to state 131
    caracter        shift and go to state 132
    id              shift and go to state 398
    if              shift and go to state 156
    match           shift and go to state 157
    loop            shift and go to state 133
    println         shift and go to state 97
    let             shift and go to state 28

    EXPRESION                      shift and go to state 579
    BLOQUE_INST                    shift and go to state 577
    INSTRUCCION_1LINE              shift and go to state 578
    TIPODATO                       shift and go to state 111
    ID                             shift and go to state 112
    IF_TER                         shift and go to state 113
    MATCH_TER                      shift and go to state 114
    LOOP                           shift and go to state 115
    CAST_AS                        shift and go to state 116
    ABS                            shift and go to state 117
    CLONE                          shift and go to state 118
    SQRT                           shift and go to state 119
    TO_STRING_OWNED                shift and go to state 120
    CALL                           shift and go to state 151
    REMOVE                         shift and go to state 152
    CONTAINS                       shift and go to state 121
    LEN                            shift and go to state 122
    CAPACITY                       shift and go to state 123
    ACCESVEC                       shift and go to state 124
    ACCESO_STRUCT                  shift and go to state 125
    ACCESO_MOD                     shift and go to state 153
    PRINT                          shift and go to state 566
    DECLARACION                    shift and go to state 567
    ASIGNACION                     shift and go to state 568
    PUSH                           shift and go to state 569
    INSERT                         shift and go to state 570
    DECARREGLO                     shift and go to state 571
    DECVECTOR                      shift and go to state 572
    DECSTRUCT                      shift and go to state 573
    MOD_VAR_STRUCT                 shift and go to state 574

state 617

    (129) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .

    llavec          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    println         reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    let             reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    id              reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    if              reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    match           reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    continue        reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    return          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    break           reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    while           reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    i64             reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    f64             reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    menos           reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    not             reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    para            reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    fn              reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    for             reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    struct          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    modulo          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    entero          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    decimal         reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    cadena          reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    true            reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    false           reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    caracter        reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    loop            reduce using rule 129 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)


state 618

    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma . llavec

    llavec          shift and go to state 629


state 619

    (122) ASIGNACION -> id INDEXS . igual EXPRESION
    (123) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (204) INDEXS -> INDEXS . cora EXPRESION corc

    igual           shift and go to state 286
    punto           shift and go to state 630
    cora            shift and go to state 288


state 620

    (193) PUSH -> id punto . push para EXPRESION parc
    (194) PUSH -> id punto . push para VECI parc
    (195) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (246) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    push            shift and go to state 290
    insert          shift and go to state 291
    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 631

state 621

    (98) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .

    mas             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menos           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    div             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    multi           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mod             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mayor           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menor           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mayorigual      reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menorigual      reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    igualigual      reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    diferente       reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    and             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    or              reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    as              reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    punto           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    llavec          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    println         reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    let             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    id              reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    if              reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    match           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    continue        reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    return          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    break           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    while           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    i64             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    f64             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    not             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    para            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    fn              reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    for             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    struct          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    modulo          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    entero          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    decimal         reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    cadena          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    true            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    false           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    caracter        reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    loop            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    pub             reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    coma            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    parc            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    llavea          reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    puntoycoma      reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    corc            reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    igual           reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    bvertical       reduce using rule 98 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)


state 622

    (132) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .

    llavec          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    println         reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    let             reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    id              reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    if              reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    match           reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    continue        reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    return          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    break           reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    while           reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    i64             reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    f64             reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    menos           reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    not             reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    para            reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    fn              reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    for             reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    struct          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    modulo          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    entero          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    decimal         reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    cadena          reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    true            reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    false           reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    caracter        reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    loop            reduce using rule 132 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)


state 623

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma . llavec

    llavec          shift and go to state 632


state 624

    (37) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .

    mas             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menos           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    div             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    multi           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mod             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mayor           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menor           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mayorigual      reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menorigual      reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    igualigual      reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    diferente       reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    and             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    or              reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    as              reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    punto           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    llavec          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    println         reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    let             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    id              reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    if              reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    match           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    continue        reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    return          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    break           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    while           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    i64             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    f64             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    not             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    para            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    fn              reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    for             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    struct          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    modulo          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    entero          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    decimal         reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    cadena          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    true            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    false           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    caracter        reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    loop            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    pub             reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    parc            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    llavea          reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    puntoycoma      reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    corc            reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    igual           reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    bvertical       reduce using rule 37 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)


state 625

    (38) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .

    mas             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menos           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    div             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    multi           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mod             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mayor           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menor           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mayorigual      reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menorigual      reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    igualigual      reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    diferente       reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    and             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    or              reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    as              reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    punto           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    llavec          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    println         reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    let             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    id              reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    if              reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    match           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    continue        reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    return          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    break           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    while           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    i64             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    f64             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    not             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    para            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    fn              reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    for             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    struct          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    modulo          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    entero          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    decimal         reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    cadena          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    true            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    false           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    caracter        reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    loop            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    pub             reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    parc            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    llavea          reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    puntoycoma      reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    corc            reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    igual           reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    bvertical       reduce using rule 38 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)


state 626

    (93) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .

    mas             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 93 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)


state 627

    (94) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .

    mas             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menos           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    div             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    multi           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mod             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mayor           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menor           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mayorigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menorigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    igualigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    diferente       reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    and             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    or              reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    as              reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    punto           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    llavec          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    println         reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    let             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    id              reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    if              reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    match           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    continue        reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    return          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    break           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    while           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    i64             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    f64             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    not             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    para            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    fn              reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    for             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    struct          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    modulo          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    entero          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    decimal         reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    cadena          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    true            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    false           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    caracter        reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    loop            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    pub             reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    coma            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    parc            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    llavea          reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    corc            reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    igual           reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    bvertical       reduce using rule 94 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)


state 628

    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION . llavec
    (32) EXPRESION -> EXPRESION . mas EXPRESION
    (33) EXPRESION -> EXPRESION . menos EXPRESION
    (34) EXPRESION -> EXPRESION . div EXPRESION
    (35) EXPRESION -> EXPRESION . multi EXPRESION
    (36) EXPRESION -> EXPRESION . mod EXPRESION
    (40) EXPRESION -> EXPRESION . mayor EXPRESION
    (41) EXPRESION -> EXPRESION . menor EXPRESION
    (42) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (43) EXPRESION -> EXPRESION . menorigual EXPRESION
    (44) EXPRESION -> EXPRESION . igualigual EXPRESION
    (45) EXPRESION -> EXPRESION . diferente EXPRESION
    (46) EXPRESION -> EXPRESION . and EXPRESION
    (47) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (102) CAST_AS -> EXPRESION . as TIPOVAR
    (103) ABS -> EXPRESION . punto abs para parc
    (105) CLONE -> EXPRESION . punto clone para parc
    (108) SQRT -> EXPRESION . punto sqrt para parc
    (110) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (111) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (198) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 633
    mas             shift and go to state 170
    menos           shift and go to state 171
    div             shift and go to state 172
    multi           shift and go to state 173
    mod             shift and go to state 174
    mayor           shift and go to state 175
    menor           shift and go to state 176
    mayorigual      shift and go to state 177
    menorigual      shift and go to state 178
    igualigual      shift and go to state 179
    diferente       shift and go to state 180
    and             shift and go to state 181
    or              shift and go to state 182
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 183
    punto           shift and go to state 184

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 629

    (131) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .

    llavec          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    println         reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    let             reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    id              reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    if              reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    match           reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    continue        reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    return          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    break           reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    while           reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    i64             reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    f64             reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    menos           reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    not             reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    para            reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    fn              reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    for             reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    struct          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    modulo          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    entero          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    decimal         reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    cadena          reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    true            reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    false           reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    caracter        reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    loop            reduce using rule 131 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)


state 630

    (123) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (244) CONJ_ACCES -> . CONJ_ACCES punto id
    (245) CONJ_ACCES -> . id

    id              shift and go to state 289

    CONJ_ACCES                     shift and go to state 634

state 631

    (246) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

    igual           shift and go to state 375
    punto           shift and go to state 374


state 632

    (97) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .

    mas             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menos           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    div             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    multi           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mod             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mayor           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menor           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mayorigual      reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menorigual      reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    igualigual      reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    diferente       reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    and             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    or              reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    as              reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    punto           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    llavec          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    println         reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    let             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    id              reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    if              reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    match           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    continue        reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    return          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    break           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    while           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    i64             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    f64             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    not             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    para            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    fn              reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    for             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    struct          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    modulo          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    entero          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    decimal         reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    cadena          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    true            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    false           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    caracter        reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    loop            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    pub             reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    coma            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    parc            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    llavea          reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    puntoycoma      reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    corc            reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    igual           reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    bvertical       reduce using rule 97 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)


state 633

    (91) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .

    mas             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 91 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)


state 634

    (123) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (244) CONJ_ACCES -> CONJ_ACCES . punto id

    igual           shift and go to state 453
    punto           shift and go to state 374

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for menos in state 83 resolved as shift
WARNING: shift/reduce conflict for punto in state 100 resolved as shift
WARNING: shift/reduce conflict for para in state 100 resolved as shift
WARNING: shift/reduce conflict for punto in state 145 resolved as shift
WARNING: shift/reduce conflict for punto in state 196 resolved as shift
WARNING: shift/reduce conflict for para in state 196 resolved as shift
WARNING: shift/reduce conflict for punto in state 200 resolved as shift
WARNING: shift/reduce conflict for punto in state 237 resolved as shift
WARNING: shift/reduce conflict for punto in state 244 resolved as shift
WARNING: shift/reduce conflict for punto in state 292 resolved as shift
WARNING: shift/reduce conflict for punto in state 336 resolved as shift
WARNING: shift/reduce conflict for punto in state 368 resolved as shift
WARNING: shift/reduce conflict for llavec in state 393 resolved as shift
WARNING: shift/reduce conflict for menos in state 393 resolved as shift
WARNING: shift/reduce conflict for punto in state 398 resolved as shift
WARNING: shift/reduce conflict for para in state 398 resolved as shift
WARNING: shift/reduce conflict for punto in state 409 resolved as shift
WARNING: shift/reduce conflict for punto in state 430 resolved as shift
WARNING: shift/reduce conflict for llavec in state 479 resolved as shift
WARNING: shift/reduce conflict for menos in state 479 resolved as shift
WARNING: shift/reduce conflict for punto in state 481 resolved as shift
WARNING: shift/reduce conflict for punto in state 529 resolved as shift
WARNING: shift/reduce conflict for punto in state 558 resolved as shift
WARNING: shift/reduce conflict for punto in state 575 resolved as shift
WARNING: shift/reduce conflict for menos in state 590 resolved as shift
WARNING: shift/reduce conflict for menos in state 612 resolved as shift
WARNING: shift/reduce conflict for menos in state 613 resolved as shift
WARNING: shift/reduce conflict for menos in state 628 resolved as shift
