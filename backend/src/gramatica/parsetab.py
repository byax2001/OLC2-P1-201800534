
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftmenosmasleftmultidivrightUNARIOand bool bvertical cadena caracter char coma cora corc decimal diferente div dospuntos else entero f64 false guionbajo i64 id if igual igualigual interrogacion let llavea llavec mas match mayor mayorigual menor menorigual menos mod multi mut not or para parc pow println puntoycoma str string struct true\n    INICIO : INSTRUCCIONES\n    \n    INSTRUCCIONES : INSTRUCCIONES INSTRUCCION puntoycoma\n    \n    INSTRUCCIONES : INSTRUCCION puntoycoma\n    \n    INSTRUCCION : PRINT\n        | DECLARACION\n        | ASIGNACION\n        | IF\n        | MATCH\n    \n    EXPRESION : EXPRESION mas EXPRESION \n            |   EXPRESION menos EXPRESION\n            |   EXPRESION div EXPRESION\n            |   EXPRESION multi EXPRESION\n            |   EXPRESION mod EXPRESION  \n            |   pow para EXPRESION coma EXPRESION parc\n    \n    EXPRESION : menos EXPRESION %prec UNARIO\n    \n    EXPRESION :  EXPRESION mayor EXPRESION\n            |   EXPRESION menor EXPRESION\n            |   EXPRESION mayorigual EXPRESION\n            |   EXPRESION menorigual EXPRESION\n            |   EXPRESION igualigual EXPRESION\n            |   EXPRESION diferente EXPRESION\n    \n    EXPRESION :  EXPRESION and EXPRESION\n            |   EXPRESION or EXPRESION\n    \n    EXPRESION :  not EXPRESION\n    \n    EXPRESION : para EXPRESION parc\n    \n    EXPRESION : TIPODATO\n        | IF_TER\n        | MATCH_TER\n    \n    TIPODATO : entero\n        | decimal\n        | cadena\n        | true\n        | false\n    \n    EXPRESION : id\n    \n    TIPODATO : caracter\n    \n    TIPOVAR : i64\n        | f64\n        | bool\n        | string\n        | char\n        | str\n    \n    IF_TER : if  EXPRESION  llavea EXPRESION llavec\n    \n    IF_TER : if  EXPRESION  llavea EXPRESION llavec else llavea EXPRESION llavec\n    \n    IF_TER : if EXPRESION  llavea EXPRESION llavec else IF_TER\n    \n    MATCH_TER : match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec\n        |  match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec\n    \n    BRAZOS_TER : BRAZOS_TER BRAZO_TER\n    \n    BRAZOS_TER : BRAZO_TER\n    \n    BRAZO_TER : CONJEXP igual mayor EXPRESION coma\n    \n    PRINT : println para EXPRESION parc\n    \n    DECLARACION : let mut id dospuntos TIPOVAR igual EXPRESION\n                | let mut id igual EXPRESION\n    \n    DECLARACION : let id dospuntos TIPOVAR igual EXPRESION\n                | let id igual EXPRESION\n    \n    DECLARACION : let mut id dospuntos TIPOVAR\n    \n    ASIGNACION : id igual EXPRESION\n    \n    IF : if  EXPRESION  BLOQUE_INST\n    \n    IF : if  EXPRESION  BLOQUE_INST else BLOQUE_INST\n    \n    IF : if EXPRESION  BLOQUE_INST else IF\n    \n    MATCH : match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec\n        | match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec\n    \n    MATCH : match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION coma llavec\n        |  match EXPRESION llavea guionbajo igual mayor INSTRUCCION coma llavec\n    \n    BRAZOS : BRAZOS BRAZO\n    \n    BRAZOS : BRAZO\n    \n    BRAZO : CONJEXP igual mayor BLOQUE_INST\n        | CONJEXP igual mayor INSTRUCCION coma\n    CONJEXP : CONJEXP bvertical EXPRESIONCONJEXP : EXPRESION\n    BLOQUE_INST : llavea  INSTRUCCIONES llavec\n    '
    
_lr_action_items = {'println':([0,2,15,38,59,92,127,128,136,],[9,9,-3,-2,9,9,9,9,9,]),'let':([0,2,15,38,59,92,127,128,136,],[10,10,-3,-2,10,10,10,10,10,]),'id':([0,2,10,12,13,15,16,17,19,20,22,24,25,36,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,65,68,77,92,95,97,99,103,107,108,109,111,114,117,118,123,127,128,134,135,136,139,141,143,150,154,],[11,11,18,29,29,-3,29,40,29,29,29,29,29,29,-2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,11,29,29,29,29,11,29,29,-65,29,-70,29,29,-48,-64,29,29,-47,11,11,29,29,11,-66,29,29,-67,-49,]),'if':([0,2,12,13,15,16,19,20,22,24,25,36,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,65,68,77,78,92,95,97,99,103,107,108,109,111,114,117,118,123,127,128,131,134,135,136,139,141,143,150,154,],[12,12,20,20,-3,20,20,20,20,20,20,20,-2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,12,20,20,20,20,12,12,20,20,-65,20,-70,20,20,-48,-64,20,20,-47,12,12,20,20,20,12,-66,20,20,-67,-49,]),'match':([0,2,12,13,15,16,19,20,22,24,25,36,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,65,68,77,92,95,97,99,103,107,108,109,111,114,117,118,123,127,128,134,135,136,139,141,143,150,154,],[13,13,36,36,-3,36,36,36,36,36,36,36,-2,36,36,36,36,36,36,36,36,36,36,36,36,36,36,13,36,36,36,36,13,36,36,-65,36,-70,36,36,-48,-64,36,36,-47,13,13,36,36,13,-66,36,36,-67,-49,]),'$end':([1,2,15,38,],[0,-1,-3,-2,]),'puntoycoma':([3,4,5,6,7,8,14,26,27,28,29,30,31,32,33,34,35,43,45,60,63,66,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,94,101,102,105,106,107,119,120,130,132,142,148,155,157,158,160,161,162,],[15,-4,-5,-6,-7,-8,38,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,-56,-57,-15,-24,-50,-36,-37,-38,-39,-40,-41,-54,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,-55,-52,-58,-59,-70,-53,-42,-51,-14,-44,-61,-60,-63,-43,-46,-62,-45,]),'coma':([4,5,6,7,8,26,27,28,29,30,31,32,33,34,35,43,45,60,63,66,70,71,72,73,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,101,102,105,106,107,119,120,130,132,138,140,142,144,145,147,148,152,155,157,158,160,161,162,],[-4,-5,-6,-7,-8,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,-56,-57,-15,-24,-50,-36,-37,-38,-39,-40,-41,-54,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,108,-25,-55,-52,-58,-59,-70,-53,-42,-51,-14,149,150,-44,153,154,156,-61,159,-60,-63,-43,-46,-62,-45,]),'para':([9,12,13,16,19,20,22,23,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[16,24,24,24,24,24,24,61,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-65,24,-70,24,24,-48,-64,24,24,-47,24,24,-66,24,24,-67,-49,]),'mut':([10,],[17,]),'igual':([11,18,26,27,28,29,30,31,32,33,34,35,40,60,63,69,70,71,72,73,74,75,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,98,100,101,110,112,113,120,122,129,132,142,158,160,162,],[19,42,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,68,-15,-24,103,-36,-37,-38,-39,-40,-41,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,-69,115,116,118,124,125,126,-42,133,-68,-14,-44,-43,-46,-45,]),'pow':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-65,23,-70,23,23,-48,-64,23,23,-47,23,23,-66,23,23,-67,-49,]),'menos':([12,13,16,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,63,64,65,68,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,99,102,103,104,107,108,109,111,114,117,118,119,120,121,123,129,130,132,134,135,139,141,142,143,144,145,150,151,152,154,158,160,162,],[22,22,22,22,22,47,22,22,22,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,22,47,47,22,47,47,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,22,47,47,47,22,22,47,22,-9,-10,-11,-12,47,47,47,47,47,47,47,47,47,47,-25,22,47,22,-65,47,22,47,-70,22,22,-48,-64,22,22,47,-42,47,-47,47,47,-14,22,22,-66,22,-44,22,47,47,-67,47,47,-49,-43,-46,-45,]),'not':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-65,25,-70,25,25,-48,-64,25,25,-47,25,25,-66,25,25,-67,-49,]),'entero':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-65,30,-70,30,30,-48,-64,30,30,-47,30,30,-66,30,30,-67,-49,]),'decimal':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-65,31,-70,31,31,-48,-64,31,31,-47,31,31,-66,31,31,-67,-49,]),'cadena':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-65,32,-70,32,32,-48,-64,32,32,-47,32,32,-66,32,32,-67,-49,]),'true':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-65,33,-70,33,33,-48,-64,33,33,-47,33,33,-66,33,33,-67,-49,]),'false':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-65,34,-70,34,34,-48,-64,34,34,-47,34,34,-66,34,34,-67,-49,]),'caracter':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,99,103,107,108,109,111,114,117,118,123,134,135,139,141,143,150,154,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-65,35,-70,35,35,-48,-64,35,35,-47,35,35,-66,35,35,-67,-49,]),'llavec':([15,26,27,28,29,30,31,32,33,34,35,38,60,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,104,107,120,132,137,142,146,149,151,153,156,158,159,160,162,],[-3,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,-2,-15,-24,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,107,-25,120,-70,-42,-14,148,-44,155,157,158,160,161,-43,162,-46,-45,]),'dospuntos':([18,40,],[41,67,]),'mas':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[46,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,46,46,46,46,-15,46,46,46,46,-9,-10,-11,-12,46,46,46,46,46,46,46,46,46,46,-25,46,46,46,46,-42,46,46,46,-14,-44,46,46,46,46,-43,-46,-45,]),'div':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[48,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,48,48,48,48,-15,48,48,48,48,48,48,-11,-12,48,48,48,48,48,48,48,48,48,48,-25,48,48,48,48,-42,48,48,48,-14,-44,48,48,48,48,-43,-46,-45,]),'multi':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[49,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,49,49,49,49,-15,49,49,49,49,49,49,-11,-12,49,49,49,49,49,49,49,49,49,49,-25,49,49,49,49,-42,49,49,49,-14,-44,49,49,49,49,-43,-46,-45,]),'mod':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[50,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,50,50,50,50,-15,50,50,50,50,-9,-10,-11,-12,50,50,50,50,50,50,50,50,50,50,-25,50,50,50,50,-42,50,50,50,-14,-44,50,50,50,50,-43,-46,-45,]),'mayor':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,115,116,119,120,121,124,125,126,129,130,132,133,142,144,145,151,152,158,160,162,],[51,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,51,51,51,51,-15,51,51,51,51,-9,-10,-11,-12,51,51,51,51,51,51,51,51,51,51,-25,51,51,51,127,128,51,-42,51,134,135,136,51,51,-14,143,-44,51,51,51,51,-43,-46,-45,]),'menor':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[52,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,52,52,52,52,-15,52,52,52,52,-9,-10,-11,-12,52,52,52,52,52,52,52,52,52,52,-25,52,52,52,52,-42,52,52,52,-14,-44,52,52,52,52,-43,-46,-45,]),'mayorigual':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[53,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,53,53,53,53,-15,53,53,53,53,-9,-10,-11,-12,53,53,53,53,53,53,53,53,53,53,-25,53,53,53,53,-42,53,53,53,-14,-44,53,53,53,53,-43,-46,-45,]),'menorigual':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[54,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,54,54,54,54,-15,54,54,54,54,-9,-10,-11,-12,54,54,54,54,54,54,54,54,54,54,-25,54,54,54,54,-42,54,54,54,-14,-44,54,54,54,54,-43,-46,-45,]),'igualigual':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[55,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,55,55,55,55,-15,55,55,55,55,-9,-10,-11,-12,55,55,55,55,55,55,55,55,55,55,-25,55,55,55,55,-42,55,55,55,-14,-44,55,55,55,55,-43,-46,-45,]),'diferente':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[56,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,56,56,56,56,-15,56,56,56,56,-9,-10,-11,-12,56,56,56,56,56,56,56,56,56,56,-25,56,56,56,56,-42,56,56,56,-14,-44,56,56,56,56,-43,-46,-45,]),'and':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[57,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,57,57,57,57,-15,57,57,57,57,-9,-10,-11,-12,57,57,57,57,57,57,57,57,57,57,-25,57,57,57,57,-42,57,57,57,-14,-44,57,57,57,57,-43,-46,-45,]),'or':([21,26,27,28,29,30,31,32,33,34,35,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,102,104,119,120,121,129,130,132,142,144,145,151,152,158,160,162,],[58,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,58,58,58,58,-15,58,58,58,58,-9,-10,-11,-12,58,58,58,58,58,58,58,58,58,58,-25,58,58,58,58,-42,58,58,58,-14,-44,58,58,58,58,-43,-46,-45,]),'llavea':([21,26,27,28,29,30,31,32,33,34,35,37,44,60,63,64,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,120,127,128,131,132,136,142,158,160,162,],[59,-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,65,77,-15,-24,95,59,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,-42,59,59,141,-14,59,-44,-43,-46,-45,]),'parc':([26,27,28,29,30,31,32,33,34,35,39,60,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,94,120,121,132,142,158,160,162,],[-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,66,-15,94,-24,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,-42,132,-14,-44,-43,-46,-45,]),'bvertical':([26,27,28,29,30,31,32,33,34,35,60,63,79,80,81,82,83,84,85,86,87,88,89,90,91,94,96,100,112,120,129,132,142,158,160,162,],[-26,-27,-28,-34,-29,-30,-31,-32,-33,-35,-15,-24,-9,-10,-11,-12,-13,-16,-17,-18,-19,-20,-21,-22,-23,-25,-69,117,117,-42,-68,-14,-44,-43,-46,-45,]),'i64':([41,67,],[70,70,]),'f64':([41,67,],[71,71,]),'bool':([41,67,],[72,72,]),'string':([41,67,],[73,73,]),'char':([41,67,],[74,74,]),'str':([41,67,],[75,75,]),'else':([45,107,120,],[78,-70,131,]),'guionbajo':([65,95,97,99,107,109,111,114,123,139,150,154,],[98,110,113,-65,-70,122,-48,-64,-47,-66,-67,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'INSTRUCCIONES':([0,59,],[2,92,]),'INSTRUCCION':([0,2,59,92,127,128,136,],[3,14,3,14,138,140,147,]),'PRINT':([0,2,59,92,127,128,136,],[4,4,4,4,4,4,4,]),'DECLARACION':([0,2,59,92,127,128,136,],[5,5,5,5,5,5,5,]),'ASIGNACION':([0,2,59,92,127,128,136,],[6,6,6,6,6,6,6,]),'IF':([0,2,59,78,92,127,128,136,],[7,7,7,106,7,7,7,7,]),'MATCH':([0,2,59,92,127,128,136,],[8,8,8,8,8,8,8,]),'EXPRESION':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,103,108,109,117,118,134,135,141,143,],[21,37,39,43,44,60,62,63,64,76,79,80,81,82,83,84,85,86,87,88,89,90,91,93,96,102,104,96,96,119,121,96,129,130,144,145,151,152,]),'TIPODATO':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,103,108,109,117,118,134,135,141,143,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF_TER':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,103,108,109,117,118,131,134,135,141,143,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,142,27,27,27,27,]),'MATCH_TER':([12,13,16,19,20,22,24,25,36,42,46,47,48,49,50,51,52,53,54,55,56,57,58,61,65,68,77,95,97,103,108,109,117,118,134,135,141,143,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'BLOQUE_INST':([21,78,127,128,136,],[45,105,137,139,146,]),'TIPOVAR':([41,67,],[69,101,]),'BRAZOS':([65,],[97,]),'BRAZO':([65,97,],[99,114,]),'CONJEXP':([65,95,97,109,],[100,112,100,112,]),'BRAZOS_TER':([95,],[109,]),'BRAZO_TER':([95,109,],[111,123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> INSTRUCCIONES','INICIO',1,'p_inicio','parser.py',40),
  ('INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION puntoycoma','INSTRUCCIONES',3,'p_instrucciones_lista','parser.py',46),
  ('INSTRUCCIONES -> INSTRUCCION puntoycoma','INSTRUCCIONES',2,'p_instrucciones_instruccion','parser.py',53),
  ('INSTRUCCION -> PRINT','INSTRUCCION',1,'p_instruccion','parser.py',59),
  ('INSTRUCCION -> DECLARACION','INSTRUCCION',1,'p_instruccion','parser.py',60),
  ('INSTRUCCION -> ASIGNACION','INSTRUCCION',1,'p_instruccion','parser.py',61),
  ('INSTRUCCION -> IF','INSTRUCCION',1,'p_instruccion','parser.py',62),
  ('INSTRUCCION -> MATCH','INSTRUCCION',1,'p_instruccion','parser.py',63),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',69),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',70),
  ('EXPRESION -> EXPRESION div EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',71),
  ('EXPRESION -> EXPRESION multi EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',72),
  ('EXPRESION -> EXPRESION mod EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',73),
  ('EXPRESION -> pow para EXPRESION coma EXPRESION parc','EXPRESION',6,'p_expresion_aritmeticas','parser.py',74),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_factor_unario','parser.py',88),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',94),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',95),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',96),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',97),
  ('EXPRESION -> EXPRESION igualigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',98),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',99),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logicas','parser.py',105),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logicas','parser.py',106),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_expresion_logicas_not','parser.py',111),
  ('EXPRESION -> para EXPRESION parc','EXPRESION',3,'p_EXPRESION_par','parser.py',117),
  ('EXPRESION -> TIPODATO','EXPRESION',1,'p_exp_one_element','parser.py',123),
  ('EXPRESION -> IF_TER','EXPRESION',1,'p_exp_one_element','parser.py',124),
  ('EXPRESION -> MATCH_TER','EXPRESION',1,'p_exp_one_element','parser.py',125),
  ('TIPODATO -> entero','TIPODATO',1,'p_tipo_dato','parser.py',131),
  ('TIPODATO -> decimal','TIPODATO',1,'p_tipo_dato','parser.py',132),
  ('TIPODATO -> cadena','TIPODATO',1,'p_tipo_dato','parser.py',133),
  ('TIPODATO -> true','TIPODATO',1,'p_tipo_dato','parser.py',134),
  ('TIPODATO -> false','TIPODATO',1,'p_tipo_dato','parser.py',135),
  ('EXPRESION -> id','EXPRESION',1,'p_id','parser.py',141),
  ('TIPODATO -> caracter','TIPODATO',1,'p_char','parser.py',147),
  ('TIPOVAR -> i64','TIPOVAR',1,'p_tipo_var','parser.py',153),
  ('TIPOVAR -> f64','TIPOVAR',1,'p_tipo_var','parser.py',154),
  ('TIPOVAR -> bool','TIPOVAR',1,'p_tipo_var','parser.py',155),
  ('TIPOVAR -> string','TIPOVAR',1,'p_tipo_var','parser.py',156),
  ('TIPOVAR -> char','TIPOVAR',1,'p_tipo_var','parser.py',157),
  ('TIPOVAR -> str','TIPOVAR',1,'p_tipo_var','parser.py',158),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec','IF_TER',5,'p_if_ternario','parser.py',164),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec','IF_TER',9,'p_if_else_ternario','parser.py',169),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER','IF_TER',7,'p_if_else_if_ternario','parser.py',174),
  ('MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec','MATCH_TER',10,'p_matchTer','parser.py',180),
  ('MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec','MATCH_TER',9,'p_matchTer','parser.py',181),
  ('BRAZOS_TER -> BRAZOS_TER BRAZO_TER','BRAZOS_TER',2,'p_brazosTer_list','parser.py',189),
  ('BRAZOS_TER -> BRAZO_TER','BRAZOS_TER',1,'p_brazosTer_brazo','parser.py',195),
  ('BRAZO_TER -> CONJEXP igual mayor EXPRESION coma','BRAZO_TER',5,'p_brazoTer','parser.py',200),
  ('PRINT -> println para EXPRESION parc','PRINT',4,'p_println','parser.py',207),
  ('DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION','DECLARACION',7,'p_declaracion_t1','parser.py',213),
  ('DECLARACION -> let mut id igual EXPRESION','DECLARACION',5,'p_declaracion_t1','parser.py',214),
  ('DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION','DECLARACION',6,'p_declaracion_t2','parser.py',223),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_declaracion_t2','parser.py',224),
  ('DECLARACION -> let mut id dospuntos TIPOVAR','DECLARACION',5,'p_declaracion_t3','parser.py',233),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_asignaciones','parser.py',242),
  ('IF -> if EXPRESION BLOQUE_INST','IF',3,'p_if','parser.py',249),
  ('IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST','IF',5,'p_if_else','parser.py',254),
  ('IF -> if EXPRESION BLOQUE_INST else IF','IF',5,'p_if_else_if','parser.py',259),
  ('MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec','MATCH',9,'p_match_1','parser.py',266),
  ('MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec','MATCH',8,'p_match_1','parser.py',267),
  ('MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION coma llavec','MATCH',10,'p_match_2','parser.py',275),
  ('MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION coma llavec','MATCH',9,'p_match_2','parser.py',276),
  ('BRAZOS -> BRAZOS BRAZO','BRAZOS',2,'p_brazos_list','parser.py',284),
  ('BRAZOS -> BRAZO','BRAZOS',1,'p_brazos_brazo','parser.py',290),
  ('BRAZO -> CONJEXP igual mayor BLOQUE_INST','BRAZO',4,'p_brazo','parser.py',295),
  ('BRAZO -> CONJEXP igual mayor INSTRUCCION coma','BRAZO',5,'p_brazo','parser.py',296),
  ('CONJEXP -> CONJEXP bvertical EXPRESION','CONJEXP',3,'p_conj_exp_match_list','parser.py',303),
  ('CONJEXP -> EXPRESION','CONJEXP',1,'p_conj_exp_match_exp','parser.py',307),
  ('BLOQUE_INST -> llavea INSTRUCCIONES llavec','BLOQUE_INST',3,'p_bloque_instrucciones','parser.py',312),
]
