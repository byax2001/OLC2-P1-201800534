
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftorleftandleftigualigualdiferentemenormenorigualmayormayorigualleftmenosmasleftmultidivmodrightnotrightUNARIOVec abs ampersand and as bool break bvertical cadena capacity caracter char chars clone coma contains continue cora corc decimal diferente div dospuntos else entero f64 false fn for guionbajo i64 id if igual igualigual in insert len let llavea llavec loop mas match mayor mayorigual menor menorigual menos mod modulo multi mut new not or para parc pow powf println pub punto puntoycoma push remove return sqrt str string struct toOwned toString true usize vecI while withcapacity\n    INICIO : INSTRUCCIONES_RUST\n    INSTRUCCIONES_RUST : INSTRUCCIONES_RUST INST_RUSTINSTRUCCIONES_RUST : INST_RUSTINST_RUST : MODULO\n                 | FUNCION\n    INSTRUCCIONES : INSTRUCCIONES INSTRUCCION puntoycoma\n    \n    INSTRUCCIONES : INSTRUCCION puntoycoma\n    \n    INSTRUCCION : PRINT\n        | DECLARACION\n        | ASIGNACION\n        | IF\n        | MATCH\n        | CONTINUE\n        | RETURN\n        | BREAK\n        | WHILE\n        | EXPRESION\n        | FUNCION\n        | DECVECTOR\n        | PUSH\n        | INSERT\n        | DECARREGLO\n        | FORIN\n        | STRUCT\n        | DECSTRUCT\n        | MOD_VAR_STRUCT\n        | MODULO\n    \n    EXPRESION : EXPRESION mas EXPRESION \n            |   EXPRESION menos EXPRESION\n            |   EXPRESION div EXPRESION\n            |   EXPRESION multi EXPRESION\n            |   EXPRESION mod EXPRESION  \n            |   i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc\n            |   f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc\n    \n    EXPRESION : menos EXPRESION %prec UNARIO\n    \n    EXPRESION :  EXPRESION mayor EXPRESION\n            |   EXPRESION menor EXPRESION\n            |   EXPRESION mayorigual EXPRESION\n            |   EXPRESION menorigual EXPRESION\n            |   EXPRESION igualigual EXPRESION\n            |   EXPRESION diferente EXPRESION\n    \n    EXPRESION :  EXPRESION and EXPRESION\n            |   EXPRESION or EXPRESION\n    \n    EXPRESION :  not EXPRESION\n    \n    EXPRESION : para EXPRESION parc\n    \n    EXPRESION : TIPODATO\n        | ID\n        | IF_TER\n        | MATCH_TER\n        | LOOP\n        | CAST_AS\n        | ABS\n        | CLONE\n        | SQRT\n        | TO_STRING_OWNED\n        | CALL\n        | REMOVE\n        | CONTAINS\n        | LEN\n        | CAPACITY\n        | ACCESVEC\n        | ACCESO_STRUCT\n        | ACCESO_MOD\n    CONJEXP : CONJEXP coma ELCONJCONJEXP : ELCONJELCONJ : EXPRESION\n            | VECI\n            | ARREGLO\n            | ampersand mut EXPRESION\n    TIPODATO : entero\n        | decimal\n        | cadena\n        | true\n        | false\n    \n    ID : id\n    \n    TIPODATO : caracter\n    \n    TIPOVAR : i64\n        | f64\n        | bool\n        | string\n        | char\n        | str\n        | usize\n    \n    IF_TER : if  EXPRESION  llavea EXPRESION llavec\n    \n    IF_TER : if  EXPRESION  llavea EXPRESION llavec else llavea EXPRESION llavec\n    \n    IF_TER : if EXPRESION  llavea EXPRESION llavec else IF_TER\n    \n    MATCH_TER : match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec\n        |  match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec\n    \n    BRAZOS_TER : BRAZOS_TER BRAZO_TER\n    \n    BRAZOS_TER : BRAZO_TER\n    \n    BRAZO_TER : CONJEXPM igual mayor EXPRESION coma\n    CAST_AS : EXPRESION as TIPOVARABS : EXPRESION punto abs para parcABS : id punto abs para parcCLONE : EXPRESION punto clone para parcCLONE : id punto clone para parcSQRT : para CAST_AS parc punto sqrt para parcSQRT : id punto sqrt para parcTO_STRING_OWNED : EXPRESION punto toString para parc\n        | EXPRESION punto toOwned para parc\n    TO_STRING_OWNED : id punto toString para parc\n        | id punto toOwned para parc\n    PRINT : println para EXPRESION parc\n        | println para EXPRESION coma CONJEXP parc\n    \n    DECLARACION : let mut id dospuntos TIPOVAR igual EXPRESION\n                | let mut id igual EXPRESION\n    \n    DECLARACION : let id dospuntos TIPOVAR igual EXPRESION\n                | let id igual EXPRESION\n    \n    DECLARACION : let mut id dospuntos TIPOVAR\n    \n    ASIGNACION : id igual EXPRESION\n        | id INDEXS igual EXPRESION \n        | id INDEXS punto CONJ_ACCES igual EXPRESION  \n    \n    IF : if  EXPRESION  BLOQUE_INST\n    \n    IF : if  EXPRESION  BLOQUE_INST else BLOQUE_INST\n    \n    IF : if EXPRESION  BLOQUE_INST else IF\n    \n    MATCH : match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec\n        | match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec\n    \n    MATCH : match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION coma llavec\n        |  match EXPRESION llavea guionbajo igual mayor INSTRUCCION coma llavec\n    \n    BRAZOS : BRAZOS BRAZO\n    \n    BRAZOS : BRAZO\n    \n    BRAZO : CONJEXPM igual mayor BLOQUE_INST\n        | CONJEXPM igual mayor INSTRUCCION coma\n    CONJEXPM : CONJEXPM bvertical EXPRESIONCONJEXPM : EXPRESIONLOOP : loop BLOQUE_INSTBREAK : breakBREAK : break EXPRESIONCONTINUE : continueRETURN : return EXPRESIONRETURN : returnWHILE : while EXPRESION BLOQUE_INST\n    BLOQUE_INST : llavea  INSTRUCCIONES llavec\n    \n    FUNCION : fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST\n        | fn id para LISTAPARAMETROS parc BLOQUE_INST\n    \n    FUNCION : fn id para  parc menos mayor TIPOVAR BLOQUE_INST\n        | fn id para  parc BLOQUE_INST\n    \n    FUNCION : fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST\n            | fn id para LISTAPARAMETROS parc menos mayor Vec menor id mayor BLOQUE_INST\n            | fn id para LISTAPARAMETROS parc menos mayor Vec menor TIPOVAR mayor BLOQUE_INST\n    LISTAPARAMETROS : LISTAPARAMETROS coma PARAMETROLISTAPARAMETROS : PARAMETROPARAMETRO : id dospuntos TIPOVAR\n                | mut id dospuntos TIPOVAR\n    PARAMETRO :    id dospuntos ampersand mut cora TIPOVAR corc\n                    | id dospuntos ampersand mut Vec menor TIPOVAR mayor\n                    | id dospuntos ampersand mut DIMENSION_ARR\n        PARAMETRO : id dospuntos Vec menor TIPOVAR mayor\n            | id dospuntos Vec menor id mayor\n            | mut id dospuntos Vec menor TIPOVAR mayor\n            | mut id dospuntos Vec menor id mayor\n    CALL : id para CONJEXP parc\n        | id para parc\n    \n    DECVECTOR : let id igual VECI\n        | let mut id igual VECI\n    DECVECTOR : let id dospuntos Vec menor TIPOVAR mayor igual Vec dospuntos dospuntos FUNCVEC\n                | let mut id dospuntos Vec menor TIPOVAR mayor igual Vec dospuntos dospuntos FUNCVECVECI : vecI cora CONJVECI  corc\n            | vecI cora EXPRESION puntoycoma EXPRESION corc CONJVECI : CONJVECI  coma ELVECCONJVECI : ELVECELVEC : EXPRESION\n            | VECIFUNCVEC : new para parc\n            | withcapacity para EXPRESION parc PUSH : id punto push para EXPRESION parcINSERT : id punto insert para EXPRESION coma EXPRESION parc REMOVE : id punto remove para EXPRESION parcCONTAINS : id punto contains para ampersand EXPRESION parcLEN : id punto len para parc CAPACITY : id punto capacity para parcACCESVEC : id INDEXS\n                | id INDEXS punto CONJ_ACCESINDEXS : INDEXS cora EXPRESION corcINDEXS : cora EXPRESION corcDECARREGLO : let id dospuntos DIMENSION_ARR igual ARREGLO\n                | let mut id dospuntos DIMENSION_ARR igual ARREGLO DECARREGLO : let id igual ARREGLO\n                | let mut id igual ARREGLODIMENSION_ARR : cora DIMENSION_ARR puntoycoma EXPRESION corc DIMENSION_ARR : cora TIPOVAR puntoycoma EXPRESION corc\n                    | cora id puntoycoma EXPRESION corcARREGLO : cora CONT_ARR corcARREGLO : cora EXPRESION puntoycoma EXPRESION corcCONT_ARR : CONT_ARR coma ELARRCONT_ARR : ELARRELARR : ARREGLO\n            | EXPRESION\n            | STRUCT_EXPFORIN : for id in ARRFOR BLOQUE_INSTARRFOR : CHARS\n            | ARREGLO\n            | VECI  \n            | RANGOCHARS : EXPRESION punto chars para parcCHARS : id punto chars para parcRANGO : EXPRESION punto punto EXPRESIONSTRUCT : struct id llavea CONTENT_STRUCT llavecCONTENT_STRUCT : CONTENT_STRUCT coma ELSTRUCTCONTENT_STRUCT : ELSTRUCTELSTRUCT : id dospuntos TIPOVARDECSTRUCT : let id igual STRUCT_EXP\n                    | let mut id igual STRUCT_EXPDECSTRUCT : let id dospuntos id igual STRUCT_EXP\n                    | let mut id dospuntos id igual STRUCT_EXPSTRUCT_EXP : id llavea CONJEXP_STRUCT llavecCONJEXP_STRUCT : CONJEXP_STRUCT coma EXSTRUCTCONJEXP_STRUCT : EXSTRUCTEXSTRUCT : id dospuntos EXPRESIONACCESO_STRUCT  : id  punto  CONJ_ACCESCONJ_ACCES  : CONJ_ACCES punto idCONJ_ACCES : idMOD_VAR_STRUCT : id punto CONJ_ACCES igual EXPRESIONMODULO : modulo id llavea CONTENT_MOD llavec CONTENT_MOD : CONTENT_MOD ELEMENT_MODCONTENT_MOD : ELEMENT_MODELEMENT_MOD : pub INST_MOD\n                | INST_MODINST_MOD : FUNCION\n                | MODULO\n                | STRUCT\n                | DECLARACION\n                | DECARREGLO\n                | DECVECTOR\n                | DECSTRUCT\n    ACCESO_MOD : id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc\n                | id dospuntos dospuntos CONJ_ACCES_MOD para parcCONJ_ACCES_MOD : CONJ_ACCES_MOD dospuntos dospuntos idCONJ_ACCES_MOD : id'
    
_lr_action_items = {'modulo':([0,2,3,4,5,8,11,13,14,15,16,17,18,19,20,21,22,23,31,32,33,41,42,51,52,53,54,55,56,57,59,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,150,169,183,186,188,192,195,198,199,200,201,211,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,282,296,297,298,306,308,321,322,349,354,378,379,380,387,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,472,476,484,486,495,498,499,500,502,504,506,510,511,546,547,548,551,554,555,557,563,564,567,569,],[6,6,-3,-4,-5,-2,6,6,-216,6,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,6,-77,-78,-79,-80,-81,-82,-83,-135,6,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,-7,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-6,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,6,-204,-107,-176,-210,-183,-138,-134,-152,-175,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-168,-227,6,6,-159,-139,-140,-97,-169,-226,-86,6,6,-85,6,6,-88,-33,-34,-156,-87,-157,-164,-165,]),'fn':([0,2,3,4,5,8,11,13,14,15,16,17,18,19,20,21,22,23,31,32,33,41,42,51,52,53,54,55,56,57,59,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,150,169,183,186,188,192,195,198,199,200,201,211,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,282,296,297,298,306,308,321,322,349,354,378,379,380,387,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,472,476,484,486,495,498,499,500,502,504,506,510,511,546,547,548,551,554,555,557,563,564,567,569,],[7,7,-3,-4,-5,-2,7,7,-216,7,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,7,-77,-78,-79,-80,-81,-82,-83,-135,7,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,-7,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-6,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,7,-204,-107,-176,-210,-183,-138,-134,-152,-175,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-168,-227,7,7,-159,-139,-140,-97,-169,-226,-86,7,7,-85,7,7,-88,-33,-34,-156,-87,-157,-164,-165,]),'$end':([1,2,3,4,5,8,31,41,59,148,229,321,322,498,499,],[0,-1,-3,-4,-5,-2,-214,-137,-135,-133,-136,-138,-134,-139,-140,]),'id':([6,7,12,24,25,30,35,39,42,44,46,47,62,85,86,88,89,91,92,93,94,97,116,128,129,134,140,142,143,145,146,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,170,172,174,175,177,193,202,203,209,210,218,221,230,253,254,256,257,258,279,282,283,287,288,291,292,300,301,302,307,309,310,315,316,323,329,331,332,336,337,338,339,345,350,351,356,359,361,363,364,365,386,388,394,395,409,421,427,428,433,437,441,443,444,445,446,471,474,480,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[9,10,26,34,36,43,45,26,87,125,130,135,87,169,171,169,169,169,169,169,169,169,187,194,135,208,217,169,169,224,226,-133,-7,169,169,169,169,169,169,169,169,169,169,169,169,169,169,252,169,259,169,169,125,295,169,303,259,169,208,-6,130,135,169,259,169,352,358,169,369,376,295,169,169,169,169,259,135,169,169,169,401,169,194,135,169,169,413,169,169,169,169,169,169,169,169,-121,-90,169,303,169,169,169,169,169,169,259,-120,-89,169,169,169,259,169,503,259,169,87,87,169,169,169,169,87,87,169,-122,169,169,-123,-91,358,358,169,]),'llavea':([9,28,34,38,51,52,53,54,55,56,57,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,135,147,148,169,178,179,182,183,186,188,211,217,219,220,226,227,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,295,306,308,349,354,355,370,371,372,373,374,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,431,432,435,458,465,466,472,476,477,478,484,486,495,500,502,504,506,510,511,522,542,543,546,547,548,551,554,555,563,],[11,42,44,42,-77,-78,-79,-80,-81,-82,-83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,42,209,42,-133,-75,282,283,42,-35,-44,-126,-172,209,315,316,42,42,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,209,-210,-183,-152,-175,42,42,-191,-192,-193,-194,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,282,-84,481,-184,42,42,-168,-227,42,505,42,42,-159,-97,-169,-226,-86,42,42,-197,-196,-195,-85,42,42,-88,-33,-34,-87,]),'para':([10,42,47,62,84,85,87,88,89,91,92,93,94,97,129,135,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,169,172,175,177,203,217,218,230,245,246,247,248,254,256,258,260,261,263,264,265,266,267,268,269,270,271,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,352,353,356,358,359,361,363,364,365,367,368,369,386,394,395,408,409,421,427,428,437,441,443,444,445,471,481,484,486,490,491,492,496,497,503,505,510,511,515,516,519,520,538,539,547,548,558,559,566,],[12,85,85,85,166,85,175,85,85,85,85,85,85,85,85,175,85,85,85,-133,-7,85,85,85,85,85,85,85,85,85,85,85,85,85,85,175,85,85,85,85,175,85,-6,324,325,326,327,85,85,85,336,337,340,341,342,343,344,345,346,347,348,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-229,427,85,175,85,85,85,-121,-90,444,445,175,85,85,85,468,85,85,85,85,-120,-89,85,85,85,85,85,85,85,521,85,523,85,85,-228,85,85,85,85,-122,85,85,-123,-91,85,85,565,566,85,]),'pub':([11,13,14,16,17,18,19,20,21,22,23,31,32,33,41,51,52,53,54,55,56,57,59,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,169,183,186,188,192,195,198,199,200,201,211,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,296,297,298,306,308,321,322,349,354,378,379,380,387,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,472,476,495,498,499,500,502,504,506,546,551,554,555,557,563,564,567,569,],[15,15,-216,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,-77,-78,-79,-80,-81,-82,-83,-135,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,-204,-107,-176,-210,-183,-138,-134,-152,-175,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-168,-227,-159,-139,-140,-97,-169,-226,-86,-85,-88,-33,-34,-156,-87,-157,-164,-165,]),'struct':([11,13,14,15,16,17,18,19,20,21,22,23,31,32,33,41,42,51,52,53,54,55,56,57,59,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,150,169,183,186,188,192,195,198,199,200,201,211,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,282,296,297,298,306,308,321,322,349,354,378,379,380,387,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,472,476,484,486,495,498,499,500,502,504,506,510,511,546,547,548,551,554,555,557,563,564,567,569,],[24,24,-216,24,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,24,-77,-78,-79,-80,-81,-82,-83,-135,24,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,-7,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-6,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,24,-204,-107,-176,-210,-183,-138,-134,-152,-175,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-168,-227,24,24,-159,-139,-140,-97,-169,-226,-86,24,24,-85,24,24,-88,-33,-34,-156,-87,-157,-164,-165,]),'let':([11,13,14,15,16,17,18,19,20,21,22,23,31,32,33,41,42,51,52,53,54,55,56,57,59,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,150,169,183,186,188,192,195,198,199,200,201,211,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,282,296,297,298,306,308,321,322,349,354,378,379,380,387,389,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,472,476,484,486,495,498,499,500,502,504,506,510,511,546,547,548,551,554,555,557,563,564,567,569,],[25,25,-216,25,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,86,-77,-78,-79,-80,-81,-82,-83,-135,86,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,-7,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-6,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,86,-204,-107,-176,-210,-183,-138,-134,-152,-175,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-168,-227,86,86,-159,-139,-140,-97,-169,-226,-86,86,86,-85,86,86,-88,-33,-34,-156,-87,-157,-164,-165,]),'parc':([12,27,29,48,51,52,53,54,55,56,57,60,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,148,167,168,169,175,183,186,188,189,211,223,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,259,272,273,274,275,276,277,306,308,319,320,324,325,326,327,340,341,342,343,344,347,348,349,354,389,393,399,403,404,405,406,407,410,411,413,415,416,417,418,419,420,422,423,424,425,427,432,449,450,453,454,455,458,464,468,472,473,475,476,495,500,501,502,504,506,521,523,540,541,546,551,554,555,563,565,568,],[28,38,-142,-143,-77,-78,-79,-80,-81,-82,-83,-141,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-133,250,251,-75,273,-35,-44,-126,-144,-172,-147,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,328,-45,-212,349,-153,-65,-66,-67,-68,-210,-183,-149,-148,403,404,405,406,415,416,417,418,419,422,423,-152,-175,-173,-158,-145,-93,-95,-99,-100,467,-174,470,-211,-94,-96,-98,-101,-102,472,-170,-171,-64,-69,476,-84,-151,-150,-180,-181,-182,-184,-146,500,-168,502,504,-227,-159,-97,528,-169,-226,-86,542,543,554,555,-85,-88,-33,-34,-87,567,569,]),'mut':([12,25,39,49,86,278,],[30,35,30,144,170,351,]),'llavec':([13,14,16,17,18,19,20,21,22,23,31,32,33,41,51,52,53,54,55,56,57,59,62,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,126,127,135,136,137,138,139,148,150,169,183,186,188,192,195,198,199,200,201,211,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,289,290,296,297,298,304,305,306,308,321,322,349,354,357,358,378,379,380,387,389,393,396,403,404,405,406,410,413,415,416,417,418,419,422,423,432,434,456,457,458,472,476,479,495,498,499,500,502,504,506,507,513,529,532,534,536,546,550,551,553,554,555,557,563,564,567,569,],[31,-216,-218,-219,-220,-221,-222,-223,-224,-225,-214,-215,-217,-137,-77,-78,-79,-80,-81,-82,-83,-135,148,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,192,-200,-75,-108,-178,-154,-202,-133,-7,-75,-35,-44,-126,-198,-109,-106,-179,-155,-203,-172,-136,-6,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,-201,-199,-204,-107,-176,387,-208,-210,-183,-138,-134,-152,-175,432,-75,-205,-105,-177,-206,-173,-158,432,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-172,-209,-207,-184,-168,-227,-210,-159,-139,-140,-97,-169,-226,-86,-173,535,546,549,551,552,-85,562,-88,563,-33,-34,-156,-87,-157,-164,-165,]),'dospuntos':([26,36,43,45,87,95,96,125,135,169,171,176,184,185,217,252,303,352,353,358,369,426,494,503,524,525,544,],[37,46,124,128,176,184,185,191,176,176,253,279,285,286,176,331,386,-229,426,176,176,474,525,-228,544,545,556,]),'coma':([27,29,31,41,48,51,52,53,54,55,56,57,59,60,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,126,127,135,136,137,138,139,148,169,173,180,181,183,186,188,189,192,195,198,199,200,201,211,212,213,214,215,216,217,223,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,272,273,274,275,276,277,281,284,289,290,296,297,298,304,305,306,308,311,312,313,314,319,320,321,322,328,333,334,349,354,358,378,379,380,387,389,390,391,393,399,403,404,405,406,407,410,412,413,414,415,416,417,418,419,422,423,424,425,429,430,432,434,447,449,450,453,454,455,456,457,458,459,460,464,467,469,470,472,475,476,479,488,489,495,498,499,500,502,504,506,507,512,514,517,518,526,527,528,533,535,537,546,549,551,552,554,555,557,560,561,562,563,564,567,569,],[39,-142,-214,-137,-143,-77,-78,-79,-80,-81,-82,-83,-135,-141,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-75,-129,-131,-127,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,193,-200,-75,-108,-178,-154,-202,-133,-75,-172,-130,-128,-35,-44,-126,-144,-198,-109,-106,-179,-155,-203,-172,309,-188,-186,-187,-189,-75,-147,-136,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,329,-45,-110,-212,-210,350,-153,-65,-66,-67,-68,-113,-132,-201,-199,-204,-107,-176,388,-208,-210,-183,394,-162,-161,-163,-149,-148,-138,-134,-103,-111,-173,-152,-175,-75,-205,-105,-177,-206,-173,-185,-188,-158,-145,-93,-95,-99,-100,350,-174,471,-211,-213,-94,-96,-98,-101,-102,-170,-171,-64,-69,-114,-115,-84,-172,-190,-151,-150,-180,-181,-182,-209,-207,-184,-160,-162,-146,-104,-112,-166,-168,350,-227,-210,519,520,-159,-139,-140,-97,-169,-226,-86,-173,534,536,538,539,534,539,-167,550,-117,553,-85,-116,-88,-119,-33,-34,-156,534,539,-118,-87,-157,-164,-165,]),'menos':([28,38,42,47,51,52,53,54,55,56,57,62,73,85,87,88,89,91,92,93,94,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,129,135,136,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,167,168,169,172,173,175,177,178,179,180,181,182,183,186,188,198,203,211,213,217,218,219,220,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,254,255,256,258,259,262,273,275,280,282,283,287,292,297,300,301,302,306,309,310,312,315,316,329,332,333,334,335,336,337,339,345,349,350,351,354,356,357,358,359,360,361,363,364,365,369,375,379,383,384,385,386,389,391,392,394,395,396,403,404,405,406,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,425,427,428,431,432,434,435,437,441,443,444,445,456,460,461,469,471,472,473,476,477,479,481,484,486,487,488,489,491,496,497,500,501,502,504,505,506,507,510,511,512,515,516,518,519,520,522,526,527,529,537,538,539,540,541,546,547,548,551,554,555,560,561,563,566,568,],[40,58,94,94,-77,-78,-79,-80,-81,-82,-83,94,152,94,-75,94,94,94,94,94,94,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,94,-75,152,94,94,94,-133,-7,94,94,94,94,94,94,94,94,94,94,94,94,94,94,152,-51,-75,94,-172,94,94,152,152,152,152,152,-35,-44,-126,152,94,-172,152,-75,94,152,152,-6,-28,-29,-30,-31,-32,152,152,152,152,152,152,152,152,-92,152,-45,94,152,94,94,-212,-210,-153,152,152,94,94,94,94,152,94,94,94,-210,94,94,152,94,94,94,94,152,-173,152,94,94,94,94,-152,94,94,-175,94,152,-75,94,152,94,94,-121,-90,-75,152,152,152,152,152,94,-173,152,152,94,94,152,-93,-95,-99,-100,94,-174,152,152,-211,152,-94,-96,-98,-101,-102,152,94,-170,-171,152,94,94,152,-84,-172,152,-120,-89,94,94,94,152,152,152,152,94,-168,152,-227,152,-210,94,94,94,152,152,152,94,94,94,-97,152,-169,-226,94,-86,-173,94,94,152,94,-122,152,94,94,152,152,152,152,152,-123,-91,152,152,-85,94,94,-88,-33,-34,152,152,-87,94,152,]),'puntoycoma':([31,41,51,52,53,54,55,56,57,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,137,138,139,148,149,169,173,180,181,183,186,188,192,195,198,199,200,201,206,207,208,211,213,217,229,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,255,259,262,273,281,284,296,297,298,306,308,312,317,321,322,328,333,334,349,354,357,358,378,379,380,387,389,393,403,404,405,406,410,413,414,415,416,417,418,419,422,423,429,430,432,434,447,453,454,455,458,467,469,470,472,476,479,495,498,499,500,502,504,506,507,528,535,546,549,551,552,554,555,557,562,563,564,567,569,],[-214,-137,-77,-78,-79,-80,-81,-82,-83,-135,150,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-75,-129,-131,-127,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-108,-178,-154,-202,-133,230,-75,-172,-130,-128,-35,-44,-126,-198,-109,-106,-179,-155,-203,300,301,302,-172,310,-75,-136,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-110,-212,-210,-153,-113,-132,-204,-107,-176,-210,-183,395,301,-138,-134,-103,-111,-173,-152,-175,-17,-75,-205,-105,-177,-206,-173,-158,-93,-95,-99,-100,-174,-211,-213,-94,-96,-98,-101,-102,-170,-171,-114,-115,-84,-172,-190,-180,-181,-182,-184,-104,-112,-166,-168,-227,-210,-159,-139,-140,-97,-169,-226,-86,-173,-167,-117,-85,-116,-88,-119,-33,-34,-156,-118,-87,-157,-164,-165,]),'igual':([36,45,51,52,53,54,55,56,57,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,130,131,132,148,169,171,173,183,186,188,194,195,196,211,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,252,259,262,273,306,334,349,354,358,360,362,366,382,389,397,398,403,404,405,406,410,413,415,416,417,418,419,422,423,432,434,436,438,440,451,453,454,455,472,476,479,487,500,502,504,506,507,508,509,546,551,554,555,563,],[47,129,-77,-78,-79,-80,-81,-82,-83,172,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,202,203,204,-133,-75,254,256,-35,-44,-126,291,292,293,-172,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,332,-212,339,-153,-210,409,-152,-175,172,-125,439,442,452,-173,462,463,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,256,482,483,485,493,-180,-181,-182,-168,-227,339,-124,-97,-169,-226,-86,409,530,531,-85,-88,-33,-34,-87,]),'ampersand':([37,175,329,346,350,427,],[49,278,278,421,278,278,]),'Vec':([37,46,124,128,144,146,253,331,452,493,],[50,133,190,197,222,228,133,197,494,524,]),'i64':([37,42,46,47,61,62,85,88,89,91,92,93,94,97,124,128,129,134,140,142,143,145,146,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,172,175,177,191,203,205,218,221,230,253,254,256,258,282,283,287,288,292,294,300,301,302,309,310,315,316,318,323,329,331,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[51,95,51,95,51,95,95,95,95,95,95,95,95,95,51,51,95,51,95,95,95,51,51,-133,-7,95,95,95,95,95,95,95,95,95,95,95,95,95,51,95,95,95,95,51,95,51,95,51,-6,51,95,95,95,95,95,95,51,95,51,95,95,95,95,95,95,95,51,51,95,51,95,95,95,95,95,95,95,95,95,95,95,-121,-90,95,95,95,95,95,95,95,-120,-89,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-122,95,95,-123,-91,95,95,95,]),'f64':([37,42,46,47,61,62,85,88,89,91,92,93,94,97,124,128,129,134,140,142,143,145,146,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,172,175,177,191,203,205,218,221,230,253,254,256,258,282,283,287,288,292,294,300,301,302,309,310,315,316,318,323,329,331,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[52,96,52,96,52,96,96,96,96,96,96,96,96,96,52,52,96,52,96,96,96,52,52,-133,-7,96,96,96,96,96,96,96,96,96,96,96,96,96,52,96,96,96,96,52,96,52,96,52,-6,52,96,96,96,96,96,96,52,96,52,96,96,96,96,96,96,96,52,52,96,52,96,96,96,96,96,96,96,96,96,96,96,-121,-90,96,96,96,96,96,96,96,-120,-89,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-122,96,96,-123,-91,96,96,96,]),'bool':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'string':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'char':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'str':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'usize':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'mayor':([40,51,52,53,54,55,56,57,58,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,224,225,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,299,306,312,333,334,335,349,354,357,358,360,369,375,376,377,379,381,383,384,385,389,391,392,396,400,401,402,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,439,442,456,460,461,462,463,469,472,473,476,477,479,482,483,485,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,530,531,537,540,541,546,551,554,555,560,561,563,568,],[61,-77,-78,-79,-80,-81,-82,-83,146,156,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,156,-133,156,-51,-75,-172,156,156,156,156,156,-35,-44,-126,156,-172,156,-75,156,156,319,320,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,156,156,-92,156,-45,156,-212,-210,-153,156,156,156,382,-210,156,156,-173,156,-152,-175,156,-75,156,-75,156,449,450,156,451,156,156,156,-173,156,156,156,464,465,466,-93,-95,-99,-100,-174,156,156,-211,156,-94,-96,-98,-101,-102,156,-170,-171,156,156,-84,-172,156,484,486,156,156,156,496,497,156,-168,156,-227,156,-210,510,511,515,156,156,156,-97,156,-169,-226,-86,-173,156,156,156,156,156,156,547,548,156,156,156,-85,-88,-33,-34,156,156,-87,156,]),'println':([42,62,150,230,282,484,486,510,511,547,548,],[84,84,-7,-6,84,84,84,84,84,84,84,]),'if':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,355,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,478,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[88,142,88,142,142,142,142,142,142,142,142,142,142,142,142,-133,-7,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,-6,142,142,142,356,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,428,142,142,142,142,-121,-90,142,142,142,142,142,142,142,-120,-89,142,142,142,142,142,142,88,88,142,142,142,142,88,88,142,-122,142,142,-123,-91,356,356,142,]),'match':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[89,143,89,143,143,143,143,143,143,143,143,143,143,143,143,-133,-7,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-6,143,143,143,359,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,-121,-90,143,143,143,143,143,143,143,-120,-89,143,143,143,143,143,89,89,143,143,143,143,89,89,143,-122,143,143,-123,-91,359,359,143,]),'continue':([42,62,150,230,282,484,486,510,511,547,548,],[90,90,-7,-6,90,90,90,90,90,90,90,]),'return':([42,62,150,230,282,484,486,510,511,547,548,],[91,91,-7,-6,91,91,91,91,91,91,91,]),'break':([42,62,150,230,282,484,486,510,511,547,548,],[92,92,-7,-6,92,92,92,92,92,92,92,]),'while':([42,62,150,230,282,484,486,510,511,547,548,],[93,93,-7,-6,93,93,93,93,93,93,93,]),'not':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-133,-7,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-6,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-121,-90,97,97,97,97,97,97,97,-120,-89,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-122,97,97,-123,-91,97,97,97,]),'for':([42,62,150,230,282,484,486,510,511,547,548,],[116,116,-7,-6,116,116,116,116,116,116,116,]),'entero':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-133,-7,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-6,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-121,-90,117,117,117,117,117,117,117,-120,-89,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-122,117,117,-123,-91,117,117,117,]),'decimal':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-133,-7,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-6,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-121,-90,118,118,118,118,118,118,118,-120,-89,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-122,118,118,-123,-91,118,118,118,]),'cadena':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-133,-7,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-6,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-121,-90,119,119,119,119,119,119,119,-120,-89,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-122,119,119,-123,-91,119,119,119,]),'true':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-133,-7,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-6,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-121,-90,120,120,120,120,120,120,120,-120,-89,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-122,120,120,-123,-91,120,120,120,]),'false':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-133,-7,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-6,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-121,-90,121,121,121,121,121,121,121,-120,-89,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-122,121,121,-123,-91,121,121,121,]),'caracter':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-133,-7,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-6,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-121,-90,122,122,122,122,122,122,122,-120,-89,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-122,122,122,-123,-91,122,122,122,]),'loop':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,230,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,364,365,386,394,395,409,421,427,428,437,441,443,444,445,471,481,484,486,491,496,497,505,510,511,515,516,519,520,538,539,547,548,566,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-133,-7,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-6,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-121,-90,123,123,123,123,123,123,123,-120,-89,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-122,123,123,-123,-91,123,123,123,]),'cora':([46,47,87,128,129,134,135,140,141,144,169,173,175,204,211,217,221,253,254,287,293,309,329,331,332,350,354,358,369,410,427,434,],[134,140,177,134,140,134,177,140,218,221,177,258,140,140,258,177,134,134,140,140,140,140,140,134,140,140,-175,177,177,-174,140,258,]),'vecI':([47,129,175,218,254,287,329,332,350,394,427,],[141,141,141,141,141,141,141,141,141,141,141,]),'menor':([50,51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,133,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,190,197,198,211,213,217,219,220,222,228,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[145,-77,-78,-79,-80,-81,-82,-83,157,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,205,-75,157,-133,157,-51,-75,-172,157,157,157,157,157,-35,-44,-126,288,294,157,-172,157,-75,157,157,318,323,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,157,157,-92,157,-45,157,-212,-210,-153,157,157,157,-210,157,157,-173,157,-152,-175,157,-75,157,-75,157,157,157,157,157,-173,157,157,157,-93,-95,-99,-100,-174,157,157,-211,157,-94,-96,-98,-101,-102,157,-170,-171,157,157,-84,-172,157,157,157,157,157,-168,157,-227,157,-210,157,157,157,-97,157,-169,-226,-86,-173,157,157,157,157,157,157,157,157,157,-85,-88,-33,-34,157,157,-87,157,]),'mas':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,151,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,151,-133,151,-51,-75,-172,151,151,151,151,151,-35,-44,-126,151,-172,151,-75,151,151,-28,-29,-30,-31,-32,151,151,151,151,151,151,151,151,-92,151,-45,151,-212,-210,-153,151,151,151,-210,151,151,-173,151,-152,-175,151,-75,151,-75,151,151,151,151,151,-173,151,151,151,-93,-95,-99,-100,-174,151,151,-211,151,-94,-96,-98,-101,-102,151,-170,-171,151,151,-84,-172,151,151,151,151,151,-168,151,-227,151,-210,151,151,151,-97,151,-169,-226,-86,-173,151,151,151,151,151,151,151,151,151,-85,-88,-33,-34,151,151,-87,151,]),'div':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,153,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,153,-133,153,-51,-75,-172,153,153,153,153,153,-35,-44,-126,153,-172,153,-75,153,153,153,153,-30,-31,-32,153,153,153,153,153,153,153,153,-92,153,-45,153,-212,-210,-153,153,153,153,-210,153,153,-173,153,-152,-175,153,-75,153,-75,153,153,153,153,153,-173,153,153,153,-93,-95,-99,-100,-174,153,153,-211,153,-94,-96,-98,-101,-102,153,-170,-171,153,153,-84,-172,153,153,153,153,153,-168,153,-227,153,-210,153,153,153,-97,153,-169,-226,-86,-173,153,153,153,153,153,153,153,153,153,-85,-88,-33,-34,153,153,-87,153,]),'multi':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,154,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,154,-133,154,-51,-75,-172,154,154,154,154,154,-35,-44,-126,154,-172,154,-75,154,154,154,154,-30,-31,-32,154,154,154,154,154,154,154,154,-92,154,-45,154,-212,-210,-153,154,154,154,-210,154,154,-173,154,-152,-175,154,-75,154,-75,154,154,154,154,154,-173,154,154,154,-93,-95,-99,-100,-174,154,154,-211,154,-94,-96,-98,-101,-102,154,-170,-171,154,154,-84,-172,154,154,154,154,154,-168,154,-227,154,-210,154,154,154,-97,154,-169,-226,-86,-173,154,154,154,154,154,154,154,154,154,-85,-88,-33,-34,154,154,-87,154,]),'mod':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,155,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,155,-133,155,-51,-75,-172,155,155,155,155,155,-35,-44,-126,155,-172,155,-75,155,155,155,155,-30,-31,-32,155,155,155,155,155,155,155,155,-92,155,-45,155,-212,-210,-153,155,155,155,-210,155,155,-173,155,-152,-175,155,-75,155,-75,155,155,155,155,155,-173,155,155,155,-93,-95,-99,-100,-174,155,155,-211,155,-94,-96,-98,-101,-102,155,-170,-171,155,155,-84,-172,155,155,155,155,155,-168,155,-227,155,-210,155,155,155,-97,155,-169,-226,-86,-173,155,155,155,155,155,155,155,155,155,-85,-88,-33,-34,155,155,-87,155,]),'mayorigual':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,158,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,158,-133,158,-51,-75,-172,158,158,158,158,158,-35,-44,-126,158,-172,158,-75,158,158,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,158,158,-92,158,-45,158,-212,-210,-153,158,158,158,-210,158,158,-173,158,-152,-175,158,-75,158,-75,158,158,158,158,158,-173,158,158,158,-93,-95,-99,-100,-174,158,158,-211,158,-94,-96,-98,-101,-102,158,-170,-171,158,158,-84,-172,158,158,158,158,158,-168,158,-227,158,-210,158,158,158,-97,158,-169,-226,-86,-173,158,158,158,158,158,158,158,158,158,-85,-88,-33,-34,158,158,-87,158,]),'menorigual':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,159,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,159,-133,159,-51,-75,-172,159,159,159,159,159,-35,-44,-126,159,-172,159,-75,159,159,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,159,159,-92,159,-45,159,-212,-210,-153,159,159,159,-210,159,159,-173,159,-152,-175,159,-75,159,-75,159,159,159,159,159,-173,159,159,159,-93,-95,-99,-100,-174,159,159,-211,159,-94,-96,-98,-101,-102,159,-170,-171,159,159,-84,-172,159,159,159,159,159,-168,159,-227,159,-210,159,159,159,-97,159,-169,-226,-86,-173,159,159,159,159,159,159,159,159,159,-85,-88,-33,-34,159,159,-87,159,]),'igualigual':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,160,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,160,-133,160,-51,-75,-172,160,160,160,160,160,-35,-44,-126,160,-172,160,-75,160,160,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,160,160,-92,160,-45,160,-212,-210,-153,160,160,160,-210,160,160,-173,160,-152,-175,160,-75,160,-75,160,160,160,160,160,-173,160,160,160,-93,-95,-99,-100,-174,160,160,-211,160,-94,-96,-98,-101,-102,160,-170,-171,160,160,-84,-172,160,160,160,160,160,-168,160,-227,160,-210,160,160,160,-97,160,-169,-226,-86,-173,160,160,160,160,160,160,160,160,160,-85,-88,-33,-34,160,160,-87,160,]),'diferente':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,161,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,161,-133,161,-51,-75,-172,161,161,161,161,161,-35,-44,-126,161,-172,161,-75,161,161,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,161,161,-92,161,-45,161,-212,-210,-153,161,161,161,-210,161,161,-173,161,-152,-175,161,-75,161,-75,161,161,161,161,161,-173,161,161,161,-93,-95,-99,-100,-174,161,161,-211,161,-94,-96,-98,-101,-102,161,-170,-171,161,161,-84,-172,161,161,161,161,161,-168,161,-227,161,-210,161,161,161,-97,161,-169,-226,-86,-173,161,161,161,161,161,161,161,161,161,-85,-88,-33,-34,161,161,-87,161,]),'and':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,162,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,162,-133,162,-51,-75,-172,162,162,162,162,162,-35,-44,-126,162,-172,162,-75,162,162,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,162,-92,162,-45,162,-212,-210,-153,162,162,162,-210,162,162,-173,162,-152,-175,162,-75,162,-75,162,162,162,162,162,-173,162,162,162,-93,-95,-99,-100,-174,162,162,-211,162,-94,-96,-98,-101,-102,162,-170,-171,162,162,-84,-172,162,162,162,162,162,-168,162,-227,162,-210,162,162,162,-97,162,-169,-226,-86,-173,162,162,162,162,162,162,162,162,162,-85,-88,-33,-34,162,162,-87,162,]),'or':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,163,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,163,-133,163,-51,-75,-172,163,163,163,163,163,-35,-44,-126,163,-172,163,-75,163,163,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,163,-45,163,-212,-210,-153,163,163,163,-210,163,163,-173,163,-152,-175,163,-75,163,-75,163,163,163,163,163,-173,163,163,163,-93,-95,-99,-100,-174,163,163,-211,163,-94,-96,-98,-101,-102,163,-170,-171,163,163,-84,-172,163,163,163,163,163,-168,163,-227,163,-210,163,163,163,-97,163,-169,-226,-86,-173,163,163,163,163,163,163,163,163,163,-85,-88,-33,-34,163,163,-87,163,]),'as':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,164,-75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,164,-133,164,-51,-75,-172,164,164,164,164,164,-35,-44,-126,164,-172,164,-75,164,164,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,164,-45,164,-212,-210,-153,164,164,164,-210,164,164,-173,164,-152,-175,164,-75,164,-75,164,164,164,164,164,-173,164,164,164,-93,-95,-99,-100,-174,164,164,-211,164,-94,-96,-98,-101,-102,164,-170,-171,164,164,-84,-172,164,164,164,164,164,-168,164,-227,164,-210,164,164,164,-97,164,-169,-226,-86,-173,164,164,164,164,164,164,164,164,164,-85,-88,-33,-34,164,164,-87,164,]),'punto':([51,52,53,54,55,56,57,73,87,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,136,148,167,168,169,173,178,179,180,181,182,183,186,188,198,211,213,217,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,244,249,250,251,255,259,262,273,275,280,297,306,312,333,334,335,349,354,357,358,360,369,375,379,383,384,385,389,391,392,396,403,404,405,406,410,411,412,413,414,415,416,417,418,419,420,422,423,425,431,432,434,435,448,456,460,461,469,472,473,476,477,479,487,488,489,500,501,502,504,506,507,512,518,522,526,527,529,537,540,541,546,551,554,555,560,561,563,568,],[-77,-78,-79,-80,-81,-82,-83,165,174,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,210,165,-133,165,-51,210,257,165,165,165,165,165,-35,-44,-126,165,307,165,210,165,165,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,165,-45,330,165,-212,338,-153,165,165,165,338,165,165,338,165,-152,-175,165,433,165,446,448,165,165,165,165,338,165,165,165,-93,-95,-99,-100,-174,165,165,-211,165,-94,-96,-98,-101,-102,165,-170,-171,165,165,-84,480,165,491,165,165,165,165,-168,165,-227,165,338,165,165,165,-97,165,-169,-226,-86,338,165,165,165,165,165,165,165,165,165,-85,-88,-33,-34,165,165,-87,165,]),'corc':([51,52,53,54,55,56,57,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,135,148,169,183,186,188,211,212,213,214,215,216,217,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,280,306,308,311,312,313,314,317,335,349,354,383,384,385,387,389,390,391,392,393,403,404,405,406,410,413,415,416,417,418,419,422,423,432,458,459,460,461,472,476,495,500,502,504,506,546,551,554,555,563,],[-77,-78,-79,-80,-81,-82,-83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-75,-133,-75,-35,-44,-126,-172,308,-188,-186,-187,-189,-75,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,354,-210,-183,393,-162,-161,-163,399,410,-152,-175,453,454,455,-206,-173,-185,-188,458,-158,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,-184,-160,-162,495,-168,-227,-159,-97,-169,-226,-86,-85,-88,-33,-34,-87,]),'bvertical':([51,52,53,54,55,56,57,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,148,169,183,186,188,211,231,232,233,234,235,236,237,238,239,240,241,242,243,244,250,259,273,306,349,354,360,366,389,398,403,404,405,406,410,413,415,416,417,418,419,422,423,432,438,472,476,487,500,502,504,506,509,546,551,554,555,563,],[-77,-78,-79,-80,-81,-82,-83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-70,-71,-72,-73,-74,-76,-133,-75,-35,-44,-126,-172,-28,-29,-30,-31,-32,-36,-37,-38,-39,-40,-41,-42,-43,-92,-45,-212,-153,-210,-152,-175,-125,443,-173,443,-93,-95,-99,-100,-174,-211,-94,-96,-98,-101,-102,-170,-171,-84,443,-168,-227,-124,-97,-169,-226,-86,443,-85,-88,-33,-34,-87,]),'else':([148,281,432,],[-133,355,478,]),'guionbajo':([148,283,316,361,363,364,365,437,441,481,516,538,539,],[-133,362,397,436,440,-121,-90,-120,-89,508,-122,-123,-91,]),'abs':([165,174,210,433,446,448,],[245,263,263,263,263,245,]),'clone':([165,174,210,433,446,448,],[246,264,264,264,264,246,]),'toString':([165,174,210,433,446,448,],[247,266,266,266,266,247,]),'toOwned':([165,174,210,433,446,448,],[248,267,267,267,267,248,]),'push':([174,433,],[260,260,]),'insert':([174,433,],[261,261,]),'sqrt':([174,210,330,433,446,],[265,265,408,265,265,]),'remove':([174,210,433,446,],[268,268,268,268,]),'contains':([174,210,433,446,],[269,269,269,269,]),'len':([174,210,433,446,],[270,270,270,270,]),'capacity':([174,210,433,446,],[271,271,271,271,]),'in':([187,],[287,]),'pow':([285,],[367,]),'powf':([286,],[368,]),'chars':([446,448,],[490,492,]),'new':([545,556,],[558,558,]),'withcapacity':([545,556,],[559,559,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'INICIO':([0,],[1,]),'INSTRUCCIONES_RUST':([0,],[2,]),'INST_RUST':([0,2,],[3,8,]),'MODULO':([0,2,11,13,15,42,62,282,484,486,510,511,547,548,],[4,4,18,18,18,83,83,83,83,83,83,83,83,83,]),'FUNCION':([0,2,11,13,15,42,62,282,484,486,510,511,547,548,],[5,5,17,17,17,74,74,74,74,74,74,74,74,74,]),'CONTENT_MOD':([11,],[13,]),'ELEMENT_MOD':([11,13,],[14,32,]),'INST_MOD':([11,13,15,],[16,16,33,]),'STRUCT':([11,13,15,42,62,282,484,486,510,511,547,548,],[19,19,19,80,80,80,80,80,80,80,80,80,]),'DECLARACION':([11,13,15,42,62,282,484,486,510,511,547,548,],[20,20,20,65,65,65,65,65,65,65,65,65,]),'DECARREGLO':([11,13,15,42,62,282,484,486,510,511,547,548,],[21,21,21,78,78,78,78,78,78,78,78,78,]),'DECVECTOR':([11,13,15,42,62,282,484,486,510,511,547,548,],[22,22,22,75,75,75,75,75,75,75,75,75,]),'DECSTRUCT':([11,13,15,42,62,282,484,486,510,511,547,548,],[23,23,23,81,81,81,81,81,81,81,81,81,]),'LISTAPARAMETROS':([12,],[27,]),'PARAMETRO':([12,39,],[29,60,]),'BLOQUE_INST':([28,38,123,147,178,182,226,227,355,370,431,465,466,477,484,486,510,511,547,548,],[41,59,188,229,281,284,321,322,429,447,281,498,499,281,513,516,532,516,513,516,]),'TIPOVAR':([37,46,61,124,128,134,145,146,164,191,205,221,253,288,294,318,323,331,],[48,131,147,189,195,207,225,227,244,289,299,317,131,377,381,400,402,195,]),'INSTRUCCIONES':([42,282,],[62,62,]),'INSTRUCCION':([42,62,282,484,486,510,511,547,548,],[63,149,63,514,517,533,517,514,517,]),'PRINT':([42,62,282,484,486,510,511,547,548,],[64,64,64,64,64,64,64,64,64,]),'ASIGNACION':([42,62,282,484,486,510,511,547,548,],[66,66,66,66,66,66,66,66,66,]),'IF':([42,62,282,355,484,486,510,511,547,548,],[67,67,67,430,67,67,67,67,67,67,]),'MATCH':([42,62,282,484,486,510,511,547,548,],[68,68,68,68,68,68,68,68,68,]),'CONTINUE':([42,62,282,484,486,510,511,547,548,],[69,69,69,69,69,69,69,69,69,]),'RETURN':([42,62,282,484,486,510,511,547,548,],[70,70,70,70,70,70,70,70,70,]),'BREAK':([42,62,282,484,486,510,511,547,548,],[71,71,71,71,71,71,71,71,71,]),'WHILE':([42,62,282,484,486,510,511,547,548,],[72,72,72,72,72,72,72,72,72,]),'EXPRESION':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[73,136,73,167,178,179,180,181,182,183,186,198,213,219,220,231,232,233,234,235,236,237,238,239,240,241,242,243,249,255,275,280,297,312,136,333,335,357,360,375,379,383,384,385,391,392,396,360,275,198,411,412,414,420,275,425,431,435,360,360,456,460,461,469,473,275,477,487,488,489,501,360,512,518,522,526,527,529,73,73,537,540,541,560,561,568,]),'PUSH':([42,62,282,484,486,510,511,547,548,],[76,76,76,76,76,76,76,76,76,]),'INSERT':([42,62,282,484,486,510,511,547,548,],[77,77,77,77,77,77,77,77,77,]),'FORIN':([42,62,282,484,486,510,511,547,548,],[79,79,79,79,79,79,79,79,79,]),'MOD_VAR_STRUCT':([42,62,282,484,486,510,511,547,548,],[82,82,82,82,82,82,82,82,82,]),'TIPODATO':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'ID':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'IF_TER':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,478,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,506,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'MATCH_TER':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'LOOP':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'CAST_AS':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[103,103,103,168,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'ABS':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'CLONE':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'SQRT':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'TO_STRING_OWNED':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'CALL':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'REMOVE':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'CONTAINS':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'LEN':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'CAPACITY':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'ACCESVEC':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'ACCESO_STRUCT':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'ACCESO_MOD':([42,47,62,85,88,89,91,92,93,94,97,129,140,142,143,151,152,153,154,155,156,157,158,159,160,161,162,163,166,172,175,177,203,218,254,256,258,282,283,287,292,300,301,302,309,310,315,316,329,332,336,337,339,345,350,351,356,359,361,363,386,394,395,409,421,427,428,443,444,445,471,481,484,486,491,496,497,505,510,511,515,519,520,547,548,566,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'CONTENT_STRUCT':([44,],[126,]),'ELSTRUCT':([44,193,],[127,290,]),'DIMENSION_ARR':([46,128,134,144,221,253,331,],[132,196,206,223,206,132,196,]),'ARREGLO':([47,129,140,175,204,254,287,293,309,329,332,350,427,],[137,199,215,277,298,137,372,380,215,277,199,277,277,]),'VECI':([47,129,175,218,254,287,329,332,350,394,427,],[138,200,276,314,138,373,276,200,276,314,276,]),'STRUCT_EXP':([47,129,140,202,254,291,309,332,],[139,201,216,296,139,378,216,201,]),'INDEXS':([87,135,169,217,358,369,],[173,211,211,211,434,211,]),'CONT_ARR':([140,],[212,]),'ELARR':([140,309,],[214,390,]),'CONJ_ACCES':([174,210,257,307,433,446,480,],[262,306,334,389,479,306,507,]),'CONJEXP':([175,329,427,],[272,407,475,]),'ELCONJ':([175,329,350,427,],[274,274,424,274,]),'CONJEXP_STRUCT':([209,],[304,]),'EXSTRUCT':([209,388,],[305,457,]),'CONJVECI':([218,],[311,]),'ELVEC':([218,394,],[313,459,]),'CONJ_ACCES_MOD':([279,],[353,]),'BRAZOS':([283,481,],[361,361,]),'BRAZOS_TER':([283,316,481,],[363,363,363,]),'BRAZO':([283,361,481,],[364,437,364,]),'BRAZO_TER':([283,316,363,481,],[365,365,441,365,]),'CONJEXPM':([283,316,361,363,481,],[366,398,438,398,509,]),'ARRFOR':([287,],[370,]),'CHARS':([287,],[371,]),'RANGO':([287,],[374,]),'FUNCVEC':([545,556,],[557,564,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> INICIO","S'",1,None,None,None),
  ('INICIO -> INSTRUCCIONES_RUST','INICIO',1,'p_inicio','parser.py',85),
  ('INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST','INSTRUCCIONES_RUST',2,'p_rust_inst_lista','parser.py',89),
  ('INSTRUCCIONES_RUST -> INST_RUST','INSTRUCCIONES_RUST',1,'p_rust_inst_instruccion','parser.py',94),
  ('INST_RUST -> MODULO','INST_RUST',1,'p_rust_inst','parser.py',97),
  ('INST_RUST -> FUNCION','INST_RUST',1,'p_rust_inst','parser.py',98),
  ('INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION puntoycoma','INSTRUCCIONES',3,'p_instrucciones_lista','parser.py',103),
  ('INSTRUCCIONES -> INSTRUCCION puntoycoma','INSTRUCCIONES',2,'p_instrucciones_instruccion','parser.py',110),
  ('INSTRUCCION -> PRINT','INSTRUCCION',1,'p_instruccion','parser.py',116),
  ('INSTRUCCION -> DECLARACION','INSTRUCCION',1,'p_instruccion','parser.py',117),
  ('INSTRUCCION -> ASIGNACION','INSTRUCCION',1,'p_instruccion','parser.py',118),
  ('INSTRUCCION -> IF','INSTRUCCION',1,'p_instruccion','parser.py',119),
  ('INSTRUCCION -> MATCH','INSTRUCCION',1,'p_instruccion','parser.py',120),
  ('INSTRUCCION -> CONTINUE','INSTRUCCION',1,'p_instruccion','parser.py',121),
  ('INSTRUCCION -> RETURN','INSTRUCCION',1,'p_instruccion','parser.py',122),
  ('INSTRUCCION -> BREAK','INSTRUCCION',1,'p_instruccion','parser.py',123),
  ('INSTRUCCION -> WHILE','INSTRUCCION',1,'p_instruccion','parser.py',124),
  ('INSTRUCCION -> EXPRESION','INSTRUCCION',1,'p_instruccion','parser.py',125),
  ('INSTRUCCION -> FUNCION','INSTRUCCION',1,'p_instruccion','parser.py',126),
  ('INSTRUCCION -> DECVECTOR','INSTRUCCION',1,'p_instruccion','parser.py',127),
  ('INSTRUCCION -> PUSH','INSTRUCCION',1,'p_instruccion','parser.py',128),
  ('INSTRUCCION -> INSERT','INSTRUCCION',1,'p_instruccion','parser.py',129),
  ('INSTRUCCION -> DECARREGLO','INSTRUCCION',1,'p_instruccion','parser.py',130),
  ('INSTRUCCION -> FORIN','INSTRUCCION',1,'p_instruccion','parser.py',131),
  ('INSTRUCCION -> STRUCT','INSTRUCCION',1,'p_instruccion','parser.py',132),
  ('INSTRUCCION -> DECSTRUCT','INSTRUCCION',1,'p_instruccion','parser.py',133),
  ('INSTRUCCION -> MOD_VAR_STRUCT','INSTRUCCION',1,'p_instruccion','parser.py',134),
  ('INSTRUCCION -> MODULO','INSTRUCCION',1,'p_instruccion','parser.py',135),
  ('EXPRESION -> EXPRESION mas EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',145),
  ('EXPRESION -> EXPRESION menos EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',146),
  ('EXPRESION -> EXPRESION div EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',147),
  ('EXPRESION -> EXPRESION multi EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',148),
  ('EXPRESION -> EXPRESION mod EXPRESION','EXPRESION',3,'p_expresion_aritmeticas','parser.py',149),
  ('EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc','EXPRESION',9,'p_expresion_aritmeticas','parser.py',150),
  ('EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc','EXPRESION',9,'p_expresion_aritmeticas','parser.py',151),
  ('EXPRESION -> menos EXPRESION','EXPRESION',2,'p_factor_unario','parser.py',165),
  ('EXPRESION -> EXPRESION mayor EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',171),
  ('EXPRESION -> EXPRESION menor EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',172),
  ('EXPRESION -> EXPRESION mayorigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',173),
  ('EXPRESION -> EXPRESION menorigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',174),
  ('EXPRESION -> EXPRESION igualigual EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',175),
  ('EXPRESION -> EXPRESION diferente EXPRESION','EXPRESION',3,'p_expresion_relacionales','parser.py',176),
  ('EXPRESION -> EXPRESION and EXPRESION','EXPRESION',3,'p_expresion_logicas','parser.py',182),
  ('EXPRESION -> EXPRESION or EXPRESION','EXPRESION',3,'p_expresion_logicas','parser.py',183),
  ('EXPRESION -> not EXPRESION','EXPRESION',2,'p_expresion_logicas_not','parser.py',188),
  ('EXPRESION -> para EXPRESION parc','EXPRESION',3,'p_EXPRESION_par','parser.py',194),
  ('EXPRESION -> TIPODATO','EXPRESION',1,'p_exp_one_element','parser.py',200),
  ('EXPRESION -> ID','EXPRESION',1,'p_exp_one_element','parser.py',201),
  ('EXPRESION -> IF_TER','EXPRESION',1,'p_exp_one_element','parser.py',202),
  ('EXPRESION -> MATCH_TER','EXPRESION',1,'p_exp_one_element','parser.py',203),
  ('EXPRESION -> LOOP','EXPRESION',1,'p_exp_one_element','parser.py',204),
  ('EXPRESION -> CAST_AS','EXPRESION',1,'p_exp_one_element','parser.py',205),
  ('EXPRESION -> ABS','EXPRESION',1,'p_exp_one_element','parser.py',206),
  ('EXPRESION -> CLONE','EXPRESION',1,'p_exp_one_element','parser.py',207),
  ('EXPRESION -> SQRT','EXPRESION',1,'p_exp_one_element','parser.py',208),
  ('EXPRESION -> TO_STRING_OWNED','EXPRESION',1,'p_exp_one_element','parser.py',209),
  ('EXPRESION -> CALL','EXPRESION',1,'p_exp_one_element','parser.py',210),
  ('EXPRESION -> REMOVE','EXPRESION',1,'p_exp_one_element','parser.py',211),
  ('EXPRESION -> CONTAINS','EXPRESION',1,'p_exp_one_element','parser.py',212),
  ('EXPRESION -> LEN','EXPRESION',1,'p_exp_one_element','parser.py',213),
  ('EXPRESION -> CAPACITY','EXPRESION',1,'p_exp_one_element','parser.py',214),
  ('EXPRESION -> ACCESVEC','EXPRESION',1,'p_exp_one_element','parser.py',215),
  ('EXPRESION -> ACCESO_STRUCT','EXPRESION',1,'p_exp_one_element','parser.py',216),
  ('EXPRESION -> ACCESO_MOD','EXPRESION',1,'p_exp_one_element','parser.py',217),
  ('CONJEXP -> CONJEXP coma ELCONJ','CONJEXP',3,'p_cexp_list','parser.py',222),
  ('CONJEXP -> ELCONJ','CONJEXP',1,'p_cexp','parser.py',226),
  ('ELCONJ -> EXPRESION','ELCONJ',1,'p_elementcexp','parser.py',230),
  ('ELCONJ -> VECI','ELCONJ',1,'p_elementcexp','parser.py',231),
  ('ELCONJ -> ARREGLO','ELCONJ',1,'p_elementcexp','parser.py',232),
  ('ELCONJ -> ampersand mut EXPRESION','ELCONJ',3,'p_elementcexp','parser.py',233),
  ('TIPODATO -> entero','TIPODATO',1,'p_tipo_dato','parser.py',241),
  ('TIPODATO -> decimal','TIPODATO',1,'p_tipo_dato','parser.py',242),
  ('TIPODATO -> cadena','TIPODATO',1,'p_tipo_dato','parser.py',243),
  ('TIPODATO -> true','TIPODATO',1,'p_tipo_dato','parser.py',244),
  ('TIPODATO -> false','TIPODATO',1,'p_tipo_dato','parser.py',245),
  ('ID -> id','ID',1,'p_id','parser.py',251),
  ('TIPODATO -> caracter','TIPODATO',1,'p_char','parser.py',257),
  ('TIPOVAR -> i64','TIPOVAR',1,'p_tipo_var','parser.py',263),
  ('TIPOVAR -> f64','TIPOVAR',1,'p_tipo_var','parser.py',264),
  ('TIPOVAR -> bool','TIPOVAR',1,'p_tipo_var','parser.py',265),
  ('TIPOVAR -> string','TIPOVAR',1,'p_tipo_var','parser.py',266),
  ('TIPOVAR -> char','TIPOVAR',1,'p_tipo_var','parser.py',267),
  ('TIPOVAR -> str','TIPOVAR',1,'p_tipo_var','parser.py',268),
  ('TIPOVAR -> usize','TIPOVAR',1,'p_tipo_var','parser.py',269),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec','IF_TER',5,'p_if_ternario','parser.py',275),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec','IF_TER',9,'p_if_else_ternario','parser.py',280),
  ('IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER','IF_TER',7,'p_if_else_if_ternario','parser.py',285),
  ('MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec','MATCH_TER',10,'p_matchTer','parser.py',291),
  ('MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec','MATCH_TER',9,'p_matchTer','parser.py',292),
  ('BRAZOS_TER -> BRAZOS_TER BRAZO_TER','BRAZOS_TER',2,'p_brazosTer_list','parser.py',300),
  ('BRAZOS_TER -> BRAZO_TER','BRAZOS_TER',1,'p_brazosTer_brazo','parser.py',306),
  ('BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma','BRAZO_TER',5,'p_brazoTer','parser.py',311),
  ('CAST_AS -> EXPRESION as TIPOVAR','CAST_AS',3,'p_as','parser.py',316),
  ('ABS -> EXPRESION punto abs para parc','ABS',5,'p_abs','parser.py',320),
  ('ABS -> id punto abs para parc','ABS',5,'p_abs_id','parser.py',323),
  ('CLONE -> EXPRESION punto clone para parc','CLONE',5,'p_clone','parser.py',328),
  ('CLONE -> id punto clone para parc','CLONE',5,'p_clone_id','parser.py',331),
  ('SQRT -> para CAST_AS parc punto sqrt para parc','SQRT',7,'p_sqrt','parser.py',336),
  ('SQRT -> id punto sqrt para parc','SQRT',5,'p_sqrt_id','parser.py',339),
  ('TO_STRING_OWNED -> EXPRESION punto toString para parc','TO_STRING_OWNED',5,'p_tostrig_owned_id','parser.py',344),
  ('TO_STRING_OWNED -> EXPRESION punto toOwned para parc','TO_STRING_OWNED',5,'p_tostrig_owned_id','parser.py',345),
  ('TO_STRING_OWNED -> id punto toString para parc','TO_STRING_OWNED',5,'p_tostring_owned2','parser.py',349),
  ('TO_STRING_OWNED -> id punto toOwned para parc','TO_STRING_OWNED',5,'p_tostring_owned2','parser.py',350),
  ('PRINT -> println para EXPRESION parc','PRINT',4,'p_println','parser.py',358),
  ('PRINT -> println para EXPRESION coma CONJEXP parc','PRINT',6,'p_println','parser.py',359),
  ('DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION','DECLARACION',7,'p_declaracion_t1','parser.py',369),
  ('DECLARACION -> let mut id igual EXPRESION','DECLARACION',5,'p_declaracion_t1','parser.py',370),
  ('DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION','DECLARACION',6,'p_declaracion_t2','parser.py',379),
  ('DECLARACION -> let id igual EXPRESION','DECLARACION',4,'p_declaracion_t2','parser.py',380),
  ('DECLARACION -> let mut id dospuntos TIPOVAR','DECLARACION',5,'p_declaracion_t3','parser.py',389),
  ('ASIGNACION -> id igual EXPRESION','ASIGNACION',3,'p_asignaciones','parser.py',398),
  ('ASIGNACION -> id INDEXS igual EXPRESION','ASIGNACION',4,'p_asignaciones','parser.py',399),
  ('ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION','ASIGNACION',6,'p_asignaciones','parser.py',400),
  ('IF -> if EXPRESION BLOQUE_INST','IF',3,'p_if','parser.py',412),
  ('IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST','IF',5,'p_if_else','parser.py',417),
  ('IF -> if EXPRESION BLOQUE_INST else IF','IF',5,'p_if_else_if','parser.py',422),
  ('MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec','MATCH',9,'p_match_1','parser.py',429),
  ('MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec','MATCH',8,'p_match_1','parser.py',430),
  ('MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION coma llavec','MATCH',10,'p_match_2','parser.py',438),
  ('MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION coma llavec','MATCH',9,'p_match_2','parser.py',439),
  ('BRAZOS -> BRAZOS BRAZO','BRAZOS',2,'p_brazos_list','parser.py',447),
  ('BRAZOS -> BRAZO','BRAZOS',1,'p_brazos_brazo','parser.py',453),
  ('BRAZO -> CONJEXPM igual mayor BLOQUE_INST','BRAZO',4,'p_brazo','parser.py',458),
  ('BRAZO -> CONJEXPM igual mayor INSTRUCCION coma','BRAZO',5,'p_brazo','parser.py',459),
  ('CONJEXPM -> CONJEXPM bvertical EXPRESION','CONJEXPM',3,'p_conj_exp_match_list','parser.py',466),
  ('CONJEXPM -> EXPRESION','CONJEXPM',1,'p_conj_exp_match_exp','parser.py',470),
  ('LOOP -> loop BLOQUE_INST','LOOP',2,'p_loop','parser.py',475),
  ('BREAK -> break','BREAK',1,'p_break','parser.py',479),
  ('BREAK -> break EXPRESION','BREAK',2,'p_break2','parser.py',482),
  ('CONTINUE -> continue','CONTINUE',1,'p_continue','parser.py',486),
  ('RETURN -> return EXPRESION','RETURN',2,'p_return','parser.py',490),
  ('RETURN -> return','RETURN',1,'p_return_2','parser.py',493),
  ('WHILE -> while EXPRESION BLOQUE_INST','WHILE',3,'p_while','parser.py',497),
  ('BLOQUE_INST -> llavea INSTRUCCIONES llavec','BLOQUE_INST',3,'p_bloque_instrucciones','parser.py',501),
  ('FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST','FUNCION',9,'p_funcion','parser.py',507),
  ('FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST','FUNCION',6,'p_funcion','parser.py',508),
  ('FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST','FUNCION',8,'p_funcion2','parser.py',516),
  ('FUNCION -> fn id para parc BLOQUE_INST','FUNCION',5,'p_funcion2','parser.py',517),
  ('FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST','FUNCION',9,'p_funcion3','parser.py',525),
  ('FUNCION -> fn id para LISTAPARAMETROS parc menos mayor Vec menor id mayor BLOQUE_INST','FUNCION',12,'p_funcion3','parser.py',526),
  ('FUNCION -> fn id para LISTAPARAMETROS parc menos mayor Vec menor TIPOVAR mayor BLOQUE_INST','FUNCION',12,'p_funcion3','parser.py',527),
  ('LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO','LISTAPARAMETROS',3,'p_lista_parametros','parser.py',536),
  ('LISTAPARAMETROS -> PARAMETRO','LISTAPARAMETROS',1,'p_lista_parametros_parametro','parser.py',540),
  ('PARAMETRO -> id dospuntos TIPOVAR','PARAMETRO',3,'p_parametro','parser.py',543),
  ('PARAMETRO -> mut id dospuntos TIPOVAR','PARAMETRO',4,'p_parametro','parser.py',544),
  ('PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc','PARAMETRO',7,'p_parametro2','parser.py',551),
  ('PARAMETRO -> id dospuntos ampersand mut Vec menor TIPOVAR mayor','PARAMETRO',8,'p_parametro2','parser.py',552),
  ('PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR','PARAMETRO',5,'p_parametro2','parser.py',553),
  ('PARAMETRO -> id dospuntos Vec menor TIPOVAR mayor','PARAMETRO',6,'p_parametro3','parser.py',563),
  ('PARAMETRO -> id dospuntos Vec menor id mayor','PARAMETRO',6,'p_parametro3','parser.py',564),
  ('PARAMETRO -> mut id dospuntos Vec menor TIPOVAR mayor','PARAMETRO',7,'p_parametro3','parser.py',565),
  ('PARAMETRO -> mut id dospuntos Vec menor id mayor','PARAMETRO',7,'p_parametro3','parser.py',566),
  ('CALL -> id para CONJEXP parc','CALL',4,'p_call','parser.py',575),
  ('CALL -> id para parc','CALL',3,'p_call','parser.py',576),
  ('DECVECTOR -> let id igual VECI','DECVECTOR',4,'p_defvector_1','parser.py',586),
  ('DECVECTOR -> let mut id igual VECI','DECVECTOR',5,'p_defvector_1','parser.py',587),
  ('DECVECTOR -> let id dospuntos Vec menor TIPOVAR mayor igual Vec dospuntos dospuntos FUNCVEC','DECVECTOR',12,'p_devector_2','parser.py',595),
  ('DECVECTOR -> let mut id dospuntos Vec menor TIPOVAR mayor igual Vec dospuntos dospuntos FUNCVEC','DECVECTOR',13,'p_devector_2','parser.py',596),
  ('VECI -> vecI cora CONJVECI corc','VECI',4,'p_vectori','parser.py',603),
  ('VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc','VECI',6,'p_vectori','parser.py',604),
  ('CONJVECI -> CONJVECI coma ELVEC','CONJVECI',3,'p_conjveci_lista','parser.py',612),
  ('CONJVECI -> ELVEC','CONJVECI',1,'p_conjvei_element','parser.py',617),
  ('ELVEC -> EXPRESION','ELVEC',1,'p_elemento_vec','parser.py',620),
  ('ELVEC -> VECI','ELVEC',1,'p_elemento_vec','parser.py',621),
  ('FUNCVEC -> new para parc','FUNCVEC',3,'p_func_vec','parser.py',624),
  ('FUNCVEC -> withcapacity para EXPRESION parc','FUNCVEC',4,'p_func_vec','parser.py',625),
  ('PUSH -> id punto push para EXPRESION parc','PUSH',6,'p_instv_push','parser.py',631),
  ('INSERT -> id punto insert para EXPRESION coma EXPRESION parc','INSERT',8,'p_instv_insert','parser.py',634),
  ('REMOVE -> id punto remove para EXPRESION parc','REMOVE',6,'p_instv_remove','parser.py',637),
  ('CONTAINS -> id punto contains para ampersand EXPRESION parc','CONTAINS',7,'p_instv_contains','parser.py',640),
  ('LEN -> id punto len para parc','LEN',5,'p_instv_len','parser.py',643),
  ('CAPACITY -> id punto capacity para parc','CAPACITY',5,'p_instv_capacity','parser.py',646),
  ('ACCESVEC -> id INDEXS','ACCESVEC',2,'p_instv_acces','parser.py',649),
  ('ACCESVEC -> id INDEXS punto CONJ_ACCES','ACCESVEC',4,'p_instv_acces','parser.py',650),
  ('INDEXS -> INDEXS cora EXPRESION corc','INDEXS',4,'p_index_acces_list','parser.py',656),
  ('INDEXS -> cora EXPRESION corc','INDEXS',3,'p_index_acces','parser.py',660),
  ('DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO','DECARREGLO',6,'p_dec_arreglo1','parser.py',665),
  ('DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO','DECARREGLO',7,'p_dec_arreglo1','parser.py',666),
  ('DECARREGLO -> let id igual ARREGLO','DECARREGLO',4,'p_dec_arreglo2','parser.py',672),
  ('DECARREGLO -> let mut id igual ARREGLO','DECARREGLO',5,'p_dec_arreglo2','parser.py',673),
  ('DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc','DIMENSION_ARR',5,'p_dimension_arreglo_multidimensional','parser.py',679),
  ('DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc','DIMENSION_ARR',5,'p_dimension_arreglo_unidimensional','parser.py',682),
  ('DIMENSION_ARR -> cora id puntoycoma EXPRESION corc','DIMENSION_ARR',5,'p_dimension_arreglo_unidimensional','parser.py',683),
  ('ARREGLO -> cora CONT_ARR corc','ARREGLO',3,'p_arreglo_conj','parser.py',686),
  ('ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc','ARREGLO',5,'p_arreglo_multi','parser.py',689),
  ('CONT_ARR -> CONT_ARR coma ELARR','CONT_ARR',3,'p_cont_arreglo','parser.py',692),
  ('CONT_ARR -> ELARR','CONT_ARR',1,'p_cont_arreglo_u','parser.py',696),
  ('ELARR -> ARREGLO','ELARR',1,'p_elemento_arreglo','parser.py',699),
  ('ELARR -> EXPRESION','ELARR',1,'p_elemento_arreglo','parser.py',700),
  ('ELARR -> STRUCT_EXP','ELARR',1,'p_elemento_arreglo','parser.py',701),
  ('FORIN -> for id in ARRFOR BLOQUE_INST','FORIN',5,'p_forin','parser.py',707),
  ('ARRFOR -> CHARS','ARRFOR',1,'p_arrfor','parser.py',711),
  ('ARRFOR -> ARREGLO','ARRFOR',1,'p_arrfor','parser.py',712),
  ('ARRFOR -> VECI','ARRFOR',1,'p_arrfor','parser.py',713),
  ('ARRFOR -> RANGO','ARRFOR',1,'p_arrfor','parser.py',714),
  ('CHARS -> EXPRESION punto chars para parc','CHARS',5,'p_charArr','parser.py',717),
  ('CHARS -> id punto chars para parc','CHARS',5,'p_charArr_id','parser.py',720),
  ('RANGO -> EXPRESION punto punto EXPRESION','RANGO',4,'p_rangoArr','parser.py',724),
  ('STRUCT -> struct id llavea CONTENT_STRUCT llavec','STRUCT',5,'p_struct','parser.py',729),
  ('CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT','CONTENT_STRUCT',3,'p_struct_content','parser.py',732),
  ('CONTENT_STRUCT -> ELSTRUCT','CONTENT_STRUCT',1,'p_struc_content_u','parser.py',736),
  ('ELSTRUCT -> id dospuntos TIPOVAR','ELSTRUCT',3,'p_elemento_struct','parser.py',739),
  ('DECSTRUCT -> let id igual STRUCT_EXP','DECSTRUCT',4,'p_dec_var_struct','parser.py',743),
  ('DECSTRUCT -> let mut id igual STRUCT_EXP','DECSTRUCT',5,'p_dec_var_struct','parser.py',744),
  ('DECSTRUCT -> let id dospuntos id igual STRUCT_EXP','DECSTRUCT',6,'p_dec_var_struct2','parser.py',750),
  ('DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP','DECSTRUCT',7,'p_dec_var_struct2','parser.py',751),
  ('STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec','STRUCT_EXP',4,'p_dec_var_struct_exp','parser.py',757),
  ('CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT','CONJEXP_STRUCT',3,'p_conjexp_struct','parser.py',760),
  ('CONJEXP_STRUCT -> EXSTRUCT','CONJEXP_STRUCT',1,'p_conjexp_struc_u','parser.py',764),
  ('EXSTRUCT -> id dospuntos EXPRESION','EXSTRUCT',3,'p_exstruct','parser.py',767),
  ('ACCESO_STRUCT -> id punto CONJ_ACCES','ACCESO_STRUCT',3,'p_acces_struct_expresion','parser.py',773),
  ('CONJ_ACCES -> CONJ_ACCES punto id','CONJ_ACCES',3,'p_acces_struct_list','parser.py',776),
  ('CONJ_ACCES -> id','CONJ_ACCES',1,'p_acces_struct','parser.py',780),
  ('MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION','MOD_VAR_STRUCT',5,'p_mod_var_struct','parser.py',784),
  ('MODULO -> modulo id llavea CONTENT_MOD llavec','MODULO',5,'p_modulos','parser.py',788),
  ('CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD','CONTENT_MOD',2,'p_content_mod_list','parser.py',791),
  ('CONTENT_MOD -> ELEMENT_MOD','CONTENT_MOD',1,'p_content_mod_u','parser.py',795),
  ('ELEMENT_MOD -> pub INST_MOD','ELEMENT_MOD',2,'p_acces_inst_mod','parser.py',798),
  ('ELEMENT_MOD -> INST_MOD','ELEMENT_MOD',1,'p_acces_inst_mod','parser.py',799),
  ('INST_MOD -> FUNCION','INST_MOD',1,'p_content_mod','parser.py',806),
  ('INST_MOD -> MODULO','INST_MOD',1,'p_content_mod','parser.py',807),
  ('INST_MOD -> STRUCT','INST_MOD',1,'p_content_mod','parser.py',808),
  ('INST_MOD -> DECLARACION','INST_MOD',1,'p_content_mod','parser.py',809),
  ('INST_MOD -> DECARREGLO','INST_MOD',1,'p_content_mod','parser.py',810),
  ('INST_MOD -> DECVECTOR','INST_MOD',1,'p_content_mod','parser.py',811),
  ('INST_MOD -> DECSTRUCT','INST_MOD',1,'p_content_mod','parser.py',812),
  ('ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc','ACCESO_MOD',7,'p_acces_mod','parser.py',816),
  ('ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc','ACCESO_MOD',6,'p_acces_mod','parser.py',817),
  ('CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id','CONJ_ACCES_MOD',4,'p_conj_acces_mod1','parser.py',823),
  ('CONJ_ACCES_MOD -> id','CONJ_ACCES_MOD',1,'p_conj_acces_mod2','parser.py',827),
]
