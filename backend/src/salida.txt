#include <stdio.h>
#include <math.h>
double HEAP[10000];
double STACK[78000];
double P;
double H;
double ptr;
double t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11;


int main(){
/* Instruccion Print */
/* Primitivo tipo STR */
t0 = H  ;
HEAP[(int)H] = 123;
H = H + 1;
HEAP[(int)H] = 125;
H = H + 1;
HEAP[(int)H] = -1;
H = H + 1;
t2 = H;
/* Metodo ToString o ToOwned */
t3 = H;
if(1 == 1) goto L0;
goto L1;
/* Boolean to string */
L0:
HEAP[(int)H] = 116;
H = H + 1;
HEAP[(int)H] = 114;
H = H + 1;
HEAP[(int)H] = 117;
H = H + 1;
HEAP[(int)H] = 101;
H = H + 1;
goto L2;
L1:
HEAP[(int)H] = 102;
H = H + 1;
HEAP[(int)H] = 97;
H = H + 1;
HEAP[(int)H] = 108;
H = H + 1;
HEAP[(int)H] = 115;
H = H + 1;
HEAP[(int)H] = 101;
H = H + 1;
L2:
HEAP[(int)H] = -1;
H = H + 1;
/* Para saber donde iniciar a imprimir luego del proceso */
t1 = H;
/* Print Complex P.1 */
t5 = t0  ;
L3:
t6 = HEAP[(int)t5 ];
if(t6 == (char)123) goto L6;
HEAP[(int)H] = t6;
H = H + 1;
t5 = t5 + 1;
goto L3;
/* Print Complex P.2 */
L6:
t5 = t5 + 1;
L4:
t6 = HEAP[(int)t5 ];
if(t6 == (char)125) goto L7;
t5 = t5 + 1;
goto L4;
/* Print Complex P.3 */
L7:
t5 = t5 + 1;
t7 = t3  ;
L9:
t8 = HEAP[(int)t7 ];
if(t8 == -1) goto L10;
HEAP[(int)H] = t8;
H = H + 1;
t7 = t7 + 1;
goto L9;
L10:
/* Print Complex P.4 */
L5:
t6 = HEAP[(int)t5 ];
if(t6 == -1) goto L8;
HEAP[(int)H] = t6;
H = H + 1;
t5 = t5 + 1;
goto L5;
/* Salida print Complex */
L8:
HEAP[(int)H] = -1;
H = H + 1;
/* Impresion */
t10 = t1  ;
L11:
t11 = HEAP[(int)t10 ];
if(t11 != -1) goto L12;
goto L13;
L12:
printf("%c",(char)t11);
t10 = t10 + 1;
goto L11;
L13:
return 0;
}
