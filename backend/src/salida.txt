#include <stdio.h>
#include <math.h>
double HEAP[10000];
double STACK[78000];
double P;
double H;
double ptr;
double t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16;


int main(){
/* Instruccion Print */
/* Primitivo tipo STR */
t0 = H  ;
HEAP[(int)H] = 123;
H = H + 1;
HEAP[(int)H] = 125;
H = H + 1;
HEAP[(int)H] = 32;
H = H + 1;
HEAP[(int)H] = 70;
H = H + 1;
HEAP[(int)H] = 117;
H = H + 1;
HEAP[(int)H] = 110;
H = H + 1;
HEAP[(int)H] = 99;
H = H + 1;
HEAP[(int)H] = 105;
H = H + 1;
HEAP[(int)H] = 111;
H = H + 1;
HEAP[(int)H] = 110;
H = H + 1;
HEAP[(int)H] = 97;
H = H + 1;
HEAP[(int)H] = -1;
H = H + 1;
/* Para saber donde iniciar a imprimir luego del proceso */
t1 = H;
/* Print Complex P.1 */
t2 = t0  ;
L0:
t3 = HEAP[(int)t2 ];
if(t3 == (char)123) goto L3;
HEAP[(int)H] = t3;
H = H + 1;
t2 = t2 + 1;
goto L0;
/* Print Complex P.2 */
L3:
t2 = t2 + 1;
L1:
t3 = HEAP[(int)t2 ];
if(t3 == (char)125) goto L4;
t2 = t2 + 1;
goto L1;
/* Print Complex P.3 */
L4:
t2 = t2 + 1;
/* Num to String */
t4 = 12;
t5 = H;
t6 = t4  ;
L6:
t7 = t6 / 10;
t8 = (int)t7;
if(t8 == 0) goto L7;
t9 = fmod(t6,10);
t6 = t8;
HEAP[(int)H] = (int)t9 +48;
H = H + 1;
goto L6;
L7:
HEAP[(int)H] = (int)t6+48;
H = H + 1;
/* sort_revers */
t10 = t5;
t11 = H-1;
L8:
if(t10 == t11) goto L9;
if(t10 > t11) goto L9;
t12 = HEAP[(int)t11 ];
t13 = HEAP[(int)t10 ];
HEAP[(int)t10] = t12;
HEAP[(int)t11] = t13;
t10 = t10 + 1;
t11 = t11 - 1;
goto L8;
L9:
/* Print Complex P.4 */
L2:
t3 = HEAP[(int)t2 ];
if(t3 == -1) goto L5;
HEAP[(int)H] = t3;
H = H + 1;
t2 = t2 + 1;
goto L2;
/* Salida print Complex */
L5:
HEAP[(int)H] = -1;
H = H + 1;
/* Impresion */
t15 = t1  ;
L10:
t16 = HEAP[(int)t15 ];
if(t16 != -1) goto L11;
goto L12;
L11:
printf("%c",(char)t16);
t15 = t15 + 1;
goto L10;
L12:
return 0;
}
