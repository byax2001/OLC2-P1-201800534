Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> INICIO
Rule 1     INICIO -> INSTRUCCIONES_RUST
Rule 2     INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST
Rule 3     INSTRUCCIONES_RUST -> INST_RUST
Rule 4     INST_RUST -> MODULO
Rule 5     INST_RUST -> FUNCION
Rule 6     INST_RUST -> STRUCT
Rule 7     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 8     INSTRUCCIONES -> INSTRUCCION
Rule 9     INSTRUCCION -> PRINT puntoycoma
Rule 10    INSTRUCCION -> DECLARACION puntoycoma
Rule 11    INSTRUCCION -> ASIGNACION puntoycoma
Rule 12    INSTRUCCION -> IF
Rule 13    INSTRUCCION -> MATCH
Rule 14    INSTRUCCION -> CONTINUE puntoycoma
Rule 15    INSTRUCCION -> RETURN puntoycoma
Rule 16    INSTRUCCION -> BREAK puntoycoma
Rule 17    INSTRUCCION -> WHILE
Rule 18    INSTRUCCION -> EXPRESION
Rule 19    INSTRUCCION -> CALL puntoycoma
Rule 20    INSTRUCCION -> FUNCION
Rule 21    INSTRUCCION -> DECVECTOR puntoycoma
Rule 22    INSTRUCCION -> PUSH puntoycoma
Rule 23    INSTRUCCION -> INSERT puntoycoma
Rule 24    INSTRUCCION -> DECARREGLO puntoycoma
Rule 25    INSTRUCCION -> FORIN
Rule 26    INSTRUCCION -> STRUCT
Rule 27    INSTRUCCION -> DECSTRUCT puntoycoma
Rule 28    INSTRUCCION -> MOD_VAR_STRUCT puntoycoma
Rule 29    INSTRUCCION -> MODULO
Rule 30    INSTRUCCION -> ACCESO_MOD puntoycoma
Rule 31    EXPRESION -> EXPRESION mas EXPRESION
Rule 32    EXPRESION -> EXPRESION menos EXPRESION
Rule 33    EXPRESION -> EXPRESION div EXPRESION
Rule 34    EXPRESION -> EXPRESION multi EXPRESION
Rule 35    EXPRESION -> EXPRESION mod EXPRESION
Rule 36    EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
Rule 37    EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
Rule 38    EXPRESION -> menos EXPRESION
Rule 39    EXPRESION -> EXPRESION mayor EXPRESION
Rule 40    EXPRESION -> EXPRESION menor EXPRESION
Rule 41    EXPRESION -> EXPRESION mayorigual EXPRESION
Rule 42    EXPRESION -> EXPRESION menorigual EXPRESION
Rule 43    EXPRESION -> EXPRESION igualigual EXPRESION
Rule 44    EXPRESION -> EXPRESION diferente EXPRESION
Rule 45    EXPRESION -> EXPRESION and EXPRESION
Rule 46    EXPRESION -> EXPRESION or EXPRESION
Rule 47    EXPRESION -> not EXPRESION
Rule 48    EXPRESION -> para EXPRESION parc
Rule 49    EXPRESION -> TIPODATO
Rule 50    EXPRESION -> ID
Rule 51    EXPRESION -> IF_TER
Rule 52    EXPRESION -> MATCH_TER
Rule 53    EXPRESION -> LOOP
Rule 54    EXPRESION -> CAST_AS
Rule 55    EXPRESION -> ABS
Rule 56    EXPRESION -> CLONE
Rule 57    EXPRESION -> SQRT
Rule 58    EXPRESION -> TO_STRING_OWNED
Rule 59    EXPRESION -> CALL
Rule 60    EXPRESION -> REMOVE
Rule 61    EXPRESION -> CONTAINS
Rule 62    EXPRESION -> LEN
Rule 63    EXPRESION -> CAPACITY
Rule 64    EXPRESION -> ACCESVEC
Rule 65    EXPRESION -> ACCESO_STRUCT
Rule 66    EXPRESION -> ACCESO_MOD
Rule 67    CONJEXP -> CONJEXP coma ELCONJ
Rule 68    CONJEXP -> ELCONJ
Rule 69    ELCONJ -> EXPRESION
Rule 70    ELCONJ -> VECI
Rule 71    ELCONJ -> ARREGLO
Rule 72    ELCONJ -> ampersand mut EXPRESION
Rule 73    TIPODATO -> entero
Rule 74    TIPODATO -> decimal
Rule 75    TIPODATO -> cadena
Rule 76    TIPODATO -> true
Rule 77    TIPODATO -> false
Rule 78    ID -> id
Rule 79    TIPODATO -> caracter
Rule 80    TIPOVAR -> i64
Rule 81    TIPOVAR -> f64
Rule 82    TIPOVAR -> bool
Rule 83    TIPOVAR -> string
Rule 84    TIPOVAR -> char
Rule 85    TIPOVAR -> str
Rule 86    TIPOVAR -> usize
Rule 87    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
Rule 88    IF_TER -> if EXPRESION llavea EXPRESION llavec
Rule 89    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
Rule 90    IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
Rule 91    IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
Rule 92    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
Rule 93    IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
Rule 94    IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER
Rule 95    MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
Rule 96    MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
Rule 97    BRAZOS_TER -> BRAZOS_TER BRAZO_TER
Rule 98    BRAZOS_TER -> BRAZO_TER
Rule 99    BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma
Rule 100   CAST_AS -> EXPRESION as TIPOVAR
Rule 101   ABS -> EXPRESION punto abs para parc
Rule 102   ABS -> id punto abs para parc
Rule 103   CLONE -> EXPRESION punto clone para parc
Rule 104   CLONE -> id punto clone para parc
Rule 105   CLONE -> id INDEXS punto clone para parc
Rule 106   SQRT -> EXPRESION punto sqrt para parc
Rule 107   SQRT -> id punto sqrt para parc
Rule 108   TO_STRING_OWNED -> EXPRESION punto toString para parc
Rule 109   TO_STRING_OWNED -> EXPRESION punto toOwned para parc
Rule 110   TO_STRING_OWNED -> id punto toString para parc
Rule 111   TO_STRING_OWNED -> id punto toOwned para parc
Rule 112   PRINT -> println para EXPRESION parc
Rule 113   PRINT -> println para EXPRESION coma CONJEXP parc
Rule 114   DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION
Rule 115   DECLARACION -> let mut id igual EXPRESION
Rule 116   DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION
Rule 117   DECLARACION -> let id igual EXPRESION
Rule 118   DECLARACION -> let mut id dospuntos TIPOVAR
Rule 119   ASIGNACION -> id igual EXPRESION
Rule 120   ASIGNACION -> id INDEXS igual EXPRESION
Rule 121   ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION
Rule 122   IF -> if EXPRESION BLOQUE_INST
Rule 123   IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST
Rule 124   IF -> if EXPRESION BLOQUE_INST else IF
Rule 125   MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
Rule 126   MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
Rule 127   MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
Rule 128   MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
Rule 129   INSTRUCCION_1LINE -> PRINT
Rule 130   INSTRUCCION_1LINE -> DECLARACION
Rule 131   INSTRUCCION_1LINE -> ASIGNACION
Rule 132   INSTRUCCION_1LINE -> PUSH
Rule 133   INSTRUCCION_1LINE -> INSERT
Rule 134   INSTRUCCION_1LINE -> DECARREGLO
Rule 135   INSTRUCCION_1LINE -> DECVECTOR
Rule 136   INSTRUCCION_1LINE -> DECSTRUCT
Rule 137   INSTRUCCION_1LINE -> MOD_VAR_STRUCT
Rule 138   BRAZOS -> BRAZOS BRAZO
Rule 139   BRAZOS -> BRAZO
Rule 140   BRAZO -> CONJEXPM igual mayor BLOQUE_INST
Rule 141   BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma
Rule 142   CONJEXPM -> CONJEXPM bvertical EXPRESION
Rule 143   CONJEXPM -> EXPRESION
Rule 144   LOOP -> loop BLOQUE_INST
Rule 145   BREAK -> break
Rule 146   BREAK -> break EXPRESION
Rule 147   CONTINUE -> continue
Rule 148   RETURN -> return EXPRESION
Rule 149   RETURN -> return
Rule 150   WHILE -> while EXPRESION BLOQUE_INST
Rule 151   BLOQUE_INST -> llavea INSTRUCCIONES llavec
Rule 152   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
Rule 153   FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST
Rule 154   FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST
Rule 155   FUNCION -> fn id para parc BLOQUE_INST
Rule 156   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
Rule 157   FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
Rule 158   LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO
Rule 159   LISTAPARAMETROS -> PARAMETRO
Rule 160   PARAMETRO -> id dospuntos TIPOVAR
Rule 161   PARAMETRO -> mut id dospuntos TIPOVAR
Rule 162   PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc
Rule 163   PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR
Rule 164   PARAMETRO -> id dospuntos ampersand mut VEC
Rule 165   PARAMETRO -> id dospuntos VEC
Rule 166   PARAMETRO -> mut id dospuntos VEC
Rule 167   CALL -> id para CONJEXP parc
Rule 168   CALL -> id para parc
Rule 169   DECVECTOR -> let id igual VECI
Rule 170   DECVECTOR -> let mut id igual VECI
Rule 171   DECVECTOR -> let id dospuntos VEC igual VECI
Rule 172   DECVECTOR -> let mut id dospuntos VEC igual VECI
Rule 173   DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
Rule 174   DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
Rule 175   VEC -> Vec menor VEC mayor
Rule 176   VEC -> Vec menor TIPOVAR mayor
Rule 177   VEC -> Vec menor id mayor
Rule 178   VECI -> vecI cora CONJVECI corc
Rule 179   VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc
Rule 180   CONJVECI -> CONJVECI coma ELVEC
Rule 181   CONJVECI -> ELVEC
Rule 182   ELVEC -> EXPRESION
Rule 183   ELVEC -> VECI
Rule 184   FUNCVEC -> new para parc
Rule 185   FUNCVEC -> withcapacity para EXPRESION parc
Rule 186   PUSH -> id punto push para EXPRESION parc
Rule 187   PUSH -> id punto push para VECI parc
Rule 188   INSERT -> id punto insert para EXPRESION coma EXPRESION parc
Rule 189   REMOVE -> id punto remove para EXPRESION parc
Rule 190   CONTAINS -> id punto contains para ampersand EXPRESION parc
Rule 191   LEN -> EXPRESION punto len para parc
Rule 192   LEN -> id INDEXS punto len para parc
Rule 193   LEN -> id punto len para parc
Rule 194   CAPACITY -> id punto capacity para parc
Rule 195   ACCESVEC -> id INDEXS
Rule 196   ACCESVEC -> id INDEXS punto CONJ_ACCES
Rule 197   INDEXS -> INDEXS cora EXPRESION corc
Rule 198   INDEXS -> cora EXPRESION corc
Rule 199   DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO
Rule 200   DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO
Rule 201   DECARREGLO -> let id igual ARREGLO
Rule 202   DECARREGLO -> let mut id igual ARREGLO
Rule 203   DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc
Rule 204   DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc
Rule 205   DIMENSION_ARR -> cora id puntoycoma EXPRESION corc
Rule 206   ARREGLO -> cora CONT_ARR corc
Rule 207   ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc
Rule 208   CONT_ARR -> CONT_ARR coma ELARR
Rule 209   CONT_ARR -> ELARR
Rule 210   ELARR -> ARREGLO
Rule 211   ELARR -> EXPRESION
Rule 212   ELARR -> STRUCT_EXP
Rule 213   FORIN -> for id in ARRFOR BLOQUE_INST
Rule 214   ARRFOR -> CHARS
Rule 215   ARRFOR -> ARREGLO
Rule 216   ARRFOR -> VECI
Rule 217   ARRFOR -> RANGO
Rule 218   ARRFOR -> ID
Rule 219   CHARS -> EXPRESION punto chars para parc
Rule 220   CHARS -> id punto chars para parc
Rule 221   RANGO -> EXPRESION punto punto EXPRESION
Rule 222   STRUCT -> struct id llavea CONTENT_STRUCT llavec
Rule 223   CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT
Rule 224   CONTENT_STRUCT -> ELSTRUCT
Rule 225   ELSTRUCT -> id dospuntos TIPOVAR
Rule 226   DECSTRUCT -> let id igual STRUCT_EXP
Rule 227   DECSTRUCT -> let mut id igual STRUCT_EXP
Rule 228   DECSTRUCT -> let id dospuntos id igual STRUCT_EXP
Rule 229   DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP
Rule 230   STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec
Rule 231   CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT
Rule 232   CONJEXP_STRUCT -> EXSTRUCT
Rule 233   EXSTRUCT -> id dospuntos EXPRESION
Rule 234   ACCESO_STRUCT -> id punto CONJ_ACCES
Rule 235   CONJ_ACCES -> CONJ_ACCES punto id
Rule 236   CONJ_ACCES -> id
Rule 237   MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION
Rule 238   MODULO -> modulo id llavea CONTENT_MOD llavec
Rule 239   CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD
Rule 240   CONTENT_MOD -> ELEMENT_MOD
Rule 241   ELEMENT_MOD -> pub INST_MOD
Rule 242   ELEMENT_MOD -> INST_MOD
Rule 243   INST_MOD -> FUNCION
Rule 244   INST_MOD -> MODULO
Rule 245   INST_MOD -> STRUCT
Rule 246   INST_MOD -> DECLARACION
Rule 247   INST_MOD -> DECARREGLO
Rule 248   INST_MOD -> DECVECTOR
Rule 249   INST_MOD -> DECSTRUCT
Rule 250   ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
Rule 251   ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc
Rule 252   CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id
Rule 253   CONJ_ACCES_MOD -> id

Terminals, with rules where they appear

Vec                  : 173 174 175 176 177
abs                  : 101 102
ampersand            : 72 162 163 164 190
and                  : 45
as                   : 100
bool                 : 82
break                : 145 146
bvertical            : 142
cadena               : 75
capacity             : 194
caracter             : 79
char                 : 84
chars                : 219 220
clone                : 103 104 105
coma                 : 36 37 67 95 96 99 113 127 128 141 158 180 188 208 223 231
contains             : 190
continue             : 147
cora                 : 162 178 179 197 198 203 204 205 206 207
corc                 : 162 178 179 197 198 203 204 205 206 207
decimal              : 74
diferente            : 44
div                  : 33
dospuntos            : 36 36 37 37 114 116 118 160 161 162 163 164 165 166 171 172 173 173 173 174 174 174 199 200 225 228 229 233 250 250 251 251 252 252
else                 : 89 90 91 92 93 94 123 124
entero               : 73
error                : 
f64                  : 37 81
false                : 77
fn                   : 152 153 154 155 156 157
for                  : 213
guionbajo            : 95 96 125 126 127 128
i64                  : 36 80
id                   : 78 102 104 105 107 110 111 114 115 116 117 118 119 120 121 152 153 154 155 156 156 157 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 177 186 187 188 189 190 192 193 194 195 196 199 200 201 202 205 213 220 222 225 226 227 228 228 229 229 230 233 234 235 236 237 238 250 251 252 253
if                   : 87 88 89 90 91 92 93 94 122 123 124
igual                : 95 96 99 114 115 116 117 119 120 121 125 126 127 128 140 141 169 170 171 172 173 174 199 200 201 202 226 227 228 229 237
igualigual           : 43
in                   : 213
insert               : 188
len                  : 191 192 193
let                  : 114 115 116 117 118 169 170 171 172 173 174 199 200 201 202 226 227 228 229
llavea               : 87 88 89 89 90 90 91 91 92 92 93 94 95 96 125 126 127 128 151 222 230 238
llavec               : 87 88 89 89 90 90 91 91 92 92 93 94 95 96 125 126 127 128 151 222 230 238
loop                 : 144
mas                  : 31
match                : 95 96 125 126 127 128
mayor                : 39 95 96 99 125 126 127 128 140 141 152 154 156 157 175 176 177
mayorigual           : 41
menor                : 40 175 176 177
menorigual           : 42
menos                : 32 38 152 154 156 157
mod                  : 35
modulo               : 238
multi                : 34
mut                  : 72 114 115 118 161 162 163 164 166 170 172 174 200 202 227 229
new                  : 184
not                  : 47
or                   : 46
para                 : 36 37 48 101 102 103 104 105 106 107 108 109 110 111 112 113 152 153 154 155 156 157 167 168 184 185 186 187 188 189 190 191 192 193 194 219 220 250 251
parc                 : 36 37 48 101 102 103 104 105 106 107 108 109 110 111 112 113 152 153 154 155 156 157 167 168 184 185 186 187 188 189 190 191 192 193 194 219 220 250 251
pow                  : 36
powf                 : 37
println              : 112 113
pub                  : 241
punto                : 101 102 103 104 105 106 107 108 109 110 111 121 186 187 188 189 190 191 192 193 194 196 219 220 221 221 234 235 237
puntoycoma           : 9 10 11 14 15 16 19 21 22 23 24 27 28 30 179 203 204 205 207
push                 : 186 187
remove               : 189
return               : 148 149
sqrt                 : 106 107
str                  : 85
string               : 83
struct               : 222
toOwned              : 109 111
toString             : 108 110
true                 : 76
usize                : 86
vecI                 : 178 179
while                : 150
withcapacity         : 185

Nonterminals, with rules where they appear

ABS                  : 55
ACCESO_MOD           : 30 66
ACCESO_STRUCT        : 65
ACCESVEC             : 64
ARREGLO              : 71 199 200 201 202 210 215
ARRFOR               : 213
ASIGNACION           : 11 131
BLOQUE_INST          : 122 123 123 124 125 126 140 144 150 152 153 154 155 156 157 213
BRAZO                : 138 139
BRAZOS               : 125 127 138
BRAZOS_TER           : 95 97
BRAZO_TER            : 97 98
BREAK                : 16
CALL                 : 19 59
CAPACITY             : 63
CAST_AS              : 54
CHARS                : 214
CLONE                : 56
CONJEXP              : 67 113 167 250
CONJEXPM             : 99 140 141 142
CONJEXP_STRUCT       : 230 231
CONJVECI             : 178 180
CONJ_ACCES           : 121 196 234 235 237
CONJ_ACCES_MOD       : 250 251 252
CONTAINS             : 61
CONTENT_MOD          : 238 239
CONTENT_STRUCT       : 222 223
CONTINUE             : 14
CONT_ARR             : 206 208
DECARREGLO           : 24 134 247
DECLARACION          : 10 130 246
DECSTRUCT            : 27 136 249
DECVECTOR            : 21 135 248
DIMENSION_ARR        : 163 199 200 203
ELARR                : 208 209
ELCONJ               : 67 68
ELEMENT_MOD          : 239 240
ELSTRUCT             : 223 224
ELVEC                : 180 181
EXPRESION            : 18 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 69 72 87 87 88 88 89 89 89 90 90 90 91 91 91 92 92 92 93 93 94 94 95 95 96 96 99 100 101 103 106 108 109 112 113 114 115 116 117 119 120 121 122 123 124 125 126 127 128 142 143 146 148 150 179 179 182 185 186 188 188 189 190 191 197 198 203 204 205 207 207 211 219 221 221 233 237
EXSTRUCT             : 231 232
FORIN                : 25
FUNCION              : 5 20 243
FUNCVEC              : 173 174
ID                   : 50 218
IF                   : 12 124
IF_TER               : 51 93 94
INDEXS               : 105 120 121 192 195 196 197
INICIO               : 0
INSERT               : 23 133
INSTRUCCION          : 7 8
INSTRUCCIONES        : 7 87 89 89 91 92 93 151
INSTRUCCIONES_RUST   : 1 2
INSTRUCCION_1LINE    : 127 128 141
INST_MOD             : 241 242
INST_RUST            : 2 3
LEN                  : 62
LISTAPARAMETROS      : 152 153 156 157 158
LOOP                 : 53
MATCH                : 13
MATCH_TER            : 52
MODULO               : 4 29 244
MOD_VAR_STRUCT       : 28 137
PARAMETRO            : 158 159
PRINT                : 9 129
PUSH                 : 22 132
RANGO                : 217
REMOVE               : 60
RETURN               : 15
SQRT                 : 57
STRUCT               : 6 26 245
STRUCT_EXP           : 212 226 227 228 229
TIPODATO             : 49
TIPOVAR              : 100 114 116 118 152 154 160 161 162 176 204 225
TO_STRING_OWNED      : 58
VEC                  : 157 164 165 166 171 172 173 174 175
VECI                 : 70 169 170 171 172 183 187 216
WHILE                : 17

Parsing method: LALR

state 0

    (0) S' -> . INICIO
    (1) INICIO -> . INSTRUCCIONES_RUST
    (2) INSTRUCCIONES_RUST -> . INSTRUCCIONES_RUST INST_RUST
    (3) INSTRUCCIONES_RUST -> . INST_RUST
    (4) INST_RUST -> . MODULO
    (5) INST_RUST -> . FUNCION
    (6) INST_RUST -> . STRUCT
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec

    modulo          shift and go to state 7
    fn              shift and go to state 8
    struct          shift and go to state 9

    INICIO                         shift and go to state 1
    INSTRUCCIONES_RUST             shift and go to state 2
    INST_RUST                      shift and go to state 3
    MODULO                         shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6

state 1

    (0) S' -> INICIO .



state 2

    (1) INICIO -> INSTRUCCIONES_RUST .
    (2) INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST . INST_RUST
    (4) INST_RUST -> . MODULO
    (5) INST_RUST -> . FUNCION
    (6) INST_RUST -> . STRUCT
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec

    $end            reduce using rule 1 (INICIO -> INSTRUCCIONES_RUST .)
    modulo          shift and go to state 7
    fn              shift and go to state 8
    struct          shift and go to state 9

    INST_RUST                      shift and go to state 10
    MODULO                         shift and go to state 4
    FUNCION                        shift and go to state 5
    STRUCT                         shift and go to state 6

state 3

    (3) INSTRUCCIONES_RUST -> INST_RUST .

    modulo          reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    fn              reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    struct          reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)
    $end            reduce using rule 3 (INSTRUCCIONES_RUST -> INST_RUST .)


state 4

    (4) INST_RUST -> MODULO .

    modulo          reduce using rule 4 (INST_RUST -> MODULO .)
    fn              reduce using rule 4 (INST_RUST -> MODULO .)
    struct          reduce using rule 4 (INST_RUST -> MODULO .)
    $end            reduce using rule 4 (INST_RUST -> MODULO .)


state 5

    (5) INST_RUST -> FUNCION .

    modulo          reduce using rule 5 (INST_RUST -> FUNCION .)
    fn              reduce using rule 5 (INST_RUST -> FUNCION .)
    struct          reduce using rule 5 (INST_RUST -> FUNCION .)
    $end            reduce using rule 5 (INST_RUST -> FUNCION .)


state 6

    (6) INST_RUST -> STRUCT .

    modulo          reduce using rule 6 (INST_RUST -> STRUCT .)
    fn              reduce using rule 6 (INST_RUST -> STRUCT .)
    struct          reduce using rule 6 (INST_RUST -> STRUCT .)
    $end            reduce using rule 6 (INST_RUST -> STRUCT .)


state 7

    (238) MODULO -> modulo . id llavea CONTENT_MOD llavec

    id              shift and go to state 11


state 8

    (152) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> fn . id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> fn . id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> fn . id para parc BLOQUE_INST
    (156) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> fn . id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST

    id              shift and go to state 12


state 9

    (222) STRUCT -> struct . id llavea CONTENT_STRUCT llavec

    id              shift and go to state 13


state 10

    (2) INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .

    modulo          reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    fn              reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    struct          reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)
    $end            reduce using rule 2 (INSTRUCCIONES_RUST -> INSTRUCCIONES_RUST INST_RUST .)


state 11

    (238) MODULO -> modulo id . llavea CONTENT_MOD llavec

    llavea          shift and go to state 14


state 12

    (152) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> fn id . para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> fn id . para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> fn id . para parc BLOQUE_INST
    (156) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> fn id . para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST

    para            shift and go to state 15


state 13

    (222) STRUCT -> struct id . llavea CONTENT_STRUCT llavec

    llavea          shift and go to state 16


state 14

    (238) MODULO -> modulo id llavea . CONTENT_MOD llavec
    (239) CONTENT_MOD -> . CONTENT_MOD ELEMENT_MOD
    (240) CONTENT_MOD -> . ELEMENT_MOD
    (241) ELEMENT_MOD -> . pub INST_MOD
    (242) ELEMENT_MOD -> . INST_MOD
    (243) INST_MOD -> . FUNCION
    (244) INST_MOD -> . MODULO
    (245) INST_MOD -> . STRUCT
    (246) INST_MOD -> . DECLARACION
    (247) INST_MOD -> . DECARREGLO
    (248) INST_MOD -> . DECVECTOR
    (249) INST_MOD -> . DECSTRUCT
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    pub             shift and go to state 19
    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    CONTENT_MOD                    shift and go to state 17
    ELEMENT_MOD                    shift and go to state 18
    INST_MOD                       shift and go to state 20
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 15

    (152) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> fn id para . LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> fn id para . parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> fn id para . parc BLOQUE_INST
    (156) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> fn id para . LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (158) LISTAPARAMETROS -> . LISTAPARAMETROS coma PARAMETRO
    (159) LISTAPARAMETROS -> . PARAMETRO
    (160) PARAMETRO -> . id dospuntos TIPOVAR
    (161) PARAMETRO -> . mut id dospuntos TIPOVAR
    (162) PARAMETRO -> . id dospuntos ampersand mut cora TIPOVAR corc
    (163) PARAMETRO -> . id dospuntos ampersand mut DIMENSION_ARR
    (164) PARAMETRO -> . id dospuntos ampersand mut VEC
    (165) PARAMETRO -> . id dospuntos VEC
    (166) PARAMETRO -> . mut id dospuntos VEC

    parc            shift and go to state 31
    id              shift and go to state 29
    mut             shift and go to state 33

    LISTAPARAMETROS                shift and go to state 30
    PARAMETRO                      shift and go to state 32

state 16

    (222) STRUCT -> struct id llavea . CONTENT_STRUCT llavec
    (223) CONTENT_STRUCT -> . CONTENT_STRUCT coma ELSTRUCT
    (224) CONTENT_STRUCT -> . ELSTRUCT
    (225) ELSTRUCT -> . id dospuntos TIPOVAR

    id              shift and go to state 34

    CONTENT_STRUCT                 shift and go to state 35
    ELSTRUCT                       shift and go to state 36

state 17

    (238) MODULO -> modulo id llavea CONTENT_MOD . llavec
    (239) CONTENT_MOD -> CONTENT_MOD . ELEMENT_MOD
    (241) ELEMENT_MOD -> . pub INST_MOD
    (242) ELEMENT_MOD -> . INST_MOD
    (243) INST_MOD -> . FUNCION
    (244) INST_MOD -> . MODULO
    (245) INST_MOD -> . STRUCT
    (246) INST_MOD -> . DECLARACION
    (247) INST_MOD -> . DECARREGLO
    (248) INST_MOD -> . DECVECTOR
    (249) INST_MOD -> . DECSTRUCT
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    llavec          shift and go to state 37
    pub             shift and go to state 19
    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    ELEMENT_MOD                    shift and go to state 38
    INST_MOD                       shift and go to state 20
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 18

    (240) CONTENT_MOD -> ELEMENT_MOD .

    llavec          reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)
    pub             reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)
    fn              reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)
    modulo          reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)
    struct          reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)
    let             reduce using rule 240 (CONTENT_MOD -> ELEMENT_MOD .)


state 19

    (241) ELEMENT_MOD -> pub . INST_MOD
    (243) INST_MOD -> . FUNCION
    (244) INST_MOD -> . MODULO
    (245) INST_MOD -> . STRUCT
    (246) INST_MOD -> . DECLARACION
    (247) INST_MOD -> . DECARREGLO
    (248) INST_MOD -> . DECVECTOR
    (249) INST_MOD -> . DECSTRUCT
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP

    fn              shift and go to state 8
    modulo          shift and go to state 7
    struct          shift and go to state 9
    let             shift and go to state 28

    INST_MOD                       shift and go to state 39
    FUNCION                        shift and go to state 21
    MODULO                         shift and go to state 22
    STRUCT                         shift and go to state 23
    DECLARACION                    shift and go to state 24
    DECARREGLO                     shift and go to state 25
    DECVECTOR                      shift and go to state 26
    DECSTRUCT                      shift and go to state 27

state 20

    (242) ELEMENT_MOD -> INST_MOD .

    llavec          reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)
    pub             reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)
    fn              reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)
    modulo          reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)
    struct          reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)
    let             reduce using rule 242 (ELEMENT_MOD -> INST_MOD .)


state 21

    (243) INST_MOD -> FUNCION .

    llavec          reduce using rule 243 (INST_MOD -> FUNCION .)
    pub             reduce using rule 243 (INST_MOD -> FUNCION .)
    fn              reduce using rule 243 (INST_MOD -> FUNCION .)
    modulo          reduce using rule 243 (INST_MOD -> FUNCION .)
    struct          reduce using rule 243 (INST_MOD -> FUNCION .)
    let             reduce using rule 243 (INST_MOD -> FUNCION .)


state 22

    (244) INST_MOD -> MODULO .

    llavec          reduce using rule 244 (INST_MOD -> MODULO .)
    pub             reduce using rule 244 (INST_MOD -> MODULO .)
    fn              reduce using rule 244 (INST_MOD -> MODULO .)
    modulo          reduce using rule 244 (INST_MOD -> MODULO .)
    struct          reduce using rule 244 (INST_MOD -> MODULO .)
    let             reduce using rule 244 (INST_MOD -> MODULO .)


state 23

    (245) INST_MOD -> STRUCT .

    llavec          reduce using rule 245 (INST_MOD -> STRUCT .)
    pub             reduce using rule 245 (INST_MOD -> STRUCT .)
    fn              reduce using rule 245 (INST_MOD -> STRUCT .)
    modulo          reduce using rule 245 (INST_MOD -> STRUCT .)
    struct          reduce using rule 245 (INST_MOD -> STRUCT .)
    let             reduce using rule 245 (INST_MOD -> STRUCT .)


state 24

    (246) INST_MOD -> DECLARACION .

    llavec          reduce using rule 246 (INST_MOD -> DECLARACION .)
    pub             reduce using rule 246 (INST_MOD -> DECLARACION .)
    fn              reduce using rule 246 (INST_MOD -> DECLARACION .)
    modulo          reduce using rule 246 (INST_MOD -> DECLARACION .)
    struct          reduce using rule 246 (INST_MOD -> DECLARACION .)
    let             reduce using rule 246 (INST_MOD -> DECLARACION .)


state 25

    (247) INST_MOD -> DECARREGLO .

    llavec          reduce using rule 247 (INST_MOD -> DECARREGLO .)
    pub             reduce using rule 247 (INST_MOD -> DECARREGLO .)
    fn              reduce using rule 247 (INST_MOD -> DECARREGLO .)
    modulo          reduce using rule 247 (INST_MOD -> DECARREGLO .)
    struct          reduce using rule 247 (INST_MOD -> DECARREGLO .)
    let             reduce using rule 247 (INST_MOD -> DECARREGLO .)


state 26

    (248) INST_MOD -> DECVECTOR .

    llavec          reduce using rule 248 (INST_MOD -> DECVECTOR .)
    pub             reduce using rule 248 (INST_MOD -> DECVECTOR .)
    fn              reduce using rule 248 (INST_MOD -> DECVECTOR .)
    modulo          reduce using rule 248 (INST_MOD -> DECVECTOR .)
    struct          reduce using rule 248 (INST_MOD -> DECVECTOR .)
    let             reduce using rule 248 (INST_MOD -> DECVECTOR .)


state 27

    (249) INST_MOD -> DECSTRUCT .

    llavec          reduce using rule 249 (INST_MOD -> DECSTRUCT .)
    pub             reduce using rule 249 (INST_MOD -> DECSTRUCT .)
    fn              reduce using rule 249 (INST_MOD -> DECSTRUCT .)
    modulo          reduce using rule 249 (INST_MOD -> DECSTRUCT .)
    struct          reduce using rule 249 (INST_MOD -> DECSTRUCT .)
    let             reduce using rule 249 (INST_MOD -> DECSTRUCT .)


state 28

    (114) DECLARACION -> let . mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let . mut id igual EXPRESION
    (116) DECLARACION -> let . id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let . id igual EXPRESION
    (118) DECLARACION -> let . mut id dospuntos TIPOVAR
    (199) DECARREGLO -> let . id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> let . mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> let . id igual ARREGLO
    (202) DECARREGLO -> let . mut id igual ARREGLO
    (169) DECVECTOR -> let . id igual VECI
    (170) DECVECTOR -> let . mut id igual VECI
    (171) DECVECTOR -> let . id dospuntos VEC igual VECI
    (172) DECVECTOR -> let . mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> let . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> let . mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> let . id igual STRUCT_EXP
    (227) DECSTRUCT -> let . mut id igual STRUCT_EXP
    (228) DECSTRUCT -> let . id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> let . mut id dospuntos id igual STRUCT_EXP

    mut             shift and go to state 40
    id              shift and go to state 41


state 29

    (160) PARAMETRO -> id . dospuntos TIPOVAR
    (162) PARAMETRO -> id . dospuntos ampersand mut cora TIPOVAR corc
    (163) PARAMETRO -> id . dospuntos ampersand mut DIMENSION_ARR
    (164) PARAMETRO -> id . dospuntos ampersand mut VEC
    (165) PARAMETRO -> id . dospuntos VEC

    dospuntos       shift and go to state 42


state 30

    (152) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> fn id para LISTAPARAMETROS . parc BLOQUE_INST
    (156) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor id BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS . parc menos mayor VEC BLOQUE_INST
    (158) LISTAPARAMETROS -> LISTAPARAMETROS . coma PARAMETRO

    parc            shift and go to state 43
    coma            shift and go to state 44


state 31

    (154) FUNCION -> fn id para parc . menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> fn id para parc . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    menos           shift and go to state 45
    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 46

state 32

    (159) LISTAPARAMETROS -> PARAMETRO .

    parc            reduce using rule 159 (LISTAPARAMETROS -> PARAMETRO .)
    coma            reduce using rule 159 (LISTAPARAMETROS -> PARAMETRO .)


state 33

    (161) PARAMETRO -> mut . id dospuntos TIPOVAR
    (166) PARAMETRO -> mut . id dospuntos VEC

    id              shift and go to state 48


state 34

    (225) ELSTRUCT -> id . dospuntos TIPOVAR

    dospuntos       shift and go to state 49


state 35

    (222) STRUCT -> struct id llavea CONTENT_STRUCT . llavec
    (223) CONTENT_STRUCT -> CONTENT_STRUCT . coma ELSTRUCT

    llavec          shift and go to state 50
    coma            shift and go to state 51


state 36

    (224) CONTENT_STRUCT -> ELSTRUCT .

    llavec          reduce using rule 224 (CONTENT_STRUCT -> ELSTRUCT .)
    coma            reduce using rule 224 (CONTENT_STRUCT -> ELSTRUCT .)


state 37

    (238) MODULO -> modulo id llavea CONTENT_MOD llavec .

    modulo          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    fn              reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    struct          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    $end            reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    llavec          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    pub             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    let             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    println         reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    id              reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    if              reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    match           reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    continue        reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    return          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    break           reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    while           reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    i64             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    f64             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    menos           reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    not             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    para            reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    for             reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    entero          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    decimal         reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    cadena          reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    true            reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    false           reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    caracter        reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)
    loop            reduce using rule 238 (MODULO -> modulo id llavea CONTENT_MOD llavec .)


state 38

    (239) CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .

    llavec          reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    pub             reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    fn              reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    modulo          reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    struct          reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)
    let             reduce using rule 239 (CONTENT_MOD -> CONTENT_MOD ELEMENT_MOD .)


state 39

    (241) ELEMENT_MOD -> pub INST_MOD .

    llavec          reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)
    pub             reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)
    fn              reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)
    modulo          reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)
    struct          reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)
    let             reduce using rule 241 (ELEMENT_MOD -> pub INST_MOD .)


state 40

    (114) DECLARACION -> let mut . id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let mut . id igual EXPRESION
    (118) DECLARACION -> let mut . id dospuntos TIPOVAR
    (200) DECARREGLO -> let mut . id dospuntos DIMENSION_ARR igual ARREGLO
    (202) DECARREGLO -> let mut . id igual ARREGLO
    (170) DECVECTOR -> let mut . id igual VECI
    (172) DECVECTOR -> let mut . id dospuntos VEC igual VECI
    (174) DECVECTOR -> let mut . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (227) DECSTRUCT -> let mut . id igual STRUCT_EXP
    (229) DECSTRUCT -> let mut . id dospuntos id igual STRUCT_EXP

    id              shift and go to state 52


state 41

    (116) DECLARACION -> let id . dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let id . igual EXPRESION
    (199) DECARREGLO -> let id . dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> let id . igual ARREGLO
    (169) DECVECTOR -> let id . igual VECI
    (171) DECVECTOR -> let id . dospuntos VEC igual VECI
    (173) DECVECTOR -> let id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> let id . igual STRUCT_EXP
    (228) DECSTRUCT -> let id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 53
    igual           shift and go to state 54


state 42

    (160) PARAMETRO -> id dospuntos . TIPOVAR
    (162) PARAMETRO -> id dospuntos . ampersand mut cora TIPOVAR corc
    (163) PARAMETRO -> id dospuntos . ampersand mut DIMENSION_ARR
    (164) PARAMETRO -> id dospuntos . ampersand mut VEC
    (165) PARAMETRO -> id dospuntos . VEC
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    ampersand       shift and go to state 56
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    Vec             shift and go to state 65

    TIPOVAR                        shift and go to state 55
    VEC                            shift and go to state 57

state 43

    (152) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> fn id para LISTAPARAMETROS parc . BLOQUE_INST
    (156) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor id BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS parc . menos mayor VEC BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    menos           shift and go to state 66
    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 67

state 44

    (158) LISTAPARAMETROS -> LISTAPARAMETROS coma . PARAMETRO
    (160) PARAMETRO -> . id dospuntos TIPOVAR
    (161) PARAMETRO -> . mut id dospuntos TIPOVAR
    (162) PARAMETRO -> . id dospuntos ampersand mut cora TIPOVAR corc
    (163) PARAMETRO -> . id dospuntos ampersand mut DIMENSION_ARR
    (164) PARAMETRO -> . id dospuntos ampersand mut VEC
    (165) PARAMETRO -> . id dospuntos VEC
    (166) PARAMETRO -> . mut id dospuntos VEC

    id              shift and go to state 29
    mut             shift and go to state 33

    PARAMETRO                      shift and go to state 68

state 45

    (154) FUNCION -> fn id para parc menos . mayor TIPOVAR BLOQUE_INST

    mayor           shift and go to state 69


state 46

    (155) FUNCION -> fn id para parc BLOQUE_INST .

    modulo          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    fn              reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    struct          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    $end            reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    llavec          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    pub             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    let             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    println         reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    id              reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    if              reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    match           reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    continue        reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    return          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    break           reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    while           reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    i64             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    f64             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    menos           reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    not             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    para            reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    for             reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    entero          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    decimal         reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    cadena          reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    true            reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    false           reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    caracter        reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)
    loop            reduce using rule 155 (FUNCION -> fn id para parc BLOQUE_INST .)


state 47

    (151) BLOQUE_INST -> llavea . INSTRUCCIONES llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES

    println         shift and go to state 94
    let             shift and go to state 96
    id              shift and go to state 97
    if              shift and go to state 98
    match           shift and go to state 99
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    loop            shift and go to state 131

    INSTRUCCIONES                  shift and go to state 70
    INSTRUCCION                    shift and go to state 71
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    EXPRESION                      shift and go to state 81
    CALL                           shift and go to state 82
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92
    ACCESO_MOD                     shift and go to state 93
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123

state 48

    (161) PARAMETRO -> mut id . dospuntos TIPOVAR
    (166) PARAMETRO -> mut id . dospuntos VEC

    dospuntos       shift and go to state 132


state 49

    (225) ELSTRUCT -> id dospuntos . TIPOVAR
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize

    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64

    TIPOVAR                        shift and go to state 133

state 50

    (222) STRUCT -> struct id llavea CONTENT_STRUCT llavec .

    modulo          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    fn              reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    struct          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    $end            reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    llavec          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    pub             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    let             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    println         reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    id              reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    if              reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    match           reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    continue        reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    return          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    break           reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    while           reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    i64             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    f64             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    menos           reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    not             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    para            reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    for             reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    entero          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    decimal         reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    cadena          reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    true            reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    false           reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    caracter        reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)
    loop            reduce using rule 222 (STRUCT -> struct id llavea CONTENT_STRUCT llavec .)


state 51

    (223) CONTENT_STRUCT -> CONTENT_STRUCT coma . ELSTRUCT
    (225) ELSTRUCT -> . id dospuntos TIPOVAR

    id              shift and go to state 34

    ELSTRUCT                       shift and go to state 134

state 52

    (114) DECLARACION -> let mut id . dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let mut id . igual EXPRESION
    (118) DECLARACION -> let mut id . dospuntos TIPOVAR
    (200) DECARREGLO -> let mut id . dospuntos DIMENSION_ARR igual ARREGLO
    (202) DECARREGLO -> let mut id . igual ARREGLO
    (170) DECVECTOR -> let mut id . igual VECI
    (172) DECVECTOR -> let mut id . dospuntos VEC igual VECI
    (174) DECVECTOR -> let mut id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (227) DECSTRUCT -> let mut id . igual STRUCT_EXP
    (229) DECSTRUCT -> let mut id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 135
    igual           shift and go to state 136


state 53

    (116) DECLARACION -> let id dospuntos . TIPOVAR igual EXPRESION
    (199) DECARREGLO -> let id dospuntos . DIMENSION_ARR igual ARREGLO
    (171) DECVECTOR -> let id dospuntos . VEC igual VECI
    (173) DECVECTOR -> let id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (228) DECSTRUCT -> let id dospuntos . id igual STRUCT_EXP
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    id              shift and go to state 137
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    cora            shift and go to state 141
    Vec             shift and go to state 65

    TIPOVAR                        shift and go to state 138
    DIMENSION_ARR                  shift and go to state 139
    VEC                            shift and go to state 140

state 54

    (117) DECLARACION -> let id igual . EXPRESION
    (201) DECARREGLO -> let id igual . ARREGLO
    (169) DECVECTOR -> let id igual . VECI
    (226) DECSTRUCT -> let id igual . STRUCT_EXP
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    cora            shift and go to state 149
    vecI            shift and go to state 150
    id              shift and go to state 142
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 143
    ARREGLO                        shift and go to state 144
    VECI                           shift and go to state 145
    STRUCT_EXP                     shift and go to state 146
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 55

    (160) PARAMETRO -> id dospuntos TIPOVAR .

    parc            reduce using rule 160 (PARAMETRO -> id dospuntos TIPOVAR .)
    coma            reduce using rule 160 (PARAMETRO -> id dospuntos TIPOVAR .)


state 56

    (162) PARAMETRO -> id dospuntos ampersand . mut cora TIPOVAR corc
    (163) PARAMETRO -> id dospuntos ampersand . mut DIMENSION_ARR
    (164) PARAMETRO -> id dospuntos ampersand . mut VEC

    mut             shift and go to state 153


state 57

    (165) PARAMETRO -> id dospuntos VEC .

    parc            reduce using rule 165 (PARAMETRO -> id dospuntos VEC .)
    coma            reduce using rule 165 (PARAMETRO -> id dospuntos VEC .)


state 58

    (80) TIPOVAR -> i64 .

    parc            reduce using rule 80 (TIPOVAR -> i64 .)
    coma            reduce using rule 80 (TIPOVAR -> i64 .)
    llavec          reduce using rule 80 (TIPOVAR -> i64 .)
    igual           reduce using rule 80 (TIPOVAR -> i64 .)
    llavea          reduce using rule 80 (TIPOVAR -> i64 .)
    pub             reduce using rule 80 (TIPOVAR -> i64 .)
    fn              reduce using rule 80 (TIPOVAR -> i64 .)
    modulo          reduce using rule 80 (TIPOVAR -> i64 .)
    struct          reduce using rule 80 (TIPOVAR -> i64 .)
    let             reduce using rule 80 (TIPOVAR -> i64 .)
    puntoycoma      reduce using rule 80 (TIPOVAR -> i64 .)
    mayor           reduce using rule 80 (TIPOVAR -> i64 .)
    mas             reduce using rule 80 (TIPOVAR -> i64 .)
    menos           reduce using rule 80 (TIPOVAR -> i64 .)
    div             reduce using rule 80 (TIPOVAR -> i64 .)
    multi           reduce using rule 80 (TIPOVAR -> i64 .)
    mod             reduce using rule 80 (TIPOVAR -> i64 .)
    menor           reduce using rule 80 (TIPOVAR -> i64 .)
    mayorigual      reduce using rule 80 (TIPOVAR -> i64 .)
    menorigual      reduce using rule 80 (TIPOVAR -> i64 .)
    igualigual      reduce using rule 80 (TIPOVAR -> i64 .)
    diferente       reduce using rule 80 (TIPOVAR -> i64 .)
    and             reduce using rule 80 (TIPOVAR -> i64 .)
    or              reduce using rule 80 (TIPOVAR -> i64 .)
    as              reduce using rule 80 (TIPOVAR -> i64 .)
    punto           reduce using rule 80 (TIPOVAR -> i64 .)
    println         reduce using rule 80 (TIPOVAR -> i64 .)
    id              reduce using rule 80 (TIPOVAR -> i64 .)
    if              reduce using rule 80 (TIPOVAR -> i64 .)
    match           reduce using rule 80 (TIPOVAR -> i64 .)
    continue        reduce using rule 80 (TIPOVAR -> i64 .)
    return          reduce using rule 80 (TIPOVAR -> i64 .)
    break           reduce using rule 80 (TIPOVAR -> i64 .)
    while           reduce using rule 80 (TIPOVAR -> i64 .)
    i64             reduce using rule 80 (TIPOVAR -> i64 .)
    f64             reduce using rule 80 (TIPOVAR -> i64 .)
    not             reduce using rule 80 (TIPOVAR -> i64 .)
    para            reduce using rule 80 (TIPOVAR -> i64 .)
    for             reduce using rule 80 (TIPOVAR -> i64 .)
    entero          reduce using rule 80 (TIPOVAR -> i64 .)
    decimal         reduce using rule 80 (TIPOVAR -> i64 .)
    cadena          reduce using rule 80 (TIPOVAR -> i64 .)
    true            reduce using rule 80 (TIPOVAR -> i64 .)
    false           reduce using rule 80 (TIPOVAR -> i64 .)
    caracter        reduce using rule 80 (TIPOVAR -> i64 .)
    loop            reduce using rule 80 (TIPOVAR -> i64 .)
    corc            reduce using rule 80 (TIPOVAR -> i64 .)
    bvertical       reduce using rule 80 (TIPOVAR -> i64 .)


state 59

    (81) TIPOVAR -> f64 .

    parc            reduce using rule 81 (TIPOVAR -> f64 .)
    coma            reduce using rule 81 (TIPOVAR -> f64 .)
    llavec          reduce using rule 81 (TIPOVAR -> f64 .)
    igual           reduce using rule 81 (TIPOVAR -> f64 .)
    llavea          reduce using rule 81 (TIPOVAR -> f64 .)
    pub             reduce using rule 81 (TIPOVAR -> f64 .)
    fn              reduce using rule 81 (TIPOVAR -> f64 .)
    modulo          reduce using rule 81 (TIPOVAR -> f64 .)
    struct          reduce using rule 81 (TIPOVAR -> f64 .)
    let             reduce using rule 81 (TIPOVAR -> f64 .)
    puntoycoma      reduce using rule 81 (TIPOVAR -> f64 .)
    mayor           reduce using rule 81 (TIPOVAR -> f64 .)
    mas             reduce using rule 81 (TIPOVAR -> f64 .)
    menos           reduce using rule 81 (TIPOVAR -> f64 .)
    div             reduce using rule 81 (TIPOVAR -> f64 .)
    multi           reduce using rule 81 (TIPOVAR -> f64 .)
    mod             reduce using rule 81 (TIPOVAR -> f64 .)
    menor           reduce using rule 81 (TIPOVAR -> f64 .)
    mayorigual      reduce using rule 81 (TIPOVAR -> f64 .)
    menorigual      reduce using rule 81 (TIPOVAR -> f64 .)
    igualigual      reduce using rule 81 (TIPOVAR -> f64 .)
    diferente       reduce using rule 81 (TIPOVAR -> f64 .)
    and             reduce using rule 81 (TIPOVAR -> f64 .)
    or              reduce using rule 81 (TIPOVAR -> f64 .)
    as              reduce using rule 81 (TIPOVAR -> f64 .)
    punto           reduce using rule 81 (TIPOVAR -> f64 .)
    println         reduce using rule 81 (TIPOVAR -> f64 .)
    id              reduce using rule 81 (TIPOVAR -> f64 .)
    if              reduce using rule 81 (TIPOVAR -> f64 .)
    match           reduce using rule 81 (TIPOVAR -> f64 .)
    continue        reduce using rule 81 (TIPOVAR -> f64 .)
    return          reduce using rule 81 (TIPOVAR -> f64 .)
    break           reduce using rule 81 (TIPOVAR -> f64 .)
    while           reduce using rule 81 (TIPOVAR -> f64 .)
    i64             reduce using rule 81 (TIPOVAR -> f64 .)
    f64             reduce using rule 81 (TIPOVAR -> f64 .)
    not             reduce using rule 81 (TIPOVAR -> f64 .)
    para            reduce using rule 81 (TIPOVAR -> f64 .)
    for             reduce using rule 81 (TIPOVAR -> f64 .)
    entero          reduce using rule 81 (TIPOVAR -> f64 .)
    decimal         reduce using rule 81 (TIPOVAR -> f64 .)
    cadena          reduce using rule 81 (TIPOVAR -> f64 .)
    true            reduce using rule 81 (TIPOVAR -> f64 .)
    false           reduce using rule 81 (TIPOVAR -> f64 .)
    caracter        reduce using rule 81 (TIPOVAR -> f64 .)
    loop            reduce using rule 81 (TIPOVAR -> f64 .)
    corc            reduce using rule 81 (TIPOVAR -> f64 .)
    bvertical       reduce using rule 81 (TIPOVAR -> f64 .)


state 60

    (82) TIPOVAR -> bool .

    parc            reduce using rule 82 (TIPOVAR -> bool .)
    coma            reduce using rule 82 (TIPOVAR -> bool .)
    llavec          reduce using rule 82 (TIPOVAR -> bool .)
    igual           reduce using rule 82 (TIPOVAR -> bool .)
    llavea          reduce using rule 82 (TIPOVAR -> bool .)
    pub             reduce using rule 82 (TIPOVAR -> bool .)
    fn              reduce using rule 82 (TIPOVAR -> bool .)
    modulo          reduce using rule 82 (TIPOVAR -> bool .)
    struct          reduce using rule 82 (TIPOVAR -> bool .)
    let             reduce using rule 82 (TIPOVAR -> bool .)
    puntoycoma      reduce using rule 82 (TIPOVAR -> bool .)
    mayor           reduce using rule 82 (TIPOVAR -> bool .)
    mas             reduce using rule 82 (TIPOVAR -> bool .)
    menos           reduce using rule 82 (TIPOVAR -> bool .)
    div             reduce using rule 82 (TIPOVAR -> bool .)
    multi           reduce using rule 82 (TIPOVAR -> bool .)
    mod             reduce using rule 82 (TIPOVAR -> bool .)
    menor           reduce using rule 82 (TIPOVAR -> bool .)
    mayorigual      reduce using rule 82 (TIPOVAR -> bool .)
    menorigual      reduce using rule 82 (TIPOVAR -> bool .)
    igualigual      reduce using rule 82 (TIPOVAR -> bool .)
    diferente       reduce using rule 82 (TIPOVAR -> bool .)
    and             reduce using rule 82 (TIPOVAR -> bool .)
    or              reduce using rule 82 (TIPOVAR -> bool .)
    as              reduce using rule 82 (TIPOVAR -> bool .)
    punto           reduce using rule 82 (TIPOVAR -> bool .)
    println         reduce using rule 82 (TIPOVAR -> bool .)
    id              reduce using rule 82 (TIPOVAR -> bool .)
    if              reduce using rule 82 (TIPOVAR -> bool .)
    match           reduce using rule 82 (TIPOVAR -> bool .)
    continue        reduce using rule 82 (TIPOVAR -> bool .)
    return          reduce using rule 82 (TIPOVAR -> bool .)
    break           reduce using rule 82 (TIPOVAR -> bool .)
    while           reduce using rule 82 (TIPOVAR -> bool .)
    i64             reduce using rule 82 (TIPOVAR -> bool .)
    f64             reduce using rule 82 (TIPOVAR -> bool .)
    not             reduce using rule 82 (TIPOVAR -> bool .)
    para            reduce using rule 82 (TIPOVAR -> bool .)
    for             reduce using rule 82 (TIPOVAR -> bool .)
    entero          reduce using rule 82 (TIPOVAR -> bool .)
    decimal         reduce using rule 82 (TIPOVAR -> bool .)
    cadena          reduce using rule 82 (TIPOVAR -> bool .)
    true            reduce using rule 82 (TIPOVAR -> bool .)
    false           reduce using rule 82 (TIPOVAR -> bool .)
    caracter        reduce using rule 82 (TIPOVAR -> bool .)
    loop            reduce using rule 82 (TIPOVAR -> bool .)
    corc            reduce using rule 82 (TIPOVAR -> bool .)
    bvertical       reduce using rule 82 (TIPOVAR -> bool .)


state 61

    (83) TIPOVAR -> string .

    parc            reduce using rule 83 (TIPOVAR -> string .)
    coma            reduce using rule 83 (TIPOVAR -> string .)
    llavec          reduce using rule 83 (TIPOVAR -> string .)
    igual           reduce using rule 83 (TIPOVAR -> string .)
    llavea          reduce using rule 83 (TIPOVAR -> string .)
    pub             reduce using rule 83 (TIPOVAR -> string .)
    fn              reduce using rule 83 (TIPOVAR -> string .)
    modulo          reduce using rule 83 (TIPOVAR -> string .)
    struct          reduce using rule 83 (TIPOVAR -> string .)
    let             reduce using rule 83 (TIPOVAR -> string .)
    puntoycoma      reduce using rule 83 (TIPOVAR -> string .)
    mayor           reduce using rule 83 (TIPOVAR -> string .)
    mas             reduce using rule 83 (TIPOVAR -> string .)
    menos           reduce using rule 83 (TIPOVAR -> string .)
    div             reduce using rule 83 (TIPOVAR -> string .)
    multi           reduce using rule 83 (TIPOVAR -> string .)
    mod             reduce using rule 83 (TIPOVAR -> string .)
    menor           reduce using rule 83 (TIPOVAR -> string .)
    mayorigual      reduce using rule 83 (TIPOVAR -> string .)
    menorigual      reduce using rule 83 (TIPOVAR -> string .)
    igualigual      reduce using rule 83 (TIPOVAR -> string .)
    diferente       reduce using rule 83 (TIPOVAR -> string .)
    and             reduce using rule 83 (TIPOVAR -> string .)
    or              reduce using rule 83 (TIPOVAR -> string .)
    as              reduce using rule 83 (TIPOVAR -> string .)
    punto           reduce using rule 83 (TIPOVAR -> string .)
    println         reduce using rule 83 (TIPOVAR -> string .)
    id              reduce using rule 83 (TIPOVAR -> string .)
    if              reduce using rule 83 (TIPOVAR -> string .)
    match           reduce using rule 83 (TIPOVAR -> string .)
    continue        reduce using rule 83 (TIPOVAR -> string .)
    return          reduce using rule 83 (TIPOVAR -> string .)
    break           reduce using rule 83 (TIPOVAR -> string .)
    while           reduce using rule 83 (TIPOVAR -> string .)
    i64             reduce using rule 83 (TIPOVAR -> string .)
    f64             reduce using rule 83 (TIPOVAR -> string .)
    not             reduce using rule 83 (TIPOVAR -> string .)
    para            reduce using rule 83 (TIPOVAR -> string .)
    for             reduce using rule 83 (TIPOVAR -> string .)
    entero          reduce using rule 83 (TIPOVAR -> string .)
    decimal         reduce using rule 83 (TIPOVAR -> string .)
    cadena          reduce using rule 83 (TIPOVAR -> string .)
    true            reduce using rule 83 (TIPOVAR -> string .)
    false           reduce using rule 83 (TIPOVAR -> string .)
    caracter        reduce using rule 83 (TIPOVAR -> string .)
    loop            reduce using rule 83 (TIPOVAR -> string .)
    corc            reduce using rule 83 (TIPOVAR -> string .)
    bvertical       reduce using rule 83 (TIPOVAR -> string .)


state 62

    (84) TIPOVAR -> char .

    parc            reduce using rule 84 (TIPOVAR -> char .)
    coma            reduce using rule 84 (TIPOVAR -> char .)
    llavec          reduce using rule 84 (TIPOVAR -> char .)
    igual           reduce using rule 84 (TIPOVAR -> char .)
    llavea          reduce using rule 84 (TIPOVAR -> char .)
    pub             reduce using rule 84 (TIPOVAR -> char .)
    fn              reduce using rule 84 (TIPOVAR -> char .)
    modulo          reduce using rule 84 (TIPOVAR -> char .)
    struct          reduce using rule 84 (TIPOVAR -> char .)
    let             reduce using rule 84 (TIPOVAR -> char .)
    puntoycoma      reduce using rule 84 (TIPOVAR -> char .)
    mayor           reduce using rule 84 (TIPOVAR -> char .)
    mas             reduce using rule 84 (TIPOVAR -> char .)
    menos           reduce using rule 84 (TIPOVAR -> char .)
    div             reduce using rule 84 (TIPOVAR -> char .)
    multi           reduce using rule 84 (TIPOVAR -> char .)
    mod             reduce using rule 84 (TIPOVAR -> char .)
    menor           reduce using rule 84 (TIPOVAR -> char .)
    mayorigual      reduce using rule 84 (TIPOVAR -> char .)
    menorigual      reduce using rule 84 (TIPOVAR -> char .)
    igualigual      reduce using rule 84 (TIPOVAR -> char .)
    diferente       reduce using rule 84 (TIPOVAR -> char .)
    and             reduce using rule 84 (TIPOVAR -> char .)
    or              reduce using rule 84 (TIPOVAR -> char .)
    as              reduce using rule 84 (TIPOVAR -> char .)
    punto           reduce using rule 84 (TIPOVAR -> char .)
    println         reduce using rule 84 (TIPOVAR -> char .)
    id              reduce using rule 84 (TIPOVAR -> char .)
    if              reduce using rule 84 (TIPOVAR -> char .)
    match           reduce using rule 84 (TIPOVAR -> char .)
    continue        reduce using rule 84 (TIPOVAR -> char .)
    return          reduce using rule 84 (TIPOVAR -> char .)
    break           reduce using rule 84 (TIPOVAR -> char .)
    while           reduce using rule 84 (TIPOVAR -> char .)
    i64             reduce using rule 84 (TIPOVAR -> char .)
    f64             reduce using rule 84 (TIPOVAR -> char .)
    not             reduce using rule 84 (TIPOVAR -> char .)
    para            reduce using rule 84 (TIPOVAR -> char .)
    for             reduce using rule 84 (TIPOVAR -> char .)
    entero          reduce using rule 84 (TIPOVAR -> char .)
    decimal         reduce using rule 84 (TIPOVAR -> char .)
    cadena          reduce using rule 84 (TIPOVAR -> char .)
    true            reduce using rule 84 (TIPOVAR -> char .)
    false           reduce using rule 84 (TIPOVAR -> char .)
    caracter        reduce using rule 84 (TIPOVAR -> char .)
    loop            reduce using rule 84 (TIPOVAR -> char .)
    corc            reduce using rule 84 (TIPOVAR -> char .)
    bvertical       reduce using rule 84 (TIPOVAR -> char .)


state 63

    (85) TIPOVAR -> str .

    parc            reduce using rule 85 (TIPOVAR -> str .)
    coma            reduce using rule 85 (TIPOVAR -> str .)
    llavec          reduce using rule 85 (TIPOVAR -> str .)
    igual           reduce using rule 85 (TIPOVAR -> str .)
    llavea          reduce using rule 85 (TIPOVAR -> str .)
    pub             reduce using rule 85 (TIPOVAR -> str .)
    fn              reduce using rule 85 (TIPOVAR -> str .)
    modulo          reduce using rule 85 (TIPOVAR -> str .)
    struct          reduce using rule 85 (TIPOVAR -> str .)
    let             reduce using rule 85 (TIPOVAR -> str .)
    puntoycoma      reduce using rule 85 (TIPOVAR -> str .)
    mayor           reduce using rule 85 (TIPOVAR -> str .)
    mas             reduce using rule 85 (TIPOVAR -> str .)
    menos           reduce using rule 85 (TIPOVAR -> str .)
    div             reduce using rule 85 (TIPOVAR -> str .)
    multi           reduce using rule 85 (TIPOVAR -> str .)
    mod             reduce using rule 85 (TIPOVAR -> str .)
    menor           reduce using rule 85 (TIPOVAR -> str .)
    mayorigual      reduce using rule 85 (TIPOVAR -> str .)
    menorigual      reduce using rule 85 (TIPOVAR -> str .)
    igualigual      reduce using rule 85 (TIPOVAR -> str .)
    diferente       reduce using rule 85 (TIPOVAR -> str .)
    and             reduce using rule 85 (TIPOVAR -> str .)
    or              reduce using rule 85 (TIPOVAR -> str .)
    as              reduce using rule 85 (TIPOVAR -> str .)
    punto           reduce using rule 85 (TIPOVAR -> str .)
    println         reduce using rule 85 (TIPOVAR -> str .)
    id              reduce using rule 85 (TIPOVAR -> str .)
    if              reduce using rule 85 (TIPOVAR -> str .)
    match           reduce using rule 85 (TIPOVAR -> str .)
    continue        reduce using rule 85 (TIPOVAR -> str .)
    return          reduce using rule 85 (TIPOVAR -> str .)
    break           reduce using rule 85 (TIPOVAR -> str .)
    while           reduce using rule 85 (TIPOVAR -> str .)
    i64             reduce using rule 85 (TIPOVAR -> str .)
    f64             reduce using rule 85 (TIPOVAR -> str .)
    not             reduce using rule 85 (TIPOVAR -> str .)
    para            reduce using rule 85 (TIPOVAR -> str .)
    for             reduce using rule 85 (TIPOVAR -> str .)
    entero          reduce using rule 85 (TIPOVAR -> str .)
    decimal         reduce using rule 85 (TIPOVAR -> str .)
    cadena          reduce using rule 85 (TIPOVAR -> str .)
    true            reduce using rule 85 (TIPOVAR -> str .)
    false           reduce using rule 85 (TIPOVAR -> str .)
    caracter        reduce using rule 85 (TIPOVAR -> str .)
    loop            reduce using rule 85 (TIPOVAR -> str .)
    corc            reduce using rule 85 (TIPOVAR -> str .)
    bvertical       reduce using rule 85 (TIPOVAR -> str .)


state 64

    (86) TIPOVAR -> usize .

    parc            reduce using rule 86 (TIPOVAR -> usize .)
    coma            reduce using rule 86 (TIPOVAR -> usize .)
    llavec          reduce using rule 86 (TIPOVAR -> usize .)
    igual           reduce using rule 86 (TIPOVAR -> usize .)
    llavea          reduce using rule 86 (TIPOVAR -> usize .)
    pub             reduce using rule 86 (TIPOVAR -> usize .)
    fn              reduce using rule 86 (TIPOVAR -> usize .)
    modulo          reduce using rule 86 (TIPOVAR -> usize .)
    struct          reduce using rule 86 (TIPOVAR -> usize .)
    let             reduce using rule 86 (TIPOVAR -> usize .)
    puntoycoma      reduce using rule 86 (TIPOVAR -> usize .)
    mayor           reduce using rule 86 (TIPOVAR -> usize .)
    mas             reduce using rule 86 (TIPOVAR -> usize .)
    menos           reduce using rule 86 (TIPOVAR -> usize .)
    div             reduce using rule 86 (TIPOVAR -> usize .)
    multi           reduce using rule 86 (TIPOVAR -> usize .)
    mod             reduce using rule 86 (TIPOVAR -> usize .)
    menor           reduce using rule 86 (TIPOVAR -> usize .)
    mayorigual      reduce using rule 86 (TIPOVAR -> usize .)
    menorigual      reduce using rule 86 (TIPOVAR -> usize .)
    igualigual      reduce using rule 86 (TIPOVAR -> usize .)
    diferente       reduce using rule 86 (TIPOVAR -> usize .)
    and             reduce using rule 86 (TIPOVAR -> usize .)
    or              reduce using rule 86 (TIPOVAR -> usize .)
    as              reduce using rule 86 (TIPOVAR -> usize .)
    punto           reduce using rule 86 (TIPOVAR -> usize .)
    println         reduce using rule 86 (TIPOVAR -> usize .)
    id              reduce using rule 86 (TIPOVAR -> usize .)
    if              reduce using rule 86 (TIPOVAR -> usize .)
    match           reduce using rule 86 (TIPOVAR -> usize .)
    continue        reduce using rule 86 (TIPOVAR -> usize .)
    return          reduce using rule 86 (TIPOVAR -> usize .)
    break           reduce using rule 86 (TIPOVAR -> usize .)
    while           reduce using rule 86 (TIPOVAR -> usize .)
    i64             reduce using rule 86 (TIPOVAR -> usize .)
    f64             reduce using rule 86 (TIPOVAR -> usize .)
    not             reduce using rule 86 (TIPOVAR -> usize .)
    para            reduce using rule 86 (TIPOVAR -> usize .)
    for             reduce using rule 86 (TIPOVAR -> usize .)
    entero          reduce using rule 86 (TIPOVAR -> usize .)
    decimal         reduce using rule 86 (TIPOVAR -> usize .)
    cadena          reduce using rule 86 (TIPOVAR -> usize .)
    true            reduce using rule 86 (TIPOVAR -> usize .)
    false           reduce using rule 86 (TIPOVAR -> usize .)
    caracter        reduce using rule 86 (TIPOVAR -> usize .)
    loop            reduce using rule 86 (TIPOVAR -> usize .)
    corc            reduce using rule 86 (TIPOVAR -> usize .)
    bvertical       reduce using rule 86 (TIPOVAR -> usize .)


state 65

    (175) VEC -> Vec . menor VEC mayor
    (176) VEC -> Vec . menor TIPOVAR mayor
    (177) VEC -> Vec . menor id mayor

    menor           shift and go to state 154


state 66

    (152) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor TIPOVAR BLOQUE_INST
    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor id BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS parc menos . mayor VEC BLOQUE_INST

    mayor           shift and go to state 155


state 67

    (153) FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .

    modulo          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    fn              reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    struct          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    $end            reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    llavec          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    pub             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    let             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    println         reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    id              reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    if              reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    match           reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    continue        reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    return          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    break           reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    while           reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    i64             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    f64             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    menos           reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    not             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    para            reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    for             reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    entero          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    decimal         reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    cadena          reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    true            reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    false           reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    caracter        reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)
    loop            reduce using rule 153 (FUNCION -> fn id para LISTAPARAMETROS parc BLOQUE_INST .)


state 68

    (158) LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .

    parc            reduce using rule 158 (LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .)
    coma            reduce using rule 158 (LISTAPARAMETROS -> LISTAPARAMETROS coma PARAMETRO .)


state 69

    (154) FUNCION -> fn id para parc menos mayor . TIPOVAR BLOQUE_INST
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize

    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64

    TIPOVAR                        shift and go to state 156

state 70

    (151) BLOQUE_INST -> llavea INSTRUCCIONES . llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES

    llavec          shift and go to state 157
    println         shift and go to state 94
    let             shift and go to state 96
    id              shift and go to state 97
    if              shift and go to state 98
    match           shift and go to state 99
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    loop            shift and go to state 131

    INSTRUCCION                    shift and go to state 158
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    EXPRESION                      shift and go to state 81
    CALL                           shift and go to state 82
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92
    ACCESO_MOD                     shift and go to state 93
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123

state 71

    (8) INSTRUCCIONES -> INSTRUCCION .

    llavec          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    println         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    let             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    id              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    if              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    match           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    continue        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    return          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    break           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    while           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    i64             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    f64             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    menos           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    not             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    para            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    fn              reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    for             reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    struct          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    modulo          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    entero          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    decimal         reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    cadena          reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    true            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    false           reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    caracter        reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)
    loop            reduce using rule 8 (INSTRUCCIONES -> INSTRUCCION .)


state 72

    (9) INSTRUCCION -> PRINT . puntoycoma

    puntoycoma      shift and go to state 159


state 73

    (10) INSTRUCCION -> DECLARACION . puntoycoma

    puntoycoma      shift and go to state 160


state 74

    (11) INSTRUCCION -> ASIGNACION . puntoycoma

    puntoycoma      shift and go to state 161


state 75

    (12) INSTRUCCION -> IF .

    llavec          reduce using rule 12 (INSTRUCCION -> IF .)
    println         reduce using rule 12 (INSTRUCCION -> IF .)
    let             reduce using rule 12 (INSTRUCCION -> IF .)
    id              reduce using rule 12 (INSTRUCCION -> IF .)
    if              reduce using rule 12 (INSTRUCCION -> IF .)
    match           reduce using rule 12 (INSTRUCCION -> IF .)
    continue        reduce using rule 12 (INSTRUCCION -> IF .)
    return          reduce using rule 12 (INSTRUCCION -> IF .)
    break           reduce using rule 12 (INSTRUCCION -> IF .)
    while           reduce using rule 12 (INSTRUCCION -> IF .)
    i64             reduce using rule 12 (INSTRUCCION -> IF .)
    f64             reduce using rule 12 (INSTRUCCION -> IF .)
    menos           reduce using rule 12 (INSTRUCCION -> IF .)
    not             reduce using rule 12 (INSTRUCCION -> IF .)
    para            reduce using rule 12 (INSTRUCCION -> IF .)
    fn              reduce using rule 12 (INSTRUCCION -> IF .)
    for             reduce using rule 12 (INSTRUCCION -> IF .)
    struct          reduce using rule 12 (INSTRUCCION -> IF .)
    modulo          reduce using rule 12 (INSTRUCCION -> IF .)
    entero          reduce using rule 12 (INSTRUCCION -> IF .)
    decimal         reduce using rule 12 (INSTRUCCION -> IF .)
    cadena          reduce using rule 12 (INSTRUCCION -> IF .)
    true            reduce using rule 12 (INSTRUCCION -> IF .)
    false           reduce using rule 12 (INSTRUCCION -> IF .)
    caracter        reduce using rule 12 (INSTRUCCION -> IF .)
    loop            reduce using rule 12 (INSTRUCCION -> IF .)


state 76

    (13) INSTRUCCION -> MATCH .

    llavec          reduce using rule 13 (INSTRUCCION -> MATCH .)
    println         reduce using rule 13 (INSTRUCCION -> MATCH .)
    let             reduce using rule 13 (INSTRUCCION -> MATCH .)
    id              reduce using rule 13 (INSTRUCCION -> MATCH .)
    if              reduce using rule 13 (INSTRUCCION -> MATCH .)
    match           reduce using rule 13 (INSTRUCCION -> MATCH .)
    continue        reduce using rule 13 (INSTRUCCION -> MATCH .)
    return          reduce using rule 13 (INSTRUCCION -> MATCH .)
    break           reduce using rule 13 (INSTRUCCION -> MATCH .)
    while           reduce using rule 13 (INSTRUCCION -> MATCH .)
    i64             reduce using rule 13 (INSTRUCCION -> MATCH .)
    f64             reduce using rule 13 (INSTRUCCION -> MATCH .)
    menos           reduce using rule 13 (INSTRUCCION -> MATCH .)
    not             reduce using rule 13 (INSTRUCCION -> MATCH .)
    para            reduce using rule 13 (INSTRUCCION -> MATCH .)
    fn              reduce using rule 13 (INSTRUCCION -> MATCH .)
    for             reduce using rule 13 (INSTRUCCION -> MATCH .)
    struct          reduce using rule 13 (INSTRUCCION -> MATCH .)
    modulo          reduce using rule 13 (INSTRUCCION -> MATCH .)
    entero          reduce using rule 13 (INSTRUCCION -> MATCH .)
    decimal         reduce using rule 13 (INSTRUCCION -> MATCH .)
    cadena          reduce using rule 13 (INSTRUCCION -> MATCH .)
    true            reduce using rule 13 (INSTRUCCION -> MATCH .)
    false           reduce using rule 13 (INSTRUCCION -> MATCH .)
    caracter        reduce using rule 13 (INSTRUCCION -> MATCH .)
    loop            reduce using rule 13 (INSTRUCCION -> MATCH .)


state 77

    (14) INSTRUCCION -> CONTINUE . puntoycoma

    puntoycoma      shift and go to state 162


state 78

    (15) INSTRUCCION -> RETURN . puntoycoma

    puntoycoma      shift and go to state 163


state 79

    (16) INSTRUCCION -> BREAK . puntoycoma

    puntoycoma      shift and go to state 164


state 80

    (17) INSTRUCCION -> WHILE .

    llavec          reduce using rule 17 (INSTRUCCION -> WHILE .)
    println         reduce using rule 17 (INSTRUCCION -> WHILE .)
    let             reduce using rule 17 (INSTRUCCION -> WHILE .)
    id              reduce using rule 17 (INSTRUCCION -> WHILE .)
    if              reduce using rule 17 (INSTRUCCION -> WHILE .)
    match           reduce using rule 17 (INSTRUCCION -> WHILE .)
    continue        reduce using rule 17 (INSTRUCCION -> WHILE .)
    return          reduce using rule 17 (INSTRUCCION -> WHILE .)
    break           reduce using rule 17 (INSTRUCCION -> WHILE .)
    while           reduce using rule 17 (INSTRUCCION -> WHILE .)
    i64             reduce using rule 17 (INSTRUCCION -> WHILE .)
    f64             reduce using rule 17 (INSTRUCCION -> WHILE .)
    menos           reduce using rule 17 (INSTRUCCION -> WHILE .)
    not             reduce using rule 17 (INSTRUCCION -> WHILE .)
    para            reduce using rule 17 (INSTRUCCION -> WHILE .)
    fn              reduce using rule 17 (INSTRUCCION -> WHILE .)
    for             reduce using rule 17 (INSTRUCCION -> WHILE .)
    struct          reduce using rule 17 (INSTRUCCION -> WHILE .)
    modulo          reduce using rule 17 (INSTRUCCION -> WHILE .)
    entero          reduce using rule 17 (INSTRUCCION -> WHILE .)
    decimal         reduce using rule 17 (INSTRUCCION -> WHILE .)
    cadena          reduce using rule 17 (INSTRUCCION -> WHILE .)
    true            reduce using rule 17 (INSTRUCCION -> WHILE .)
    false           reduce using rule 17 (INSTRUCCION -> WHILE .)
    caracter        reduce using rule 17 (INSTRUCCION -> WHILE .)
    loop            reduce using rule 17 (INSTRUCCION -> WHILE .)


state 81

    (18) INSTRUCCION -> EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 82

    (19) INSTRUCCION -> CALL . puntoycoma
    (59) EXPRESION -> CALL .

    puntoycoma      shift and go to state 180
    mas             reduce using rule 59 (EXPRESION -> CALL .)
    menos           reduce using rule 59 (EXPRESION -> CALL .)
    div             reduce using rule 59 (EXPRESION -> CALL .)
    multi           reduce using rule 59 (EXPRESION -> CALL .)
    mod             reduce using rule 59 (EXPRESION -> CALL .)
    mayor           reduce using rule 59 (EXPRESION -> CALL .)
    menor           reduce using rule 59 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 59 (EXPRESION -> CALL .)
    menorigual      reduce using rule 59 (EXPRESION -> CALL .)
    igualigual      reduce using rule 59 (EXPRESION -> CALL .)
    diferente       reduce using rule 59 (EXPRESION -> CALL .)
    and             reduce using rule 59 (EXPRESION -> CALL .)
    or              reduce using rule 59 (EXPRESION -> CALL .)
    as              reduce using rule 59 (EXPRESION -> CALL .)
    punto           reduce using rule 59 (EXPRESION -> CALL .)
    llavec          reduce using rule 59 (EXPRESION -> CALL .)
    println         reduce using rule 59 (EXPRESION -> CALL .)
    let             reduce using rule 59 (EXPRESION -> CALL .)
    id              reduce using rule 59 (EXPRESION -> CALL .)
    if              reduce using rule 59 (EXPRESION -> CALL .)
    match           reduce using rule 59 (EXPRESION -> CALL .)
    continue        reduce using rule 59 (EXPRESION -> CALL .)
    return          reduce using rule 59 (EXPRESION -> CALL .)
    break           reduce using rule 59 (EXPRESION -> CALL .)
    while           reduce using rule 59 (EXPRESION -> CALL .)
    i64             reduce using rule 59 (EXPRESION -> CALL .)
    f64             reduce using rule 59 (EXPRESION -> CALL .)
    not             reduce using rule 59 (EXPRESION -> CALL .)
    para            reduce using rule 59 (EXPRESION -> CALL .)
    fn              reduce using rule 59 (EXPRESION -> CALL .)
    for             reduce using rule 59 (EXPRESION -> CALL .)
    struct          reduce using rule 59 (EXPRESION -> CALL .)
    modulo          reduce using rule 59 (EXPRESION -> CALL .)
    entero          reduce using rule 59 (EXPRESION -> CALL .)
    decimal         reduce using rule 59 (EXPRESION -> CALL .)
    cadena          reduce using rule 59 (EXPRESION -> CALL .)
    true            reduce using rule 59 (EXPRESION -> CALL .)
    false           reduce using rule 59 (EXPRESION -> CALL .)
    caracter        reduce using rule 59 (EXPRESION -> CALL .)
    loop            reduce using rule 59 (EXPRESION -> CALL .)


state 83

    (20) INSTRUCCION -> FUNCION .

    llavec          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    println         reduce using rule 20 (INSTRUCCION -> FUNCION .)
    let             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    id              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    if              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    match           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    continue        reduce using rule 20 (INSTRUCCION -> FUNCION .)
    return          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    break           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    while           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    i64             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    f64             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    menos           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    not             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    para            reduce using rule 20 (INSTRUCCION -> FUNCION .)
    fn              reduce using rule 20 (INSTRUCCION -> FUNCION .)
    for             reduce using rule 20 (INSTRUCCION -> FUNCION .)
    struct          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    modulo          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    entero          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    decimal         reduce using rule 20 (INSTRUCCION -> FUNCION .)
    cadena          reduce using rule 20 (INSTRUCCION -> FUNCION .)
    true            reduce using rule 20 (INSTRUCCION -> FUNCION .)
    false           reduce using rule 20 (INSTRUCCION -> FUNCION .)
    caracter        reduce using rule 20 (INSTRUCCION -> FUNCION .)
    loop            reduce using rule 20 (INSTRUCCION -> FUNCION .)


state 84

    (21) INSTRUCCION -> DECVECTOR . puntoycoma

    puntoycoma      shift and go to state 181


state 85

    (22) INSTRUCCION -> PUSH . puntoycoma

    puntoycoma      shift and go to state 182


state 86

    (23) INSTRUCCION -> INSERT . puntoycoma

    puntoycoma      shift and go to state 183


state 87

    (24) INSTRUCCION -> DECARREGLO . puntoycoma

    puntoycoma      shift and go to state 184


state 88

    (25) INSTRUCCION -> FORIN .

    llavec          reduce using rule 25 (INSTRUCCION -> FORIN .)
    println         reduce using rule 25 (INSTRUCCION -> FORIN .)
    let             reduce using rule 25 (INSTRUCCION -> FORIN .)
    id              reduce using rule 25 (INSTRUCCION -> FORIN .)
    if              reduce using rule 25 (INSTRUCCION -> FORIN .)
    match           reduce using rule 25 (INSTRUCCION -> FORIN .)
    continue        reduce using rule 25 (INSTRUCCION -> FORIN .)
    return          reduce using rule 25 (INSTRUCCION -> FORIN .)
    break           reduce using rule 25 (INSTRUCCION -> FORIN .)
    while           reduce using rule 25 (INSTRUCCION -> FORIN .)
    i64             reduce using rule 25 (INSTRUCCION -> FORIN .)
    f64             reduce using rule 25 (INSTRUCCION -> FORIN .)
    menos           reduce using rule 25 (INSTRUCCION -> FORIN .)
    not             reduce using rule 25 (INSTRUCCION -> FORIN .)
    para            reduce using rule 25 (INSTRUCCION -> FORIN .)
    fn              reduce using rule 25 (INSTRUCCION -> FORIN .)
    for             reduce using rule 25 (INSTRUCCION -> FORIN .)
    struct          reduce using rule 25 (INSTRUCCION -> FORIN .)
    modulo          reduce using rule 25 (INSTRUCCION -> FORIN .)
    entero          reduce using rule 25 (INSTRUCCION -> FORIN .)
    decimal         reduce using rule 25 (INSTRUCCION -> FORIN .)
    cadena          reduce using rule 25 (INSTRUCCION -> FORIN .)
    true            reduce using rule 25 (INSTRUCCION -> FORIN .)
    false           reduce using rule 25 (INSTRUCCION -> FORIN .)
    caracter        reduce using rule 25 (INSTRUCCION -> FORIN .)
    loop            reduce using rule 25 (INSTRUCCION -> FORIN .)


state 89

    (26) INSTRUCCION -> STRUCT .

    llavec          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    println         reduce using rule 26 (INSTRUCCION -> STRUCT .)
    let             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    id              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    if              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    match           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    continue        reduce using rule 26 (INSTRUCCION -> STRUCT .)
    return          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    break           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    while           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    i64             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    f64             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    menos           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    not             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    para            reduce using rule 26 (INSTRUCCION -> STRUCT .)
    fn              reduce using rule 26 (INSTRUCCION -> STRUCT .)
    for             reduce using rule 26 (INSTRUCCION -> STRUCT .)
    struct          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    modulo          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    entero          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    decimal         reduce using rule 26 (INSTRUCCION -> STRUCT .)
    cadena          reduce using rule 26 (INSTRUCCION -> STRUCT .)
    true            reduce using rule 26 (INSTRUCCION -> STRUCT .)
    false           reduce using rule 26 (INSTRUCCION -> STRUCT .)
    caracter        reduce using rule 26 (INSTRUCCION -> STRUCT .)
    loop            reduce using rule 26 (INSTRUCCION -> STRUCT .)


state 90

    (27) INSTRUCCION -> DECSTRUCT . puntoycoma

    puntoycoma      shift and go to state 185


state 91

    (28) INSTRUCCION -> MOD_VAR_STRUCT . puntoycoma

    puntoycoma      shift and go to state 186


state 92

    (29) INSTRUCCION -> MODULO .

    llavec          reduce using rule 29 (INSTRUCCION -> MODULO .)
    println         reduce using rule 29 (INSTRUCCION -> MODULO .)
    let             reduce using rule 29 (INSTRUCCION -> MODULO .)
    id              reduce using rule 29 (INSTRUCCION -> MODULO .)
    if              reduce using rule 29 (INSTRUCCION -> MODULO .)
    match           reduce using rule 29 (INSTRUCCION -> MODULO .)
    continue        reduce using rule 29 (INSTRUCCION -> MODULO .)
    return          reduce using rule 29 (INSTRUCCION -> MODULO .)
    break           reduce using rule 29 (INSTRUCCION -> MODULO .)
    while           reduce using rule 29 (INSTRUCCION -> MODULO .)
    i64             reduce using rule 29 (INSTRUCCION -> MODULO .)
    f64             reduce using rule 29 (INSTRUCCION -> MODULO .)
    menos           reduce using rule 29 (INSTRUCCION -> MODULO .)
    not             reduce using rule 29 (INSTRUCCION -> MODULO .)
    para            reduce using rule 29 (INSTRUCCION -> MODULO .)
    fn              reduce using rule 29 (INSTRUCCION -> MODULO .)
    for             reduce using rule 29 (INSTRUCCION -> MODULO .)
    struct          reduce using rule 29 (INSTRUCCION -> MODULO .)
    modulo          reduce using rule 29 (INSTRUCCION -> MODULO .)
    entero          reduce using rule 29 (INSTRUCCION -> MODULO .)
    decimal         reduce using rule 29 (INSTRUCCION -> MODULO .)
    cadena          reduce using rule 29 (INSTRUCCION -> MODULO .)
    true            reduce using rule 29 (INSTRUCCION -> MODULO .)
    false           reduce using rule 29 (INSTRUCCION -> MODULO .)
    caracter        reduce using rule 29 (INSTRUCCION -> MODULO .)
    loop            reduce using rule 29 (INSTRUCCION -> MODULO .)


state 93

    (30) INSTRUCCION -> ACCESO_MOD . puntoycoma
    (66) EXPRESION -> ACCESO_MOD .

    puntoycoma      shift and go to state 187
    mas             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    llavec          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)


state 94

    (112) PRINT -> println . para EXPRESION parc
    (113) PRINT -> println . para EXPRESION coma CONJEXP parc

    para            shift and go to state 188


state 95

    (48) EXPRESION -> para . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 189
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 96

    (114) DECLARACION -> let . mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let . mut id igual EXPRESION
    (116) DECLARACION -> let . id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let . id igual EXPRESION
    (118) DECLARACION -> let . mut id dospuntos TIPOVAR
    (169) DECVECTOR -> let . id igual VECI
    (170) DECVECTOR -> let . mut id igual VECI
    (171) DECVECTOR -> let . id dospuntos VEC igual VECI
    (172) DECVECTOR -> let . mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> let . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> let . mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (199) DECARREGLO -> let . id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> let . mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> let . id igual ARREGLO
    (202) DECARREGLO -> let . mut id igual ARREGLO
    (226) DECSTRUCT -> let . id igual STRUCT_EXP
    (227) DECSTRUCT -> let . mut id igual STRUCT_EXP
    (228) DECSTRUCT -> let . id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> let . mut id dospuntos id igual STRUCT_EXP

    mut             shift and go to state 191
    id              shift and go to state 192


state 97

    (119) ASIGNACION -> id . igual EXPRESION
    (120) ASIGNACION -> id . INDEXS igual EXPRESION
    (121) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (186) PUSH -> id . punto push para EXPRESION parc
    (187) PUSH -> id . punto push para VECI parc
    (188) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    igual           shift and go to state 193
    para            shift and go to state 196
    punto           shift and go to state 195
    dospuntos       shift and go to state 197
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    llavec          reduce using rule 78 (ID -> id .)
    println         reduce using rule 78 (ID -> id .)
    let             reduce using rule 78 (ID -> id .)
    id              reduce using rule 78 (ID -> id .)
    if              reduce using rule 78 (ID -> id .)
    match           reduce using rule 78 (ID -> id .)
    continue        reduce using rule 78 (ID -> id .)
    return          reduce using rule 78 (ID -> id .)
    break           reduce using rule 78 (ID -> id .)
    while           reduce using rule 78 (ID -> id .)
    i64             reduce using rule 78 (ID -> id .)
    f64             reduce using rule 78 (ID -> id .)
    not             reduce using rule 78 (ID -> id .)
    fn              reduce using rule 78 (ID -> id .)
    for             reduce using rule 78 (ID -> id .)
    struct          reduce using rule 78 (ID -> id .)
    modulo          reduce using rule 78 (ID -> id .)
    entero          reduce using rule 78 (ID -> id .)
    decimal         reduce using rule 78 (ID -> id .)
    cadena          reduce using rule 78 (ID -> id .)
    true            reduce using rule 78 (ID -> id .)
    false           reduce using rule 78 (ID -> id .)
    caracter        reduce using rule 78 (ID -> id .)
    loop            reduce using rule 78 (ID -> id .)
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]
  ! para            [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 194

state 98

    (122) IF -> if . EXPRESION BLOQUE_INST
    (123) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> if . EXPRESION BLOQUE_INST else IF
    (87) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 199
    IF_TER                         shift and go to state 110
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 99

    (125) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match . EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match . EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (95) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 200
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 100

    (147) CONTINUE -> continue .

    puntoycoma      reduce using rule 147 (CONTINUE -> continue .)


state 101

    (148) RETURN -> return . EXPRESION
    (149) RETURN -> return .
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    puntoycoma      reduce using rule 149 (RETURN -> return .)
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 201
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 102

    (145) BREAK -> break .
    (146) BREAK -> break . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    puntoycoma      reduce using rule 145 (BREAK -> break .)
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 202
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 103

    (150) WHILE -> while . EXPRESION BLOQUE_INST
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 203
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 104

    (38) EXPRESION -> menos . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 204
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 105

    (36) EXPRESION -> i64 . dospuntos dospuntos pow para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 205


state 106

    (37) EXPRESION -> f64 . dospuntos dospuntos powf para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 206


state 107

    (47) EXPRESION -> not . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 207
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 108

    (49) EXPRESION -> TIPODATO .

    mas             reduce using rule 49 (EXPRESION -> TIPODATO .)
    menos           reduce using rule 49 (EXPRESION -> TIPODATO .)
    div             reduce using rule 49 (EXPRESION -> TIPODATO .)
    multi           reduce using rule 49 (EXPRESION -> TIPODATO .)
    mod             reduce using rule 49 (EXPRESION -> TIPODATO .)
    mayor           reduce using rule 49 (EXPRESION -> TIPODATO .)
    menor           reduce using rule 49 (EXPRESION -> TIPODATO .)
    mayorigual      reduce using rule 49 (EXPRESION -> TIPODATO .)
    menorigual      reduce using rule 49 (EXPRESION -> TIPODATO .)
    igualigual      reduce using rule 49 (EXPRESION -> TIPODATO .)
    diferente       reduce using rule 49 (EXPRESION -> TIPODATO .)
    and             reduce using rule 49 (EXPRESION -> TIPODATO .)
    or              reduce using rule 49 (EXPRESION -> TIPODATO .)
    as              reduce using rule 49 (EXPRESION -> TIPODATO .)
    punto           reduce using rule 49 (EXPRESION -> TIPODATO .)
    llavec          reduce using rule 49 (EXPRESION -> TIPODATO .)
    println         reduce using rule 49 (EXPRESION -> TIPODATO .)
    let             reduce using rule 49 (EXPRESION -> TIPODATO .)
    id              reduce using rule 49 (EXPRESION -> TIPODATO .)
    if              reduce using rule 49 (EXPRESION -> TIPODATO .)
    match           reduce using rule 49 (EXPRESION -> TIPODATO .)
    continue        reduce using rule 49 (EXPRESION -> TIPODATO .)
    return          reduce using rule 49 (EXPRESION -> TIPODATO .)
    break           reduce using rule 49 (EXPRESION -> TIPODATO .)
    while           reduce using rule 49 (EXPRESION -> TIPODATO .)
    i64             reduce using rule 49 (EXPRESION -> TIPODATO .)
    f64             reduce using rule 49 (EXPRESION -> TIPODATO .)
    not             reduce using rule 49 (EXPRESION -> TIPODATO .)
    para            reduce using rule 49 (EXPRESION -> TIPODATO .)
    fn              reduce using rule 49 (EXPRESION -> TIPODATO .)
    for             reduce using rule 49 (EXPRESION -> TIPODATO .)
    struct          reduce using rule 49 (EXPRESION -> TIPODATO .)
    modulo          reduce using rule 49 (EXPRESION -> TIPODATO .)
    entero          reduce using rule 49 (EXPRESION -> TIPODATO .)
    decimal         reduce using rule 49 (EXPRESION -> TIPODATO .)
    cadena          reduce using rule 49 (EXPRESION -> TIPODATO .)
    true            reduce using rule 49 (EXPRESION -> TIPODATO .)
    false           reduce using rule 49 (EXPRESION -> TIPODATO .)
    caracter        reduce using rule 49 (EXPRESION -> TIPODATO .)
    loop            reduce using rule 49 (EXPRESION -> TIPODATO .)
    pub             reduce using rule 49 (EXPRESION -> TIPODATO .)
    coma            reduce using rule 49 (EXPRESION -> TIPODATO .)
    parc            reduce using rule 49 (EXPRESION -> TIPODATO .)
    llavea          reduce using rule 49 (EXPRESION -> TIPODATO .)
    puntoycoma      reduce using rule 49 (EXPRESION -> TIPODATO .)
    corc            reduce using rule 49 (EXPRESION -> TIPODATO .)
    igual           reduce using rule 49 (EXPRESION -> TIPODATO .)
    bvertical       reduce using rule 49 (EXPRESION -> TIPODATO .)


state 109

    (50) EXPRESION -> ID .

    mas             reduce using rule 50 (EXPRESION -> ID .)
    menos           reduce using rule 50 (EXPRESION -> ID .)
    div             reduce using rule 50 (EXPRESION -> ID .)
    multi           reduce using rule 50 (EXPRESION -> ID .)
    mod             reduce using rule 50 (EXPRESION -> ID .)
    mayor           reduce using rule 50 (EXPRESION -> ID .)
    menor           reduce using rule 50 (EXPRESION -> ID .)
    mayorigual      reduce using rule 50 (EXPRESION -> ID .)
    menorigual      reduce using rule 50 (EXPRESION -> ID .)
    igualigual      reduce using rule 50 (EXPRESION -> ID .)
    diferente       reduce using rule 50 (EXPRESION -> ID .)
    and             reduce using rule 50 (EXPRESION -> ID .)
    or              reduce using rule 50 (EXPRESION -> ID .)
    as              reduce using rule 50 (EXPRESION -> ID .)
    punto           reduce using rule 50 (EXPRESION -> ID .)
    llavec          reduce using rule 50 (EXPRESION -> ID .)
    println         reduce using rule 50 (EXPRESION -> ID .)
    let             reduce using rule 50 (EXPRESION -> ID .)
    id              reduce using rule 50 (EXPRESION -> ID .)
    if              reduce using rule 50 (EXPRESION -> ID .)
    match           reduce using rule 50 (EXPRESION -> ID .)
    continue        reduce using rule 50 (EXPRESION -> ID .)
    return          reduce using rule 50 (EXPRESION -> ID .)
    break           reduce using rule 50 (EXPRESION -> ID .)
    while           reduce using rule 50 (EXPRESION -> ID .)
    i64             reduce using rule 50 (EXPRESION -> ID .)
    f64             reduce using rule 50 (EXPRESION -> ID .)
    not             reduce using rule 50 (EXPRESION -> ID .)
    para            reduce using rule 50 (EXPRESION -> ID .)
    fn              reduce using rule 50 (EXPRESION -> ID .)
    for             reduce using rule 50 (EXPRESION -> ID .)
    struct          reduce using rule 50 (EXPRESION -> ID .)
    modulo          reduce using rule 50 (EXPRESION -> ID .)
    entero          reduce using rule 50 (EXPRESION -> ID .)
    decimal         reduce using rule 50 (EXPRESION -> ID .)
    cadena          reduce using rule 50 (EXPRESION -> ID .)
    true            reduce using rule 50 (EXPRESION -> ID .)
    false           reduce using rule 50 (EXPRESION -> ID .)
    caracter        reduce using rule 50 (EXPRESION -> ID .)
    loop            reduce using rule 50 (EXPRESION -> ID .)
    pub             reduce using rule 50 (EXPRESION -> ID .)
    coma            reduce using rule 50 (EXPRESION -> ID .)
    parc            reduce using rule 50 (EXPRESION -> ID .)
    llavea          reduce using rule 50 (EXPRESION -> ID .)
    puntoycoma      reduce using rule 50 (EXPRESION -> ID .)
    corc            reduce using rule 50 (EXPRESION -> ID .)
    igual           reduce using rule 50 (EXPRESION -> ID .)
    bvertical       reduce using rule 50 (EXPRESION -> ID .)


state 110

    (51) EXPRESION -> IF_TER .

    mas             reduce using rule 51 (EXPRESION -> IF_TER .)
    menos           reduce using rule 51 (EXPRESION -> IF_TER .)
    div             reduce using rule 51 (EXPRESION -> IF_TER .)
    multi           reduce using rule 51 (EXPRESION -> IF_TER .)
    mod             reduce using rule 51 (EXPRESION -> IF_TER .)
    mayor           reduce using rule 51 (EXPRESION -> IF_TER .)
    menor           reduce using rule 51 (EXPRESION -> IF_TER .)
    mayorigual      reduce using rule 51 (EXPRESION -> IF_TER .)
    menorigual      reduce using rule 51 (EXPRESION -> IF_TER .)
    igualigual      reduce using rule 51 (EXPRESION -> IF_TER .)
    diferente       reduce using rule 51 (EXPRESION -> IF_TER .)
    and             reduce using rule 51 (EXPRESION -> IF_TER .)
    or              reduce using rule 51 (EXPRESION -> IF_TER .)
    as              reduce using rule 51 (EXPRESION -> IF_TER .)
    punto           reduce using rule 51 (EXPRESION -> IF_TER .)
    llavec          reduce using rule 51 (EXPRESION -> IF_TER .)
    println         reduce using rule 51 (EXPRESION -> IF_TER .)
    let             reduce using rule 51 (EXPRESION -> IF_TER .)
    id              reduce using rule 51 (EXPRESION -> IF_TER .)
    if              reduce using rule 51 (EXPRESION -> IF_TER .)
    match           reduce using rule 51 (EXPRESION -> IF_TER .)
    continue        reduce using rule 51 (EXPRESION -> IF_TER .)
    return          reduce using rule 51 (EXPRESION -> IF_TER .)
    break           reduce using rule 51 (EXPRESION -> IF_TER .)
    while           reduce using rule 51 (EXPRESION -> IF_TER .)
    i64             reduce using rule 51 (EXPRESION -> IF_TER .)
    f64             reduce using rule 51 (EXPRESION -> IF_TER .)
    not             reduce using rule 51 (EXPRESION -> IF_TER .)
    para            reduce using rule 51 (EXPRESION -> IF_TER .)
    fn              reduce using rule 51 (EXPRESION -> IF_TER .)
    for             reduce using rule 51 (EXPRESION -> IF_TER .)
    struct          reduce using rule 51 (EXPRESION -> IF_TER .)
    modulo          reduce using rule 51 (EXPRESION -> IF_TER .)
    entero          reduce using rule 51 (EXPRESION -> IF_TER .)
    decimal         reduce using rule 51 (EXPRESION -> IF_TER .)
    cadena          reduce using rule 51 (EXPRESION -> IF_TER .)
    true            reduce using rule 51 (EXPRESION -> IF_TER .)
    false           reduce using rule 51 (EXPRESION -> IF_TER .)
    caracter        reduce using rule 51 (EXPRESION -> IF_TER .)
    loop            reduce using rule 51 (EXPRESION -> IF_TER .)
    pub             reduce using rule 51 (EXPRESION -> IF_TER .)
    coma            reduce using rule 51 (EXPRESION -> IF_TER .)
    parc            reduce using rule 51 (EXPRESION -> IF_TER .)
    llavea          reduce using rule 51 (EXPRESION -> IF_TER .)
    puntoycoma      reduce using rule 51 (EXPRESION -> IF_TER .)
    corc            reduce using rule 51 (EXPRESION -> IF_TER .)
    igual           reduce using rule 51 (EXPRESION -> IF_TER .)
    bvertical       reduce using rule 51 (EXPRESION -> IF_TER .)


state 111

    (52) EXPRESION -> MATCH_TER .

    mas             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    menos           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    div             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    multi           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    mod             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    mayor           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    menor           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    mayorigual      reduce using rule 52 (EXPRESION -> MATCH_TER .)
    menorigual      reduce using rule 52 (EXPRESION -> MATCH_TER .)
    igualigual      reduce using rule 52 (EXPRESION -> MATCH_TER .)
    diferente       reduce using rule 52 (EXPRESION -> MATCH_TER .)
    and             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    or              reduce using rule 52 (EXPRESION -> MATCH_TER .)
    as              reduce using rule 52 (EXPRESION -> MATCH_TER .)
    punto           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    llavec          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    println         reduce using rule 52 (EXPRESION -> MATCH_TER .)
    let             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    id              reduce using rule 52 (EXPRESION -> MATCH_TER .)
    if              reduce using rule 52 (EXPRESION -> MATCH_TER .)
    match           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    continue        reduce using rule 52 (EXPRESION -> MATCH_TER .)
    return          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    break           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    while           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    i64             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    f64             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    not             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    para            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    fn              reduce using rule 52 (EXPRESION -> MATCH_TER .)
    for             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    struct          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    modulo          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    entero          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    decimal         reduce using rule 52 (EXPRESION -> MATCH_TER .)
    cadena          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    true            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    false           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    caracter        reduce using rule 52 (EXPRESION -> MATCH_TER .)
    loop            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    pub             reduce using rule 52 (EXPRESION -> MATCH_TER .)
    coma            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    parc            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    llavea          reduce using rule 52 (EXPRESION -> MATCH_TER .)
    puntoycoma      reduce using rule 52 (EXPRESION -> MATCH_TER .)
    corc            reduce using rule 52 (EXPRESION -> MATCH_TER .)
    igual           reduce using rule 52 (EXPRESION -> MATCH_TER .)
    bvertical       reduce using rule 52 (EXPRESION -> MATCH_TER .)


state 112

    (53) EXPRESION -> LOOP .

    mas             reduce using rule 53 (EXPRESION -> LOOP .)
    menos           reduce using rule 53 (EXPRESION -> LOOP .)
    div             reduce using rule 53 (EXPRESION -> LOOP .)
    multi           reduce using rule 53 (EXPRESION -> LOOP .)
    mod             reduce using rule 53 (EXPRESION -> LOOP .)
    mayor           reduce using rule 53 (EXPRESION -> LOOP .)
    menor           reduce using rule 53 (EXPRESION -> LOOP .)
    mayorigual      reduce using rule 53 (EXPRESION -> LOOP .)
    menorigual      reduce using rule 53 (EXPRESION -> LOOP .)
    igualigual      reduce using rule 53 (EXPRESION -> LOOP .)
    diferente       reduce using rule 53 (EXPRESION -> LOOP .)
    and             reduce using rule 53 (EXPRESION -> LOOP .)
    or              reduce using rule 53 (EXPRESION -> LOOP .)
    as              reduce using rule 53 (EXPRESION -> LOOP .)
    punto           reduce using rule 53 (EXPRESION -> LOOP .)
    llavec          reduce using rule 53 (EXPRESION -> LOOP .)
    println         reduce using rule 53 (EXPRESION -> LOOP .)
    let             reduce using rule 53 (EXPRESION -> LOOP .)
    id              reduce using rule 53 (EXPRESION -> LOOP .)
    if              reduce using rule 53 (EXPRESION -> LOOP .)
    match           reduce using rule 53 (EXPRESION -> LOOP .)
    continue        reduce using rule 53 (EXPRESION -> LOOP .)
    return          reduce using rule 53 (EXPRESION -> LOOP .)
    break           reduce using rule 53 (EXPRESION -> LOOP .)
    while           reduce using rule 53 (EXPRESION -> LOOP .)
    i64             reduce using rule 53 (EXPRESION -> LOOP .)
    f64             reduce using rule 53 (EXPRESION -> LOOP .)
    not             reduce using rule 53 (EXPRESION -> LOOP .)
    para            reduce using rule 53 (EXPRESION -> LOOP .)
    fn              reduce using rule 53 (EXPRESION -> LOOP .)
    for             reduce using rule 53 (EXPRESION -> LOOP .)
    struct          reduce using rule 53 (EXPRESION -> LOOP .)
    modulo          reduce using rule 53 (EXPRESION -> LOOP .)
    entero          reduce using rule 53 (EXPRESION -> LOOP .)
    decimal         reduce using rule 53 (EXPRESION -> LOOP .)
    cadena          reduce using rule 53 (EXPRESION -> LOOP .)
    true            reduce using rule 53 (EXPRESION -> LOOP .)
    false           reduce using rule 53 (EXPRESION -> LOOP .)
    caracter        reduce using rule 53 (EXPRESION -> LOOP .)
    loop            reduce using rule 53 (EXPRESION -> LOOP .)
    pub             reduce using rule 53 (EXPRESION -> LOOP .)
    coma            reduce using rule 53 (EXPRESION -> LOOP .)
    parc            reduce using rule 53 (EXPRESION -> LOOP .)
    llavea          reduce using rule 53 (EXPRESION -> LOOP .)
    puntoycoma      reduce using rule 53 (EXPRESION -> LOOP .)
    corc            reduce using rule 53 (EXPRESION -> LOOP .)
    igual           reduce using rule 53 (EXPRESION -> LOOP .)
    bvertical       reduce using rule 53 (EXPRESION -> LOOP .)


state 113

    (54) EXPRESION -> CAST_AS .

    mas             reduce using rule 54 (EXPRESION -> CAST_AS .)
    menos           reduce using rule 54 (EXPRESION -> CAST_AS .)
    div             reduce using rule 54 (EXPRESION -> CAST_AS .)
    multi           reduce using rule 54 (EXPRESION -> CAST_AS .)
    mod             reduce using rule 54 (EXPRESION -> CAST_AS .)
    mayor           reduce using rule 54 (EXPRESION -> CAST_AS .)
    menor           reduce using rule 54 (EXPRESION -> CAST_AS .)
    mayorigual      reduce using rule 54 (EXPRESION -> CAST_AS .)
    menorigual      reduce using rule 54 (EXPRESION -> CAST_AS .)
    igualigual      reduce using rule 54 (EXPRESION -> CAST_AS .)
    diferente       reduce using rule 54 (EXPRESION -> CAST_AS .)
    and             reduce using rule 54 (EXPRESION -> CAST_AS .)
    or              reduce using rule 54 (EXPRESION -> CAST_AS .)
    as              reduce using rule 54 (EXPRESION -> CAST_AS .)
    punto           reduce using rule 54 (EXPRESION -> CAST_AS .)
    llavec          reduce using rule 54 (EXPRESION -> CAST_AS .)
    println         reduce using rule 54 (EXPRESION -> CAST_AS .)
    let             reduce using rule 54 (EXPRESION -> CAST_AS .)
    id              reduce using rule 54 (EXPRESION -> CAST_AS .)
    if              reduce using rule 54 (EXPRESION -> CAST_AS .)
    match           reduce using rule 54 (EXPRESION -> CAST_AS .)
    continue        reduce using rule 54 (EXPRESION -> CAST_AS .)
    return          reduce using rule 54 (EXPRESION -> CAST_AS .)
    break           reduce using rule 54 (EXPRESION -> CAST_AS .)
    while           reduce using rule 54 (EXPRESION -> CAST_AS .)
    i64             reduce using rule 54 (EXPRESION -> CAST_AS .)
    f64             reduce using rule 54 (EXPRESION -> CAST_AS .)
    not             reduce using rule 54 (EXPRESION -> CAST_AS .)
    para            reduce using rule 54 (EXPRESION -> CAST_AS .)
    fn              reduce using rule 54 (EXPRESION -> CAST_AS .)
    for             reduce using rule 54 (EXPRESION -> CAST_AS .)
    struct          reduce using rule 54 (EXPRESION -> CAST_AS .)
    modulo          reduce using rule 54 (EXPRESION -> CAST_AS .)
    entero          reduce using rule 54 (EXPRESION -> CAST_AS .)
    decimal         reduce using rule 54 (EXPRESION -> CAST_AS .)
    cadena          reduce using rule 54 (EXPRESION -> CAST_AS .)
    true            reduce using rule 54 (EXPRESION -> CAST_AS .)
    false           reduce using rule 54 (EXPRESION -> CAST_AS .)
    caracter        reduce using rule 54 (EXPRESION -> CAST_AS .)
    loop            reduce using rule 54 (EXPRESION -> CAST_AS .)
    pub             reduce using rule 54 (EXPRESION -> CAST_AS .)
    coma            reduce using rule 54 (EXPRESION -> CAST_AS .)
    parc            reduce using rule 54 (EXPRESION -> CAST_AS .)
    llavea          reduce using rule 54 (EXPRESION -> CAST_AS .)
    puntoycoma      reduce using rule 54 (EXPRESION -> CAST_AS .)
    corc            reduce using rule 54 (EXPRESION -> CAST_AS .)
    igual           reduce using rule 54 (EXPRESION -> CAST_AS .)
    bvertical       reduce using rule 54 (EXPRESION -> CAST_AS .)


state 114

    (55) EXPRESION -> ABS .

    mas             reduce using rule 55 (EXPRESION -> ABS .)
    menos           reduce using rule 55 (EXPRESION -> ABS .)
    div             reduce using rule 55 (EXPRESION -> ABS .)
    multi           reduce using rule 55 (EXPRESION -> ABS .)
    mod             reduce using rule 55 (EXPRESION -> ABS .)
    mayor           reduce using rule 55 (EXPRESION -> ABS .)
    menor           reduce using rule 55 (EXPRESION -> ABS .)
    mayorigual      reduce using rule 55 (EXPRESION -> ABS .)
    menorigual      reduce using rule 55 (EXPRESION -> ABS .)
    igualigual      reduce using rule 55 (EXPRESION -> ABS .)
    diferente       reduce using rule 55 (EXPRESION -> ABS .)
    and             reduce using rule 55 (EXPRESION -> ABS .)
    or              reduce using rule 55 (EXPRESION -> ABS .)
    as              reduce using rule 55 (EXPRESION -> ABS .)
    punto           reduce using rule 55 (EXPRESION -> ABS .)
    llavec          reduce using rule 55 (EXPRESION -> ABS .)
    println         reduce using rule 55 (EXPRESION -> ABS .)
    let             reduce using rule 55 (EXPRESION -> ABS .)
    id              reduce using rule 55 (EXPRESION -> ABS .)
    if              reduce using rule 55 (EXPRESION -> ABS .)
    match           reduce using rule 55 (EXPRESION -> ABS .)
    continue        reduce using rule 55 (EXPRESION -> ABS .)
    return          reduce using rule 55 (EXPRESION -> ABS .)
    break           reduce using rule 55 (EXPRESION -> ABS .)
    while           reduce using rule 55 (EXPRESION -> ABS .)
    i64             reduce using rule 55 (EXPRESION -> ABS .)
    f64             reduce using rule 55 (EXPRESION -> ABS .)
    not             reduce using rule 55 (EXPRESION -> ABS .)
    para            reduce using rule 55 (EXPRESION -> ABS .)
    fn              reduce using rule 55 (EXPRESION -> ABS .)
    for             reduce using rule 55 (EXPRESION -> ABS .)
    struct          reduce using rule 55 (EXPRESION -> ABS .)
    modulo          reduce using rule 55 (EXPRESION -> ABS .)
    entero          reduce using rule 55 (EXPRESION -> ABS .)
    decimal         reduce using rule 55 (EXPRESION -> ABS .)
    cadena          reduce using rule 55 (EXPRESION -> ABS .)
    true            reduce using rule 55 (EXPRESION -> ABS .)
    false           reduce using rule 55 (EXPRESION -> ABS .)
    caracter        reduce using rule 55 (EXPRESION -> ABS .)
    loop            reduce using rule 55 (EXPRESION -> ABS .)
    pub             reduce using rule 55 (EXPRESION -> ABS .)
    coma            reduce using rule 55 (EXPRESION -> ABS .)
    parc            reduce using rule 55 (EXPRESION -> ABS .)
    llavea          reduce using rule 55 (EXPRESION -> ABS .)
    puntoycoma      reduce using rule 55 (EXPRESION -> ABS .)
    corc            reduce using rule 55 (EXPRESION -> ABS .)
    igual           reduce using rule 55 (EXPRESION -> ABS .)
    bvertical       reduce using rule 55 (EXPRESION -> ABS .)


state 115

    (56) EXPRESION -> CLONE .

    mas             reduce using rule 56 (EXPRESION -> CLONE .)
    menos           reduce using rule 56 (EXPRESION -> CLONE .)
    div             reduce using rule 56 (EXPRESION -> CLONE .)
    multi           reduce using rule 56 (EXPRESION -> CLONE .)
    mod             reduce using rule 56 (EXPRESION -> CLONE .)
    mayor           reduce using rule 56 (EXPRESION -> CLONE .)
    menor           reduce using rule 56 (EXPRESION -> CLONE .)
    mayorigual      reduce using rule 56 (EXPRESION -> CLONE .)
    menorigual      reduce using rule 56 (EXPRESION -> CLONE .)
    igualigual      reduce using rule 56 (EXPRESION -> CLONE .)
    diferente       reduce using rule 56 (EXPRESION -> CLONE .)
    and             reduce using rule 56 (EXPRESION -> CLONE .)
    or              reduce using rule 56 (EXPRESION -> CLONE .)
    as              reduce using rule 56 (EXPRESION -> CLONE .)
    punto           reduce using rule 56 (EXPRESION -> CLONE .)
    llavec          reduce using rule 56 (EXPRESION -> CLONE .)
    println         reduce using rule 56 (EXPRESION -> CLONE .)
    let             reduce using rule 56 (EXPRESION -> CLONE .)
    id              reduce using rule 56 (EXPRESION -> CLONE .)
    if              reduce using rule 56 (EXPRESION -> CLONE .)
    match           reduce using rule 56 (EXPRESION -> CLONE .)
    continue        reduce using rule 56 (EXPRESION -> CLONE .)
    return          reduce using rule 56 (EXPRESION -> CLONE .)
    break           reduce using rule 56 (EXPRESION -> CLONE .)
    while           reduce using rule 56 (EXPRESION -> CLONE .)
    i64             reduce using rule 56 (EXPRESION -> CLONE .)
    f64             reduce using rule 56 (EXPRESION -> CLONE .)
    not             reduce using rule 56 (EXPRESION -> CLONE .)
    para            reduce using rule 56 (EXPRESION -> CLONE .)
    fn              reduce using rule 56 (EXPRESION -> CLONE .)
    for             reduce using rule 56 (EXPRESION -> CLONE .)
    struct          reduce using rule 56 (EXPRESION -> CLONE .)
    modulo          reduce using rule 56 (EXPRESION -> CLONE .)
    entero          reduce using rule 56 (EXPRESION -> CLONE .)
    decimal         reduce using rule 56 (EXPRESION -> CLONE .)
    cadena          reduce using rule 56 (EXPRESION -> CLONE .)
    true            reduce using rule 56 (EXPRESION -> CLONE .)
    false           reduce using rule 56 (EXPRESION -> CLONE .)
    caracter        reduce using rule 56 (EXPRESION -> CLONE .)
    loop            reduce using rule 56 (EXPRESION -> CLONE .)
    pub             reduce using rule 56 (EXPRESION -> CLONE .)
    coma            reduce using rule 56 (EXPRESION -> CLONE .)
    parc            reduce using rule 56 (EXPRESION -> CLONE .)
    llavea          reduce using rule 56 (EXPRESION -> CLONE .)
    puntoycoma      reduce using rule 56 (EXPRESION -> CLONE .)
    corc            reduce using rule 56 (EXPRESION -> CLONE .)
    igual           reduce using rule 56 (EXPRESION -> CLONE .)
    bvertical       reduce using rule 56 (EXPRESION -> CLONE .)


state 116

    (57) EXPRESION -> SQRT .

    mas             reduce using rule 57 (EXPRESION -> SQRT .)
    menos           reduce using rule 57 (EXPRESION -> SQRT .)
    div             reduce using rule 57 (EXPRESION -> SQRT .)
    multi           reduce using rule 57 (EXPRESION -> SQRT .)
    mod             reduce using rule 57 (EXPRESION -> SQRT .)
    mayor           reduce using rule 57 (EXPRESION -> SQRT .)
    menor           reduce using rule 57 (EXPRESION -> SQRT .)
    mayorigual      reduce using rule 57 (EXPRESION -> SQRT .)
    menorigual      reduce using rule 57 (EXPRESION -> SQRT .)
    igualigual      reduce using rule 57 (EXPRESION -> SQRT .)
    diferente       reduce using rule 57 (EXPRESION -> SQRT .)
    and             reduce using rule 57 (EXPRESION -> SQRT .)
    or              reduce using rule 57 (EXPRESION -> SQRT .)
    as              reduce using rule 57 (EXPRESION -> SQRT .)
    punto           reduce using rule 57 (EXPRESION -> SQRT .)
    llavec          reduce using rule 57 (EXPRESION -> SQRT .)
    println         reduce using rule 57 (EXPRESION -> SQRT .)
    let             reduce using rule 57 (EXPRESION -> SQRT .)
    id              reduce using rule 57 (EXPRESION -> SQRT .)
    if              reduce using rule 57 (EXPRESION -> SQRT .)
    match           reduce using rule 57 (EXPRESION -> SQRT .)
    continue        reduce using rule 57 (EXPRESION -> SQRT .)
    return          reduce using rule 57 (EXPRESION -> SQRT .)
    break           reduce using rule 57 (EXPRESION -> SQRT .)
    while           reduce using rule 57 (EXPRESION -> SQRT .)
    i64             reduce using rule 57 (EXPRESION -> SQRT .)
    f64             reduce using rule 57 (EXPRESION -> SQRT .)
    not             reduce using rule 57 (EXPRESION -> SQRT .)
    para            reduce using rule 57 (EXPRESION -> SQRT .)
    fn              reduce using rule 57 (EXPRESION -> SQRT .)
    for             reduce using rule 57 (EXPRESION -> SQRT .)
    struct          reduce using rule 57 (EXPRESION -> SQRT .)
    modulo          reduce using rule 57 (EXPRESION -> SQRT .)
    entero          reduce using rule 57 (EXPRESION -> SQRT .)
    decimal         reduce using rule 57 (EXPRESION -> SQRT .)
    cadena          reduce using rule 57 (EXPRESION -> SQRT .)
    true            reduce using rule 57 (EXPRESION -> SQRT .)
    false           reduce using rule 57 (EXPRESION -> SQRT .)
    caracter        reduce using rule 57 (EXPRESION -> SQRT .)
    loop            reduce using rule 57 (EXPRESION -> SQRT .)
    pub             reduce using rule 57 (EXPRESION -> SQRT .)
    coma            reduce using rule 57 (EXPRESION -> SQRT .)
    parc            reduce using rule 57 (EXPRESION -> SQRT .)
    llavea          reduce using rule 57 (EXPRESION -> SQRT .)
    puntoycoma      reduce using rule 57 (EXPRESION -> SQRT .)
    corc            reduce using rule 57 (EXPRESION -> SQRT .)
    igual           reduce using rule 57 (EXPRESION -> SQRT .)
    bvertical       reduce using rule 57 (EXPRESION -> SQRT .)


state 117

    (58) EXPRESION -> TO_STRING_OWNED .

    mas             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    menos           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    div             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    multi           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    mod             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    mayor           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    menor           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    mayorigual      reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    menorigual      reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    igualigual      reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    diferente       reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    and             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    or              reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    as              reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    punto           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    llavec          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    println         reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    let             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    id              reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    if              reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    match           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    continue        reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    return          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    break           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    while           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    i64             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    f64             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    not             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    para            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    fn              reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    for             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    struct          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    modulo          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    entero          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    decimal         reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    cadena          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    true            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    false           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    caracter        reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    loop            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    pub             reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    coma            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    parc            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    llavea          reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    puntoycoma      reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    corc            reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    igual           reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)
    bvertical       reduce using rule 58 (EXPRESION -> TO_STRING_OWNED .)


state 118

    (60) EXPRESION -> REMOVE .

    mas             reduce using rule 60 (EXPRESION -> REMOVE .)
    menos           reduce using rule 60 (EXPRESION -> REMOVE .)
    div             reduce using rule 60 (EXPRESION -> REMOVE .)
    multi           reduce using rule 60 (EXPRESION -> REMOVE .)
    mod             reduce using rule 60 (EXPRESION -> REMOVE .)
    mayor           reduce using rule 60 (EXPRESION -> REMOVE .)
    menor           reduce using rule 60 (EXPRESION -> REMOVE .)
    mayorigual      reduce using rule 60 (EXPRESION -> REMOVE .)
    menorigual      reduce using rule 60 (EXPRESION -> REMOVE .)
    igualigual      reduce using rule 60 (EXPRESION -> REMOVE .)
    diferente       reduce using rule 60 (EXPRESION -> REMOVE .)
    and             reduce using rule 60 (EXPRESION -> REMOVE .)
    or              reduce using rule 60 (EXPRESION -> REMOVE .)
    as              reduce using rule 60 (EXPRESION -> REMOVE .)
    punto           reduce using rule 60 (EXPRESION -> REMOVE .)
    llavec          reduce using rule 60 (EXPRESION -> REMOVE .)
    println         reduce using rule 60 (EXPRESION -> REMOVE .)
    let             reduce using rule 60 (EXPRESION -> REMOVE .)
    id              reduce using rule 60 (EXPRESION -> REMOVE .)
    if              reduce using rule 60 (EXPRESION -> REMOVE .)
    match           reduce using rule 60 (EXPRESION -> REMOVE .)
    continue        reduce using rule 60 (EXPRESION -> REMOVE .)
    return          reduce using rule 60 (EXPRESION -> REMOVE .)
    break           reduce using rule 60 (EXPRESION -> REMOVE .)
    while           reduce using rule 60 (EXPRESION -> REMOVE .)
    i64             reduce using rule 60 (EXPRESION -> REMOVE .)
    f64             reduce using rule 60 (EXPRESION -> REMOVE .)
    not             reduce using rule 60 (EXPRESION -> REMOVE .)
    para            reduce using rule 60 (EXPRESION -> REMOVE .)
    fn              reduce using rule 60 (EXPRESION -> REMOVE .)
    for             reduce using rule 60 (EXPRESION -> REMOVE .)
    struct          reduce using rule 60 (EXPRESION -> REMOVE .)
    modulo          reduce using rule 60 (EXPRESION -> REMOVE .)
    entero          reduce using rule 60 (EXPRESION -> REMOVE .)
    decimal         reduce using rule 60 (EXPRESION -> REMOVE .)
    cadena          reduce using rule 60 (EXPRESION -> REMOVE .)
    true            reduce using rule 60 (EXPRESION -> REMOVE .)
    false           reduce using rule 60 (EXPRESION -> REMOVE .)
    caracter        reduce using rule 60 (EXPRESION -> REMOVE .)
    loop            reduce using rule 60 (EXPRESION -> REMOVE .)
    pub             reduce using rule 60 (EXPRESION -> REMOVE .)
    coma            reduce using rule 60 (EXPRESION -> REMOVE .)
    parc            reduce using rule 60 (EXPRESION -> REMOVE .)
    llavea          reduce using rule 60 (EXPRESION -> REMOVE .)
    puntoycoma      reduce using rule 60 (EXPRESION -> REMOVE .)
    corc            reduce using rule 60 (EXPRESION -> REMOVE .)
    igual           reduce using rule 60 (EXPRESION -> REMOVE .)
    bvertical       reduce using rule 60 (EXPRESION -> REMOVE .)


state 119

    (61) EXPRESION -> CONTAINS .

    mas             reduce using rule 61 (EXPRESION -> CONTAINS .)
    menos           reduce using rule 61 (EXPRESION -> CONTAINS .)
    div             reduce using rule 61 (EXPRESION -> CONTAINS .)
    multi           reduce using rule 61 (EXPRESION -> CONTAINS .)
    mod             reduce using rule 61 (EXPRESION -> CONTAINS .)
    mayor           reduce using rule 61 (EXPRESION -> CONTAINS .)
    menor           reduce using rule 61 (EXPRESION -> CONTAINS .)
    mayorigual      reduce using rule 61 (EXPRESION -> CONTAINS .)
    menorigual      reduce using rule 61 (EXPRESION -> CONTAINS .)
    igualigual      reduce using rule 61 (EXPRESION -> CONTAINS .)
    diferente       reduce using rule 61 (EXPRESION -> CONTAINS .)
    and             reduce using rule 61 (EXPRESION -> CONTAINS .)
    or              reduce using rule 61 (EXPRESION -> CONTAINS .)
    as              reduce using rule 61 (EXPRESION -> CONTAINS .)
    punto           reduce using rule 61 (EXPRESION -> CONTAINS .)
    llavec          reduce using rule 61 (EXPRESION -> CONTAINS .)
    println         reduce using rule 61 (EXPRESION -> CONTAINS .)
    let             reduce using rule 61 (EXPRESION -> CONTAINS .)
    id              reduce using rule 61 (EXPRESION -> CONTAINS .)
    if              reduce using rule 61 (EXPRESION -> CONTAINS .)
    match           reduce using rule 61 (EXPRESION -> CONTAINS .)
    continue        reduce using rule 61 (EXPRESION -> CONTAINS .)
    return          reduce using rule 61 (EXPRESION -> CONTAINS .)
    break           reduce using rule 61 (EXPRESION -> CONTAINS .)
    while           reduce using rule 61 (EXPRESION -> CONTAINS .)
    i64             reduce using rule 61 (EXPRESION -> CONTAINS .)
    f64             reduce using rule 61 (EXPRESION -> CONTAINS .)
    not             reduce using rule 61 (EXPRESION -> CONTAINS .)
    para            reduce using rule 61 (EXPRESION -> CONTAINS .)
    fn              reduce using rule 61 (EXPRESION -> CONTAINS .)
    for             reduce using rule 61 (EXPRESION -> CONTAINS .)
    struct          reduce using rule 61 (EXPRESION -> CONTAINS .)
    modulo          reduce using rule 61 (EXPRESION -> CONTAINS .)
    entero          reduce using rule 61 (EXPRESION -> CONTAINS .)
    decimal         reduce using rule 61 (EXPRESION -> CONTAINS .)
    cadena          reduce using rule 61 (EXPRESION -> CONTAINS .)
    true            reduce using rule 61 (EXPRESION -> CONTAINS .)
    false           reduce using rule 61 (EXPRESION -> CONTAINS .)
    caracter        reduce using rule 61 (EXPRESION -> CONTAINS .)
    loop            reduce using rule 61 (EXPRESION -> CONTAINS .)
    pub             reduce using rule 61 (EXPRESION -> CONTAINS .)
    coma            reduce using rule 61 (EXPRESION -> CONTAINS .)
    parc            reduce using rule 61 (EXPRESION -> CONTAINS .)
    llavea          reduce using rule 61 (EXPRESION -> CONTAINS .)
    puntoycoma      reduce using rule 61 (EXPRESION -> CONTAINS .)
    corc            reduce using rule 61 (EXPRESION -> CONTAINS .)
    igual           reduce using rule 61 (EXPRESION -> CONTAINS .)
    bvertical       reduce using rule 61 (EXPRESION -> CONTAINS .)


state 120

    (62) EXPRESION -> LEN .

    mas             reduce using rule 62 (EXPRESION -> LEN .)
    menos           reduce using rule 62 (EXPRESION -> LEN .)
    div             reduce using rule 62 (EXPRESION -> LEN .)
    multi           reduce using rule 62 (EXPRESION -> LEN .)
    mod             reduce using rule 62 (EXPRESION -> LEN .)
    mayor           reduce using rule 62 (EXPRESION -> LEN .)
    menor           reduce using rule 62 (EXPRESION -> LEN .)
    mayorigual      reduce using rule 62 (EXPRESION -> LEN .)
    menorigual      reduce using rule 62 (EXPRESION -> LEN .)
    igualigual      reduce using rule 62 (EXPRESION -> LEN .)
    diferente       reduce using rule 62 (EXPRESION -> LEN .)
    and             reduce using rule 62 (EXPRESION -> LEN .)
    or              reduce using rule 62 (EXPRESION -> LEN .)
    as              reduce using rule 62 (EXPRESION -> LEN .)
    punto           reduce using rule 62 (EXPRESION -> LEN .)
    llavec          reduce using rule 62 (EXPRESION -> LEN .)
    println         reduce using rule 62 (EXPRESION -> LEN .)
    let             reduce using rule 62 (EXPRESION -> LEN .)
    id              reduce using rule 62 (EXPRESION -> LEN .)
    if              reduce using rule 62 (EXPRESION -> LEN .)
    match           reduce using rule 62 (EXPRESION -> LEN .)
    continue        reduce using rule 62 (EXPRESION -> LEN .)
    return          reduce using rule 62 (EXPRESION -> LEN .)
    break           reduce using rule 62 (EXPRESION -> LEN .)
    while           reduce using rule 62 (EXPRESION -> LEN .)
    i64             reduce using rule 62 (EXPRESION -> LEN .)
    f64             reduce using rule 62 (EXPRESION -> LEN .)
    not             reduce using rule 62 (EXPRESION -> LEN .)
    para            reduce using rule 62 (EXPRESION -> LEN .)
    fn              reduce using rule 62 (EXPRESION -> LEN .)
    for             reduce using rule 62 (EXPRESION -> LEN .)
    struct          reduce using rule 62 (EXPRESION -> LEN .)
    modulo          reduce using rule 62 (EXPRESION -> LEN .)
    entero          reduce using rule 62 (EXPRESION -> LEN .)
    decimal         reduce using rule 62 (EXPRESION -> LEN .)
    cadena          reduce using rule 62 (EXPRESION -> LEN .)
    true            reduce using rule 62 (EXPRESION -> LEN .)
    false           reduce using rule 62 (EXPRESION -> LEN .)
    caracter        reduce using rule 62 (EXPRESION -> LEN .)
    loop            reduce using rule 62 (EXPRESION -> LEN .)
    pub             reduce using rule 62 (EXPRESION -> LEN .)
    coma            reduce using rule 62 (EXPRESION -> LEN .)
    parc            reduce using rule 62 (EXPRESION -> LEN .)
    llavea          reduce using rule 62 (EXPRESION -> LEN .)
    puntoycoma      reduce using rule 62 (EXPRESION -> LEN .)
    corc            reduce using rule 62 (EXPRESION -> LEN .)
    igual           reduce using rule 62 (EXPRESION -> LEN .)
    bvertical       reduce using rule 62 (EXPRESION -> LEN .)


state 121

    (63) EXPRESION -> CAPACITY .

    mas             reduce using rule 63 (EXPRESION -> CAPACITY .)
    menos           reduce using rule 63 (EXPRESION -> CAPACITY .)
    div             reduce using rule 63 (EXPRESION -> CAPACITY .)
    multi           reduce using rule 63 (EXPRESION -> CAPACITY .)
    mod             reduce using rule 63 (EXPRESION -> CAPACITY .)
    mayor           reduce using rule 63 (EXPRESION -> CAPACITY .)
    menor           reduce using rule 63 (EXPRESION -> CAPACITY .)
    mayorigual      reduce using rule 63 (EXPRESION -> CAPACITY .)
    menorigual      reduce using rule 63 (EXPRESION -> CAPACITY .)
    igualigual      reduce using rule 63 (EXPRESION -> CAPACITY .)
    diferente       reduce using rule 63 (EXPRESION -> CAPACITY .)
    and             reduce using rule 63 (EXPRESION -> CAPACITY .)
    or              reduce using rule 63 (EXPRESION -> CAPACITY .)
    as              reduce using rule 63 (EXPRESION -> CAPACITY .)
    punto           reduce using rule 63 (EXPRESION -> CAPACITY .)
    llavec          reduce using rule 63 (EXPRESION -> CAPACITY .)
    println         reduce using rule 63 (EXPRESION -> CAPACITY .)
    let             reduce using rule 63 (EXPRESION -> CAPACITY .)
    id              reduce using rule 63 (EXPRESION -> CAPACITY .)
    if              reduce using rule 63 (EXPRESION -> CAPACITY .)
    match           reduce using rule 63 (EXPRESION -> CAPACITY .)
    continue        reduce using rule 63 (EXPRESION -> CAPACITY .)
    return          reduce using rule 63 (EXPRESION -> CAPACITY .)
    break           reduce using rule 63 (EXPRESION -> CAPACITY .)
    while           reduce using rule 63 (EXPRESION -> CAPACITY .)
    i64             reduce using rule 63 (EXPRESION -> CAPACITY .)
    f64             reduce using rule 63 (EXPRESION -> CAPACITY .)
    not             reduce using rule 63 (EXPRESION -> CAPACITY .)
    para            reduce using rule 63 (EXPRESION -> CAPACITY .)
    fn              reduce using rule 63 (EXPRESION -> CAPACITY .)
    for             reduce using rule 63 (EXPRESION -> CAPACITY .)
    struct          reduce using rule 63 (EXPRESION -> CAPACITY .)
    modulo          reduce using rule 63 (EXPRESION -> CAPACITY .)
    entero          reduce using rule 63 (EXPRESION -> CAPACITY .)
    decimal         reduce using rule 63 (EXPRESION -> CAPACITY .)
    cadena          reduce using rule 63 (EXPRESION -> CAPACITY .)
    true            reduce using rule 63 (EXPRESION -> CAPACITY .)
    false           reduce using rule 63 (EXPRESION -> CAPACITY .)
    caracter        reduce using rule 63 (EXPRESION -> CAPACITY .)
    loop            reduce using rule 63 (EXPRESION -> CAPACITY .)
    pub             reduce using rule 63 (EXPRESION -> CAPACITY .)
    coma            reduce using rule 63 (EXPRESION -> CAPACITY .)
    parc            reduce using rule 63 (EXPRESION -> CAPACITY .)
    llavea          reduce using rule 63 (EXPRESION -> CAPACITY .)
    puntoycoma      reduce using rule 63 (EXPRESION -> CAPACITY .)
    corc            reduce using rule 63 (EXPRESION -> CAPACITY .)
    igual           reduce using rule 63 (EXPRESION -> CAPACITY .)
    bvertical       reduce using rule 63 (EXPRESION -> CAPACITY .)


state 122

    (64) EXPRESION -> ACCESVEC .

    mas             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    menos           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    div             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    multi           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    mod             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    mayor           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    menor           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    mayorigual      reduce using rule 64 (EXPRESION -> ACCESVEC .)
    menorigual      reduce using rule 64 (EXPRESION -> ACCESVEC .)
    igualigual      reduce using rule 64 (EXPRESION -> ACCESVEC .)
    diferente       reduce using rule 64 (EXPRESION -> ACCESVEC .)
    and             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    or              reduce using rule 64 (EXPRESION -> ACCESVEC .)
    as              reduce using rule 64 (EXPRESION -> ACCESVEC .)
    punto           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    llavec          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    println         reduce using rule 64 (EXPRESION -> ACCESVEC .)
    let             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    id              reduce using rule 64 (EXPRESION -> ACCESVEC .)
    if              reduce using rule 64 (EXPRESION -> ACCESVEC .)
    match           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    continue        reduce using rule 64 (EXPRESION -> ACCESVEC .)
    return          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    break           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    while           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    i64             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    f64             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    not             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    para            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    fn              reduce using rule 64 (EXPRESION -> ACCESVEC .)
    for             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    struct          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    modulo          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    entero          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    decimal         reduce using rule 64 (EXPRESION -> ACCESVEC .)
    cadena          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    true            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    false           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    caracter        reduce using rule 64 (EXPRESION -> ACCESVEC .)
    loop            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    pub             reduce using rule 64 (EXPRESION -> ACCESVEC .)
    coma            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    parc            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    llavea          reduce using rule 64 (EXPRESION -> ACCESVEC .)
    puntoycoma      reduce using rule 64 (EXPRESION -> ACCESVEC .)
    corc            reduce using rule 64 (EXPRESION -> ACCESVEC .)
    igual           reduce using rule 64 (EXPRESION -> ACCESVEC .)
    bvertical       reduce using rule 64 (EXPRESION -> ACCESVEC .)


state 123

    (65) EXPRESION -> ACCESO_STRUCT .

    mas             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    menos           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    div             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    multi           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    mod             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    mayor           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    menor           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    mayorigual      reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    menorigual      reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    igualigual      reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    diferente       reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    and             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    or              reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    as              reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    punto           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    llavec          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    println         reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    let             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    id              reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    if              reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    match           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    continue        reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    return          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    break           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    while           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    i64             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    f64             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    not             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    para            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    fn              reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    for             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    struct          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    modulo          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    entero          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    decimal         reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    cadena          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    true            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    false           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    caracter        reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    loop            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    pub             reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    coma            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    parc            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    llavea          reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    puntoycoma      reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    corc            reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    igual           reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)
    bvertical       reduce using rule 65 (EXPRESION -> ACCESO_STRUCT .)


state 124

    (213) FORIN -> for . id in ARRFOR BLOQUE_INST

    id              shift and go to state 208


state 125

    (73) TIPODATO -> entero .

    mas             reduce using rule 73 (TIPODATO -> entero .)
    menos           reduce using rule 73 (TIPODATO -> entero .)
    div             reduce using rule 73 (TIPODATO -> entero .)
    multi           reduce using rule 73 (TIPODATO -> entero .)
    mod             reduce using rule 73 (TIPODATO -> entero .)
    mayor           reduce using rule 73 (TIPODATO -> entero .)
    menor           reduce using rule 73 (TIPODATO -> entero .)
    mayorigual      reduce using rule 73 (TIPODATO -> entero .)
    menorigual      reduce using rule 73 (TIPODATO -> entero .)
    igualigual      reduce using rule 73 (TIPODATO -> entero .)
    diferente       reduce using rule 73 (TIPODATO -> entero .)
    and             reduce using rule 73 (TIPODATO -> entero .)
    or              reduce using rule 73 (TIPODATO -> entero .)
    as              reduce using rule 73 (TIPODATO -> entero .)
    punto           reduce using rule 73 (TIPODATO -> entero .)
    llavec          reduce using rule 73 (TIPODATO -> entero .)
    println         reduce using rule 73 (TIPODATO -> entero .)
    let             reduce using rule 73 (TIPODATO -> entero .)
    id              reduce using rule 73 (TIPODATO -> entero .)
    if              reduce using rule 73 (TIPODATO -> entero .)
    match           reduce using rule 73 (TIPODATO -> entero .)
    continue        reduce using rule 73 (TIPODATO -> entero .)
    return          reduce using rule 73 (TIPODATO -> entero .)
    break           reduce using rule 73 (TIPODATO -> entero .)
    while           reduce using rule 73 (TIPODATO -> entero .)
    i64             reduce using rule 73 (TIPODATO -> entero .)
    f64             reduce using rule 73 (TIPODATO -> entero .)
    not             reduce using rule 73 (TIPODATO -> entero .)
    para            reduce using rule 73 (TIPODATO -> entero .)
    fn              reduce using rule 73 (TIPODATO -> entero .)
    for             reduce using rule 73 (TIPODATO -> entero .)
    struct          reduce using rule 73 (TIPODATO -> entero .)
    modulo          reduce using rule 73 (TIPODATO -> entero .)
    entero          reduce using rule 73 (TIPODATO -> entero .)
    decimal         reduce using rule 73 (TIPODATO -> entero .)
    cadena          reduce using rule 73 (TIPODATO -> entero .)
    true            reduce using rule 73 (TIPODATO -> entero .)
    false           reduce using rule 73 (TIPODATO -> entero .)
    caracter        reduce using rule 73 (TIPODATO -> entero .)
    loop            reduce using rule 73 (TIPODATO -> entero .)
    pub             reduce using rule 73 (TIPODATO -> entero .)
    coma            reduce using rule 73 (TIPODATO -> entero .)
    parc            reduce using rule 73 (TIPODATO -> entero .)
    llavea          reduce using rule 73 (TIPODATO -> entero .)
    puntoycoma      reduce using rule 73 (TIPODATO -> entero .)
    corc            reduce using rule 73 (TIPODATO -> entero .)
    igual           reduce using rule 73 (TIPODATO -> entero .)
    bvertical       reduce using rule 73 (TIPODATO -> entero .)


state 126

    (74) TIPODATO -> decimal .

    mas             reduce using rule 74 (TIPODATO -> decimal .)
    menos           reduce using rule 74 (TIPODATO -> decimal .)
    div             reduce using rule 74 (TIPODATO -> decimal .)
    multi           reduce using rule 74 (TIPODATO -> decimal .)
    mod             reduce using rule 74 (TIPODATO -> decimal .)
    mayor           reduce using rule 74 (TIPODATO -> decimal .)
    menor           reduce using rule 74 (TIPODATO -> decimal .)
    mayorigual      reduce using rule 74 (TIPODATO -> decimal .)
    menorigual      reduce using rule 74 (TIPODATO -> decimal .)
    igualigual      reduce using rule 74 (TIPODATO -> decimal .)
    diferente       reduce using rule 74 (TIPODATO -> decimal .)
    and             reduce using rule 74 (TIPODATO -> decimal .)
    or              reduce using rule 74 (TIPODATO -> decimal .)
    as              reduce using rule 74 (TIPODATO -> decimal .)
    punto           reduce using rule 74 (TIPODATO -> decimal .)
    llavec          reduce using rule 74 (TIPODATO -> decimal .)
    println         reduce using rule 74 (TIPODATO -> decimal .)
    let             reduce using rule 74 (TIPODATO -> decimal .)
    id              reduce using rule 74 (TIPODATO -> decimal .)
    if              reduce using rule 74 (TIPODATO -> decimal .)
    match           reduce using rule 74 (TIPODATO -> decimal .)
    continue        reduce using rule 74 (TIPODATO -> decimal .)
    return          reduce using rule 74 (TIPODATO -> decimal .)
    break           reduce using rule 74 (TIPODATO -> decimal .)
    while           reduce using rule 74 (TIPODATO -> decimal .)
    i64             reduce using rule 74 (TIPODATO -> decimal .)
    f64             reduce using rule 74 (TIPODATO -> decimal .)
    not             reduce using rule 74 (TIPODATO -> decimal .)
    para            reduce using rule 74 (TIPODATO -> decimal .)
    fn              reduce using rule 74 (TIPODATO -> decimal .)
    for             reduce using rule 74 (TIPODATO -> decimal .)
    struct          reduce using rule 74 (TIPODATO -> decimal .)
    modulo          reduce using rule 74 (TIPODATO -> decimal .)
    entero          reduce using rule 74 (TIPODATO -> decimal .)
    decimal         reduce using rule 74 (TIPODATO -> decimal .)
    cadena          reduce using rule 74 (TIPODATO -> decimal .)
    true            reduce using rule 74 (TIPODATO -> decimal .)
    false           reduce using rule 74 (TIPODATO -> decimal .)
    caracter        reduce using rule 74 (TIPODATO -> decimal .)
    loop            reduce using rule 74 (TIPODATO -> decimal .)
    pub             reduce using rule 74 (TIPODATO -> decimal .)
    coma            reduce using rule 74 (TIPODATO -> decimal .)
    parc            reduce using rule 74 (TIPODATO -> decimal .)
    llavea          reduce using rule 74 (TIPODATO -> decimal .)
    puntoycoma      reduce using rule 74 (TIPODATO -> decimal .)
    corc            reduce using rule 74 (TIPODATO -> decimal .)
    igual           reduce using rule 74 (TIPODATO -> decimal .)
    bvertical       reduce using rule 74 (TIPODATO -> decimal .)


state 127

    (75) TIPODATO -> cadena .

    mas             reduce using rule 75 (TIPODATO -> cadena .)
    menos           reduce using rule 75 (TIPODATO -> cadena .)
    div             reduce using rule 75 (TIPODATO -> cadena .)
    multi           reduce using rule 75 (TIPODATO -> cadena .)
    mod             reduce using rule 75 (TIPODATO -> cadena .)
    mayor           reduce using rule 75 (TIPODATO -> cadena .)
    menor           reduce using rule 75 (TIPODATO -> cadena .)
    mayorigual      reduce using rule 75 (TIPODATO -> cadena .)
    menorigual      reduce using rule 75 (TIPODATO -> cadena .)
    igualigual      reduce using rule 75 (TIPODATO -> cadena .)
    diferente       reduce using rule 75 (TIPODATO -> cadena .)
    and             reduce using rule 75 (TIPODATO -> cadena .)
    or              reduce using rule 75 (TIPODATO -> cadena .)
    as              reduce using rule 75 (TIPODATO -> cadena .)
    punto           reduce using rule 75 (TIPODATO -> cadena .)
    llavec          reduce using rule 75 (TIPODATO -> cadena .)
    println         reduce using rule 75 (TIPODATO -> cadena .)
    let             reduce using rule 75 (TIPODATO -> cadena .)
    id              reduce using rule 75 (TIPODATO -> cadena .)
    if              reduce using rule 75 (TIPODATO -> cadena .)
    match           reduce using rule 75 (TIPODATO -> cadena .)
    continue        reduce using rule 75 (TIPODATO -> cadena .)
    return          reduce using rule 75 (TIPODATO -> cadena .)
    break           reduce using rule 75 (TIPODATO -> cadena .)
    while           reduce using rule 75 (TIPODATO -> cadena .)
    i64             reduce using rule 75 (TIPODATO -> cadena .)
    f64             reduce using rule 75 (TIPODATO -> cadena .)
    not             reduce using rule 75 (TIPODATO -> cadena .)
    para            reduce using rule 75 (TIPODATO -> cadena .)
    fn              reduce using rule 75 (TIPODATO -> cadena .)
    for             reduce using rule 75 (TIPODATO -> cadena .)
    struct          reduce using rule 75 (TIPODATO -> cadena .)
    modulo          reduce using rule 75 (TIPODATO -> cadena .)
    entero          reduce using rule 75 (TIPODATO -> cadena .)
    decimal         reduce using rule 75 (TIPODATO -> cadena .)
    cadena          reduce using rule 75 (TIPODATO -> cadena .)
    true            reduce using rule 75 (TIPODATO -> cadena .)
    false           reduce using rule 75 (TIPODATO -> cadena .)
    caracter        reduce using rule 75 (TIPODATO -> cadena .)
    loop            reduce using rule 75 (TIPODATO -> cadena .)
    pub             reduce using rule 75 (TIPODATO -> cadena .)
    coma            reduce using rule 75 (TIPODATO -> cadena .)
    parc            reduce using rule 75 (TIPODATO -> cadena .)
    llavea          reduce using rule 75 (TIPODATO -> cadena .)
    puntoycoma      reduce using rule 75 (TIPODATO -> cadena .)
    corc            reduce using rule 75 (TIPODATO -> cadena .)
    igual           reduce using rule 75 (TIPODATO -> cadena .)
    bvertical       reduce using rule 75 (TIPODATO -> cadena .)


state 128

    (76) TIPODATO -> true .

    mas             reduce using rule 76 (TIPODATO -> true .)
    menos           reduce using rule 76 (TIPODATO -> true .)
    div             reduce using rule 76 (TIPODATO -> true .)
    multi           reduce using rule 76 (TIPODATO -> true .)
    mod             reduce using rule 76 (TIPODATO -> true .)
    mayor           reduce using rule 76 (TIPODATO -> true .)
    menor           reduce using rule 76 (TIPODATO -> true .)
    mayorigual      reduce using rule 76 (TIPODATO -> true .)
    menorigual      reduce using rule 76 (TIPODATO -> true .)
    igualigual      reduce using rule 76 (TIPODATO -> true .)
    diferente       reduce using rule 76 (TIPODATO -> true .)
    and             reduce using rule 76 (TIPODATO -> true .)
    or              reduce using rule 76 (TIPODATO -> true .)
    as              reduce using rule 76 (TIPODATO -> true .)
    punto           reduce using rule 76 (TIPODATO -> true .)
    llavec          reduce using rule 76 (TIPODATO -> true .)
    println         reduce using rule 76 (TIPODATO -> true .)
    let             reduce using rule 76 (TIPODATO -> true .)
    id              reduce using rule 76 (TIPODATO -> true .)
    if              reduce using rule 76 (TIPODATO -> true .)
    match           reduce using rule 76 (TIPODATO -> true .)
    continue        reduce using rule 76 (TIPODATO -> true .)
    return          reduce using rule 76 (TIPODATO -> true .)
    break           reduce using rule 76 (TIPODATO -> true .)
    while           reduce using rule 76 (TIPODATO -> true .)
    i64             reduce using rule 76 (TIPODATO -> true .)
    f64             reduce using rule 76 (TIPODATO -> true .)
    not             reduce using rule 76 (TIPODATO -> true .)
    para            reduce using rule 76 (TIPODATO -> true .)
    fn              reduce using rule 76 (TIPODATO -> true .)
    for             reduce using rule 76 (TIPODATO -> true .)
    struct          reduce using rule 76 (TIPODATO -> true .)
    modulo          reduce using rule 76 (TIPODATO -> true .)
    entero          reduce using rule 76 (TIPODATO -> true .)
    decimal         reduce using rule 76 (TIPODATO -> true .)
    cadena          reduce using rule 76 (TIPODATO -> true .)
    true            reduce using rule 76 (TIPODATO -> true .)
    false           reduce using rule 76 (TIPODATO -> true .)
    caracter        reduce using rule 76 (TIPODATO -> true .)
    loop            reduce using rule 76 (TIPODATO -> true .)
    pub             reduce using rule 76 (TIPODATO -> true .)
    coma            reduce using rule 76 (TIPODATO -> true .)
    parc            reduce using rule 76 (TIPODATO -> true .)
    llavea          reduce using rule 76 (TIPODATO -> true .)
    puntoycoma      reduce using rule 76 (TIPODATO -> true .)
    corc            reduce using rule 76 (TIPODATO -> true .)
    igual           reduce using rule 76 (TIPODATO -> true .)
    bvertical       reduce using rule 76 (TIPODATO -> true .)


state 129

    (77) TIPODATO -> false .

    mas             reduce using rule 77 (TIPODATO -> false .)
    menos           reduce using rule 77 (TIPODATO -> false .)
    div             reduce using rule 77 (TIPODATO -> false .)
    multi           reduce using rule 77 (TIPODATO -> false .)
    mod             reduce using rule 77 (TIPODATO -> false .)
    mayor           reduce using rule 77 (TIPODATO -> false .)
    menor           reduce using rule 77 (TIPODATO -> false .)
    mayorigual      reduce using rule 77 (TIPODATO -> false .)
    menorigual      reduce using rule 77 (TIPODATO -> false .)
    igualigual      reduce using rule 77 (TIPODATO -> false .)
    diferente       reduce using rule 77 (TIPODATO -> false .)
    and             reduce using rule 77 (TIPODATO -> false .)
    or              reduce using rule 77 (TIPODATO -> false .)
    as              reduce using rule 77 (TIPODATO -> false .)
    punto           reduce using rule 77 (TIPODATO -> false .)
    llavec          reduce using rule 77 (TIPODATO -> false .)
    println         reduce using rule 77 (TIPODATO -> false .)
    let             reduce using rule 77 (TIPODATO -> false .)
    id              reduce using rule 77 (TIPODATO -> false .)
    if              reduce using rule 77 (TIPODATO -> false .)
    match           reduce using rule 77 (TIPODATO -> false .)
    continue        reduce using rule 77 (TIPODATO -> false .)
    return          reduce using rule 77 (TIPODATO -> false .)
    break           reduce using rule 77 (TIPODATO -> false .)
    while           reduce using rule 77 (TIPODATO -> false .)
    i64             reduce using rule 77 (TIPODATO -> false .)
    f64             reduce using rule 77 (TIPODATO -> false .)
    not             reduce using rule 77 (TIPODATO -> false .)
    para            reduce using rule 77 (TIPODATO -> false .)
    fn              reduce using rule 77 (TIPODATO -> false .)
    for             reduce using rule 77 (TIPODATO -> false .)
    struct          reduce using rule 77 (TIPODATO -> false .)
    modulo          reduce using rule 77 (TIPODATO -> false .)
    entero          reduce using rule 77 (TIPODATO -> false .)
    decimal         reduce using rule 77 (TIPODATO -> false .)
    cadena          reduce using rule 77 (TIPODATO -> false .)
    true            reduce using rule 77 (TIPODATO -> false .)
    false           reduce using rule 77 (TIPODATO -> false .)
    caracter        reduce using rule 77 (TIPODATO -> false .)
    loop            reduce using rule 77 (TIPODATO -> false .)
    pub             reduce using rule 77 (TIPODATO -> false .)
    coma            reduce using rule 77 (TIPODATO -> false .)
    parc            reduce using rule 77 (TIPODATO -> false .)
    llavea          reduce using rule 77 (TIPODATO -> false .)
    puntoycoma      reduce using rule 77 (TIPODATO -> false .)
    corc            reduce using rule 77 (TIPODATO -> false .)
    igual           reduce using rule 77 (TIPODATO -> false .)
    bvertical       reduce using rule 77 (TIPODATO -> false .)


state 130

    (79) TIPODATO -> caracter .

    mas             reduce using rule 79 (TIPODATO -> caracter .)
    menos           reduce using rule 79 (TIPODATO -> caracter .)
    div             reduce using rule 79 (TIPODATO -> caracter .)
    multi           reduce using rule 79 (TIPODATO -> caracter .)
    mod             reduce using rule 79 (TIPODATO -> caracter .)
    mayor           reduce using rule 79 (TIPODATO -> caracter .)
    menor           reduce using rule 79 (TIPODATO -> caracter .)
    mayorigual      reduce using rule 79 (TIPODATO -> caracter .)
    menorigual      reduce using rule 79 (TIPODATO -> caracter .)
    igualigual      reduce using rule 79 (TIPODATO -> caracter .)
    diferente       reduce using rule 79 (TIPODATO -> caracter .)
    and             reduce using rule 79 (TIPODATO -> caracter .)
    or              reduce using rule 79 (TIPODATO -> caracter .)
    as              reduce using rule 79 (TIPODATO -> caracter .)
    punto           reduce using rule 79 (TIPODATO -> caracter .)
    llavec          reduce using rule 79 (TIPODATO -> caracter .)
    println         reduce using rule 79 (TIPODATO -> caracter .)
    let             reduce using rule 79 (TIPODATO -> caracter .)
    id              reduce using rule 79 (TIPODATO -> caracter .)
    if              reduce using rule 79 (TIPODATO -> caracter .)
    match           reduce using rule 79 (TIPODATO -> caracter .)
    continue        reduce using rule 79 (TIPODATO -> caracter .)
    return          reduce using rule 79 (TIPODATO -> caracter .)
    break           reduce using rule 79 (TIPODATO -> caracter .)
    while           reduce using rule 79 (TIPODATO -> caracter .)
    i64             reduce using rule 79 (TIPODATO -> caracter .)
    f64             reduce using rule 79 (TIPODATO -> caracter .)
    not             reduce using rule 79 (TIPODATO -> caracter .)
    para            reduce using rule 79 (TIPODATO -> caracter .)
    fn              reduce using rule 79 (TIPODATO -> caracter .)
    for             reduce using rule 79 (TIPODATO -> caracter .)
    struct          reduce using rule 79 (TIPODATO -> caracter .)
    modulo          reduce using rule 79 (TIPODATO -> caracter .)
    entero          reduce using rule 79 (TIPODATO -> caracter .)
    decimal         reduce using rule 79 (TIPODATO -> caracter .)
    cadena          reduce using rule 79 (TIPODATO -> caracter .)
    true            reduce using rule 79 (TIPODATO -> caracter .)
    false           reduce using rule 79 (TIPODATO -> caracter .)
    caracter        reduce using rule 79 (TIPODATO -> caracter .)
    loop            reduce using rule 79 (TIPODATO -> caracter .)
    pub             reduce using rule 79 (TIPODATO -> caracter .)
    coma            reduce using rule 79 (TIPODATO -> caracter .)
    parc            reduce using rule 79 (TIPODATO -> caracter .)
    llavea          reduce using rule 79 (TIPODATO -> caracter .)
    puntoycoma      reduce using rule 79 (TIPODATO -> caracter .)
    corc            reduce using rule 79 (TIPODATO -> caracter .)
    igual           reduce using rule 79 (TIPODATO -> caracter .)
    bvertical       reduce using rule 79 (TIPODATO -> caracter .)


state 131

    (144) LOOP -> loop . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 209

state 132

    (161) PARAMETRO -> mut id dospuntos . TIPOVAR
    (166) PARAMETRO -> mut id dospuntos . VEC
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    Vec             shift and go to state 65

    TIPOVAR                        shift and go to state 210
    VEC                            shift and go to state 211

state 133

    (225) ELSTRUCT -> id dospuntos TIPOVAR .

    llavec          reduce using rule 225 (ELSTRUCT -> id dospuntos TIPOVAR .)
    coma            reduce using rule 225 (ELSTRUCT -> id dospuntos TIPOVAR .)


state 134

    (223) CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .

    llavec          reduce using rule 223 (CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .)
    coma            reduce using rule 223 (CONTENT_STRUCT -> CONTENT_STRUCT coma ELSTRUCT .)


state 135

    (114) DECLARACION -> let mut id dospuntos . TIPOVAR igual EXPRESION
    (118) DECLARACION -> let mut id dospuntos . TIPOVAR
    (200) DECARREGLO -> let mut id dospuntos . DIMENSION_ARR igual ARREGLO
    (172) DECVECTOR -> let mut id dospuntos . VEC igual VECI
    (174) DECVECTOR -> let mut id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (229) DECSTRUCT -> let mut id dospuntos . id igual STRUCT_EXP
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    id              shift and go to state 212
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    cora            shift and go to state 141
    Vec             shift and go to state 65

    TIPOVAR                        shift and go to state 213
    DIMENSION_ARR                  shift and go to state 214
    VEC                            shift and go to state 215

state 136

    (115) DECLARACION -> let mut id igual . EXPRESION
    (202) DECARREGLO -> let mut id igual . ARREGLO
    (170) DECVECTOR -> let mut id igual . VECI
    (227) DECSTRUCT -> let mut id igual . STRUCT_EXP
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    cora            shift and go to state 149
    vecI            shift and go to state 150
    id              shift and go to state 142
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 216
    ARREGLO                        shift and go to state 217
    VECI                           shift and go to state 218
    STRUCT_EXP                     shift and go to state 219
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 137

    (228) DECSTRUCT -> let id dospuntos id . igual STRUCT_EXP

    igual           shift and go to state 220


state 138

    (116) DECLARACION -> let id dospuntos TIPOVAR . igual EXPRESION

    igual           shift and go to state 221


state 139

    (199) DECARREGLO -> let id dospuntos DIMENSION_ARR . igual ARREGLO

    igual           shift and go to state 222


state 140

    (171) DECVECTOR -> let id dospuntos VEC . igual VECI
    (173) DECVECTOR -> let id dospuntos VEC . igual Vec dospuntos dospuntos FUNCVEC

    igual           shift and go to state 223


state 141

    (203) DIMENSION_ARR -> cora . DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> cora . TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> cora . id puntoycoma EXPRESION corc
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize

    id              shift and go to state 226
    cora            shift and go to state 141
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64

    DIMENSION_ARR                  shift and go to state 224
    TIPOVAR                        shift and go to state 225

state 142

    (230) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec
    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    llavea          shift and go to state 227
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    llavec          reduce using rule 78 (ID -> id .)
    pub             reduce using rule 78 (ID -> id .)
    fn              reduce using rule 78 (ID -> id .)
    modulo          reduce using rule 78 (ID -> id .)
    struct          reduce using rule 78 (ID -> id .)
    let             reduce using rule 78 (ID -> id .)
    coma            reduce using rule 78 (ID -> id .)
    puntoycoma      reduce using rule 78 (ID -> id .)
    corc            reduce using rule 78 (ID -> id .)
    punto           shift and go to state 228
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 229

state 143

    (117) DECLARACION -> let id igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    pub             reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    fn              reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    modulo          reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    struct          reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    let             reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    puntoycoma      reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    coma            reduce using rule 117 (DECLARACION -> let id igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 144

    (201) DECARREGLO -> let id igual ARREGLO .

    llavec          reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    pub             reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    fn              reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    modulo          reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    struct          reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    let             reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    puntoycoma      reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)
    coma            reduce using rule 201 (DECARREGLO -> let id igual ARREGLO .)


state 145

    (169) DECVECTOR -> let id igual VECI .

    llavec          reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    pub             reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    fn              reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    modulo          reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    struct          reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    let             reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    puntoycoma      reduce using rule 169 (DECVECTOR -> let id igual VECI .)
    coma            reduce using rule 169 (DECVECTOR -> let id igual VECI .)


state 146

    (226) DECSTRUCT -> let id igual STRUCT_EXP .

    llavec          reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    pub             reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    fn              reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    modulo          reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    struct          reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    let             reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)
    coma            reduce using rule 226 (DECSTRUCT -> let id igual STRUCT_EXP .)


state 147

    (59) EXPRESION -> CALL .

    mas             reduce using rule 59 (EXPRESION -> CALL .)
    menos           reduce using rule 59 (EXPRESION -> CALL .)
    div             reduce using rule 59 (EXPRESION -> CALL .)
    multi           reduce using rule 59 (EXPRESION -> CALL .)
    mod             reduce using rule 59 (EXPRESION -> CALL .)
    mayor           reduce using rule 59 (EXPRESION -> CALL .)
    menor           reduce using rule 59 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 59 (EXPRESION -> CALL .)
    menorigual      reduce using rule 59 (EXPRESION -> CALL .)
    igualigual      reduce using rule 59 (EXPRESION -> CALL .)
    diferente       reduce using rule 59 (EXPRESION -> CALL .)
    and             reduce using rule 59 (EXPRESION -> CALL .)
    or              reduce using rule 59 (EXPRESION -> CALL .)
    as              reduce using rule 59 (EXPRESION -> CALL .)
    punto           reduce using rule 59 (EXPRESION -> CALL .)
    llavec          reduce using rule 59 (EXPRESION -> CALL .)
    pub             reduce using rule 59 (EXPRESION -> CALL .)
    fn              reduce using rule 59 (EXPRESION -> CALL .)
    modulo          reduce using rule 59 (EXPRESION -> CALL .)
    struct          reduce using rule 59 (EXPRESION -> CALL .)
    let             reduce using rule 59 (EXPRESION -> CALL .)
    coma            reduce using rule 59 (EXPRESION -> CALL .)
    parc            reduce using rule 59 (EXPRESION -> CALL .)
    llavea          reduce using rule 59 (EXPRESION -> CALL .)
    puntoycoma      reduce using rule 59 (EXPRESION -> CALL .)
    println         reduce using rule 59 (EXPRESION -> CALL .)
    id              reduce using rule 59 (EXPRESION -> CALL .)
    if              reduce using rule 59 (EXPRESION -> CALL .)
    match           reduce using rule 59 (EXPRESION -> CALL .)
    continue        reduce using rule 59 (EXPRESION -> CALL .)
    return          reduce using rule 59 (EXPRESION -> CALL .)
    break           reduce using rule 59 (EXPRESION -> CALL .)
    while           reduce using rule 59 (EXPRESION -> CALL .)
    i64             reduce using rule 59 (EXPRESION -> CALL .)
    f64             reduce using rule 59 (EXPRESION -> CALL .)
    not             reduce using rule 59 (EXPRESION -> CALL .)
    para            reduce using rule 59 (EXPRESION -> CALL .)
    for             reduce using rule 59 (EXPRESION -> CALL .)
    entero          reduce using rule 59 (EXPRESION -> CALL .)
    decimal         reduce using rule 59 (EXPRESION -> CALL .)
    cadena          reduce using rule 59 (EXPRESION -> CALL .)
    true            reduce using rule 59 (EXPRESION -> CALL .)
    false           reduce using rule 59 (EXPRESION -> CALL .)
    caracter        reduce using rule 59 (EXPRESION -> CALL .)
    loop            reduce using rule 59 (EXPRESION -> CALL .)
    corc            reduce using rule 59 (EXPRESION -> CALL .)
    igual           reduce using rule 59 (EXPRESION -> CALL .)
    bvertical       reduce using rule 59 (EXPRESION -> CALL .)


state 148

    (66) EXPRESION -> ACCESO_MOD .

    mas             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    llavec          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    pub             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    coma            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    parc            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    llavea          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    puntoycoma      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    corc            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    igual           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    bvertical       reduce using rule 66 (EXPRESION -> ACCESO_MOD .)


state 149

    (206) ARREGLO -> cora . CONT_ARR corc
    (207) ARREGLO -> cora . EXPRESION puntoycoma EXPRESION corc
    (208) CONT_ARR -> . CONT_ARR coma ELARR
    (209) CONT_ARR -> . ELARR
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (210) ELARR -> . ARREGLO
    (211) ELARR -> . EXPRESION
    (212) ELARR -> . STRUCT_EXP
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 235
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131
    cora            shift and go to state 149

    CONT_ARR                       shift and go to state 230
    EXPRESION                      shift and go to state 231
    ELARR                          shift and go to state 232
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148
    ARREGLO                        shift and go to state 233
    STRUCT_EXP                     shift and go to state 234

state 150

    (178) VECI -> vecI . cora CONJVECI corc
    (179) VECI -> vecI . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 236


state 151

    (87) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 237
    IF_TER                         shift and go to state 110
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 152

    (95) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 238
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 153

    (162) PARAMETRO -> id dospuntos ampersand mut . cora TIPOVAR corc
    (163) PARAMETRO -> id dospuntos ampersand mut . DIMENSION_ARR
    (164) PARAMETRO -> id dospuntos ampersand mut . VEC
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    cora            shift and go to state 239
    Vec             shift and go to state 65

    DIMENSION_ARR                  shift and go to state 240
    VEC                            shift and go to state 241

state 154

    (175) VEC -> Vec menor . VEC mayor
    (176) VEC -> Vec menor . TIPOVAR mayor
    (177) VEC -> Vec menor . id mayor
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize

    id              shift and go to state 244
    Vec             shift and go to state 65
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64

    VEC                            shift and go to state 242
    TIPOVAR                        shift and go to state 243

state 155

    (152) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . TIPOVAR BLOQUE_INST
    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . id BLOQUE_INST
    (157) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor . VEC BLOQUE_INST
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor

    id              shift and go to state 245
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    Vec             shift and go to state 65

    TIPOVAR                        shift and go to state 246
    VEC                            shift and go to state 247

state 156

    (154) FUNCION -> fn id para parc menos mayor TIPOVAR . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 248

state 157

    (151) BLOQUE_INST -> llavea INSTRUCCIONES llavec .

    modulo          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    fn              reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    struct          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    $end            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    llavec          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    pub             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    let             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    println         reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    id              reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    if              reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    match           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    continue        reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    return          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    break           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    while           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    i64             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    f64             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menos           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    not             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    para            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    for             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    entero          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    decimal         reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    cadena          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    true            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    false           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    caracter        reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    loop            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mas             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    div             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    multi           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mod             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mayor           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menor           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    mayorigual      reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    menorigual      reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    igualigual      reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    diferente       reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    and             reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    or              reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    as              reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    punto           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    coma            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    parc            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    llavea          reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    puntoycoma      reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    corc            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    igual           reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    bvertical       reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    else            reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)
    guionbajo       reduce using rule 151 (BLOQUE_INST -> llavea INSTRUCCIONES llavec .)


state 158

    (7) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    llavec          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    println         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    let             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    id              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    if              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    match           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    continue        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    return          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    break           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    while           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    i64             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    f64             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    menos           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    not             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    para            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    fn              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    for             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    struct          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    modulo          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    entero          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    decimal         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    cadena          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    true            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    false           reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    caracter        reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    loop            reduce using rule 7 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 159

    (9) INSTRUCCION -> PRINT puntoycoma .

    llavec          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    println         reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    let             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    id              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    if              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    match           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    continue        reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    return          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    break           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    while           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    i64             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    f64             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    menos           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    not             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    para            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    fn              reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    for             reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    struct          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    modulo          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    entero          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    decimal         reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    cadena          reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    true            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    false           reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    caracter        reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)
    loop            reduce using rule 9 (INSTRUCCION -> PRINT puntoycoma .)


state 160

    (10) INSTRUCCION -> DECLARACION puntoycoma .

    llavec          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    println         reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    let             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    id              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    if              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    match           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    continue        reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    return          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    break           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    while           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    i64             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    f64             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    menos           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    not             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    para            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    fn              reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    for             reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    struct          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    modulo          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    entero          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    decimal         reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    cadena          reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    true            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    false           reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    caracter        reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)
    loop            reduce using rule 10 (INSTRUCCION -> DECLARACION puntoycoma .)


state 161

    (11) INSTRUCCION -> ASIGNACION puntoycoma .

    llavec          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    println         reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    let             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    id              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    if              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    match           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    continue        reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    return          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    break           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    while           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    i64             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    f64             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    menos           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    not             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    para            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    fn              reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    for             reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    struct          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    modulo          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    entero          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    decimal         reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    cadena          reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    true            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    false           reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    caracter        reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)
    loop            reduce using rule 11 (INSTRUCCION -> ASIGNACION puntoycoma .)


state 162

    (14) INSTRUCCION -> CONTINUE puntoycoma .

    llavec          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    println         reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    let             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    id              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    if              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    match           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    continue        reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    return          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    break           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    while           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    i64             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    f64             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    menos           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    not             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    para            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    fn              reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    for             reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    struct          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    modulo          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    entero          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    decimal         reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    cadena          reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    true            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    false           reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    caracter        reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)
    loop            reduce using rule 14 (INSTRUCCION -> CONTINUE puntoycoma .)


state 163

    (15) INSTRUCCION -> RETURN puntoycoma .

    llavec          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    println         reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    let             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    id              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    if              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    match           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    continue        reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    return          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    break           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    while           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    i64             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    f64             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    menos           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    not             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    para            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    fn              reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    for             reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    struct          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    modulo          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    entero          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    decimal         reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    cadena          reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    true            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    false           reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    caracter        reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)
    loop            reduce using rule 15 (INSTRUCCION -> RETURN puntoycoma .)


state 164

    (16) INSTRUCCION -> BREAK puntoycoma .

    llavec          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    println         reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    let             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    id              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    if              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    match           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    continue        reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    return          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    break           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    while           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    i64             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    f64             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    menos           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    not             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    para            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    fn              reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    for             reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    struct          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    modulo          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    entero          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    decimal         reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    cadena          reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    true            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    false           reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    caracter        reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)
    loop            reduce using rule 16 (INSTRUCCION -> BREAK puntoycoma .)


state 165

    (31) EXPRESION -> EXPRESION mas . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 249
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 166

    (32) EXPRESION -> EXPRESION menos . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 250
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 167

    (33) EXPRESION -> EXPRESION div . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 251
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 168

    (34) EXPRESION -> EXPRESION multi . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 252
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 169

    (35) EXPRESION -> EXPRESION mod . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 253
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 170

    (39) EXPRESION -> EXPRESION mayor . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 254
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 171

    (40) EXPRESION -> EXPRESION menor . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 255
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 172

    (41) EXPRESION -> EXPRESION mayorigual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 256
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 173

    (42) EXPRESION -> EXPRESION menorigual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 257
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 174

    (43) EXPRESION -> EXPRESION igualigual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 258
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 175

    (44) EXPRESION -> EXPRESION diferente . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 259
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 176

    (45) EXPRESION -> EXPRESION and . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 260
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 177

    (46) EXPRESION -> EXPRESION or . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 261
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 178

    (100) CAST_AS -> EXPRESION as . TIPOVAR
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize

    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64

    TIPOVAR                        shift and go to state 262

state 179

    (101) ABS -> EXPRESION punto . abs para parc
    (103) CLONE -> EXPRESION punto . clone para parc
    (106) SQRT -> EXPRESION punto . sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION punto . toString para parc
    (109) TO_STRING_OWNED -> EXPRESION punto . toOwned para parc
    (191) LEN -> EXPRESION punto . len para parc

    abs             shift and go to state 263
    clone           shift and go to state 264
    sqrt            shift and go to state 265
    toString        shift and go to state 266
    toOwned         shift and go to state 267
    len             shift and go to state 268


state 180

    (19) INSTRUCCION -> CALL puntoycoma .

    llavec          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    println         reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    let             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    id              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    if              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    match           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    continue        reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    return          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    break           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    while           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    i64             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    f64             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    menos           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    not             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    para            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    fn              reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    for             reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    struct          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    modulo          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    entero          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    decimal         reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    cadena          reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    true            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    false           reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    caracter        reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)
    loop            reduce using rule 19 (INSTRUCCION -> CALL puntoycoma .)


state 181

    (21) INSTRUCCION -> DECVECTOR puntoycoma .

    llavec          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    println         reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    let             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    id              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    if              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    match           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    continue        reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    return          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    break           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    while           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    i64             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    f64             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    menos           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    not             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    para            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    fn              reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    for             reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    struct          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    modulo          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    entero          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    decimal         reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    cadena          reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    true            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    false           reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    caracter        reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)
    loop            reduce using rule 21 (INSTRUCCION -> DECVECTOR puntoycoma .)


state 182

    (22) INSTRUCCION -> PUSH puntoycoma .

    llavec          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    println         reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    let             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    id              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    if              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    match           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    continue        reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    return          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    break           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    while           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    i64             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    f64             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    menos           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    not             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    para            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    fn              reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    for             reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    struct          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    modulo          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    entero          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    decimal         reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    cadena          reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    true            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    false           reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    caracter        reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)
    loop            reduce using rule 22 (INSTRUCCION -> PUSH puntoycoma .)


state 183

    (23) INSTRUCCION -> INSERT puntoycoma .

    llavec          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    println         reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    let             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    id              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    if              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    match           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    continue        reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    return          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    break           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    while           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    i64             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    f64             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    menos           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    not             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    para            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    fn              reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    for             reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    struct          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    modulo          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    entero          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    decimal         reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    cadena          reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    true            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    false           reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    caracter        reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)
    loop            reduce using rule 23 (INSTRUCCION -> INSERT puntoycoma .)


state 184

    (24) INSTRUCCION -> DECARREGLO puntoycoma .

    llavec          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    println         reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    let             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    id              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    if              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    match           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    continue        reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    return          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    break           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    while           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    i64             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    f64             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    menos           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    not             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    para            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    fn              reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    for             reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    struct          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    modulo          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    entero          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    decimal         reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    cadena          reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    true            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    false           reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    caracter        reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)
    loop            reduce using rule 24 (INSTRUCCION -> DECARREGLO puntoycoma .)


state 185

    (27) INSTRUCCION -> DECSTRUCT puntoycoma .

    llavec          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    println         reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    let             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    id              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    if              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    match           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    continue        reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    return          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    break           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    while           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    i64             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    f64             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    menos           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    not             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    para            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    fn              reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    for             reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    struct          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    modulo          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    entero          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    decimal         reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    cadena          reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    true            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    false           reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    caracter        reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)
    loop            reduce using rule 27 (INSTRUCCION -> DECSTRUCT puntoycoma .)


state 186

    (28) INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .

    llavec          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    println         reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    let             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    id              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    if              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    match           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    continue        reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    return          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    break           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    while           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    i64             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    f64             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    menos           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    not             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    para            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    fn              reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    for             reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    struct          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    modulo          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    entero          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    decimal         reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    cadena          reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    true            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    false           reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    caracter        reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)
    loop            reduce using rule 28 (INSTRUCCION -> MOD_VAR_STRUCT puntoycoma .)


state 187

    (30) INSTRUCCION -> ACCESO_MOD puntoycoma .

    llavec          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    println         reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    let             reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    id              reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    if              reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    match           reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    continue        reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    return          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    break           reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    while           reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    i64             reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    f64             reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    menos           reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    not             reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    para            reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    fn              reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    for             reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    struct          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    modulo          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    entero          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    decimal         reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    cadena          reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    true            reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    false           reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    caracter        reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)
    loop            reduce using rule 30 (INSTRUCCION -> ACCESO_MOD puntoycoma .)


state 188

    (112) PRINT -> println para . EXPRESION parc
    (113) PRINT -> println para . EXPRESION coma CONJEXP parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 269
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 189

    (48) EXPRESION -> para EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 270
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 190

    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    parc            reduce using rule 78 (ID -> id .)
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    llavea          reduce using rule 78 (ID -> id .)
    puntoycoma      reduce using rule 78 (ID -> id .)
    llavec          reduce using rule 78 (ID -> id .)
    println         reduce using rule 78 (ID -> id .)
    let             reduce using rule 78 (ID -> id .)
    id              reduce using rule 78 (ID -> id .)
    if              reduce using rule 78 (ID -> id .)
    match           reduce using rule 78 (ID -> id .)
    continue        reduce using rule 78 (ID -> id .)
    return          reduce using rule 78 (ID -> id .)
    break           reduce using rule 78 (ID -> id .)
    while           reduce using rule 78 (ID -> id .)
    i64             reduce using rule 78 (ID -> id .)
    f64             reduce using rule 78 (ID -> id .)
    not             reduce using rule 78 (ID -> id .)
    fn              reduce using rule 78 (ID -> id .)
    for             reduce using rule 78 (ID -> id .)
    struct          reduce using rule 78 (ID -> id .)
    modulo          reduce using rule 78 (ID -> id .)
    entero          reduce using rule 78 (ID -> id .)
    decimal         reduce using rule 78 (ID -> id .)
    cadena          reduce using rule 78 (ID -> id .)
    true            reduce using rule 78 (ID -> id .)
    false           reduce using rule 78 (ID -> id .)
    caracter        reduce using rule 78 (ID -> id .)
    loop            reduce using rule 78 (ID -> id .)
    pub             reduce using rule 78 (ID -> id .)
    coma            reduce using rule 78 (ID -> id .)
    corc            reduce using rule 78 (ID -> id .)
    igual           reduce using rule 78 (ID -> id .)
    bvertical       reduce using rule 78 (ID -> id .)
    punto           shift and go to state 228
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]
  ! para            [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 229

state 191

    (114) DECLARACION -> let mut . id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let mut . id igual EXPRESION
    (118) DECLARACION -> let mut . id dospuntos TIPOVAR
    (170) DECVECTOR -> let mut . id igual VECI
    (172) DECVECTOR -> let mut . id dospuntos VEC igual VECI
    (174) DECVECTOR -> let mut . id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (200) DECARREGLO -> let mut . id dospuntos DIMENSION_ARR igual ARREGLO
    (202) DECARREGLO -> let mut . id igual ARREGLO
    (227) DECSTRUCT -> let mut . id igual STRUCT_EXP
    (229) DECSTRUCT -> let mut . id dospuntos id igual STRUCT_EXP

    id              shift and go to state 271


state 192

    (116) DECLARACION -> let id . dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> let id . igual EXPRESION
    (169) DECVECTOR -> let id . igual VECI
    (171) DECVECTOR -> let id . dospuntos VEC igual VECI
    (173) DECVECTOR -> let id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (199) DECARREGLO -> let id . dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> let id . igual ARREGLO
    (226) DECSTRUCT -> let id . igual STRUCT_EXP
    (228) DECSTRUCT -> let id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 272
    igual           shift and go to state 273


state 193

    (119) ASIGNACION -> id igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 274
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 194

    (120) ASIGNACION -> id INDEXS . igual EXPRESION
    (121) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (105) CLONE -> id INDEXS . punto clone para parc
    (192) LEN -> id INDEXS . punto len para parc
    (195) ACCESVEC -> id INDEXS .
    (196) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (197) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 275
    punto           shift and go to state 276
    mas             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 195 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    llavec          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    cora            shift and go to state 277

  ! punto           [ reduce using rule 195 (ACCESVEC -> id INDEXS .) ]


state 195

    (186) PUSH -> id punto . push para EXPRESION parc
    (187) PUSH -> id punto . push para VECI parc
    (188) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (102) ABS -> id punto . abs para parc
    (104) CLONE -> id punto . clone para parc
    (107) SQRT -> id punto . sqrt para parc
    (110) TO_STRING_OWNED -> id punto . toString para parc
    (111) TO_STRING_OWNED -> id punto . toOwned para parc
    (189) REMOVE -> id punto . remove para EXPRESION parc
    (190) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (193) LEN -> id punto . len para parc
    (194) CAPACITY -> id punto . capacity para parc
    (234) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    push            shift and go to state 279
    insert          shift and go to state 280
    abs             shift and go to state 282
    clone           shift and go to state 283
    sqrt            shift and go to state 284
    toString        shift and go to state 285
    toOwned         shift and go to state 286
    remove          shift and go to state 287
    contains        shift and go to state 288
    len             shift and go to state 289
    capacity        shift and go to state 290
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 281

state 196

    (167) CALL -> id para . CONJEXP parc
    (168) CALL -> id para . parc
    (67) CONJEXP -> . CONJEXP coma ELCONJ
    (68) CONJEXP -> . ELCONJ
    (69) ELCONJ -> . EXPRESION
    (70) ELCONJ -> . VECI
    (71) ELCONJ -> . ARREGLO
    (72) ELCONJ -> . ampersand mut EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    parc            shift and go to state 292
    ampersand       shift and go to state 297
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    CONJEXP                        shift and go to state 291
    ELCONJ                         shift and go to state 293
    EXPRESION                      shift and go to state 294
    VECI                           shift and go to state 295
    ARREGLO                        shift and go to state 296
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 197

    (250) ACCESO_MOD -> id dospuntos . dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id dospuntos . dospuntos CONJ_ACCES_MOD para parc

    dospuntos       shift and go to state 298


state 198

    (198) INDEXS -> cora . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 299
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 199

    (122) IF -> if EXPRESION . BLOQUE_INST
    (123) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (124) IF -> if EXPRESION . BLOQUE_INST else IF
    (87) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 301
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179

    BLOQUE_INST                    shift and go to state 300

state 200

    (125) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match EXPRESION . llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match EXPRESION . llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (95) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 302
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 201

    (148) RETURN -> return EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 148 (RETURN -> return EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 202

    (146) BREAK -> break EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 146 (BREAK -> break EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 203

    (150) WHILE -> while EXPRESION . BLOQUE_INST
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179
    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 303

state 204

    (38) EXPRESION -> menos EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    div             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    multi           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    mod             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    mayor           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    menor           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    mayorigual      reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    menorigual      reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    igualigual      reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    diferente       reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    and             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    or              reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    as              reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    punto           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    llavec          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    println         reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    let             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    id              reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    if              reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    match           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    continue        reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    return          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    break           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    while           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    i64             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    f64             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    not             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    para            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    fn              reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    for             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    struct          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    entero          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    decimal         reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    cadena          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    true            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    false           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    caracter        reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    loop            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    pub             reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    coma            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    parc            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    llavea          reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    puntoycoma      reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    corc            reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    igual           reduce using rule 38 (EXPRESION -> menos EXPRESION .)
    bvertical       reduce using rule 38 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! div             [ shift and go to state 167 ]
  ! multi           [ shift and go to state 168 ]
  ! mod             [ shift and go to state 169 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 205

    (36) EXPRESION -> i64 dospuntos . dospuntos pow para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 304


state 206

    (37) EXPRESION -> f64 dospuntos . dospuntos powf para EXPRESION coma EXPRESION parc

    dospuntos       shift and go to state 305


state 207

    (47) EXPRESION -> not EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    div             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    multi           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    mod             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    mayor           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    menor           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    mayorigual      reduce using rule 47 (EXPRESION -> not EXPRESION .)
    menorigual      reduce using rule 47 (EXPRESION -> not EXPRESION .)
    igualigual      reduce using rule 47 (EXPRESION -> not EXPRESION .)
    diferente       reduce using rule 47 (EXPRESION -> not EXPRESION .)
    and             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    or              reduce using rule 47 (EXPRESION -> not EXPRESION .)
    as              reduce using rule 47 (EXPRESION -> not EXPRESION .)
    punto           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    llavec          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    println         reduce using rule 47 (EXPRESION -> not EXPRESION .)
    let             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    id              reduce using rule 47 (EXPRESION -> not EXPRESION .)
    if              reduce using rule 47 (EXPRESION -> not EXPRESION .)
    match           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    continue        reduce using rule 47 (EXPRESION -> not EXPRESION .)
    return          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    break           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    while           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    i64             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    f64             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    not             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    para            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    fn              reduce using rule 47 (EXPRESION -> not EXPRESION .)
    for             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    struct          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    entero          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    decimal         reduce using rule 47 (EXPRESION -> not EXPRESION .)
    cadena          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    true            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    false           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    caracter        reduce using rule 47 (EXPRESION -> not EXPRESION .)
    loop            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    pub             reduce using rule 47 (EXPRESION -> not EXPRESION .)
    coma            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    parc            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    llavea          reduce using rule 47 (EXPRESION -> not EXPRESION .)
    puntoycoma      reduce using rule 47 (EXPRESION -> not EXPRESION .)
    corc            reduce using rule 47 (EXPRESION -> not EXPRESION .)
    igual           reduce using rule 47 (EXPRESION -> not EXPRESION .)
    bvertical       reduce using rule 47 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! div             [ shift and go to state 167 ]
  ! multi           [ shift and go to state 168 ]
  ! mod             [ shift and go to state 169 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 208

    (213) FORIN -> for id . in ARRFOR BLOQUE_INST

    in              shift and go to state 306


state 209

    (144) LOOP -> loop BLOQUE_INST .

    mas             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    menos           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    div             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    multi           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    mod             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    mayor           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    menor           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    mayorigual      reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    menorigual      reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    igualigual      reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    diferente       reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    and             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    or              reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    as              reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    punto           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    llavec          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    println         reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    let             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    id              reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    if              reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    match           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    continue        reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    return          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    break           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    while           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    i64             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    f64             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    not             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    para            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    fn              reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    for             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    struct          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    modulo          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    entero          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    decimal         reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    cadena          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    true            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    false           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    caracter        reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    loop            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    pub             reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    coma            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    parc            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    llavea          reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    puntoycoma      reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    corc            reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    igual           reduce using rule 144 (LOOP -> loop BLOQUE_INST .)
    bvertical       reduce using rule 144 (LOOP -> loop BLOQUE_INST .)


state 210

    (161) PARAMETRO -> mut id dospuntos TIPOVAR .

    parc            reduce using rule 161 (PARAMETRO -> mut id dospuntos TIPOVAR .)
    coma            reduce using rule 161 (PARAMETRO -> mut id dospuntos TIPOVAR .)


state 211

    (166) PARAMETRO -> mut id dospuntos VEC .

    parc            reduce using rule 166 (PARAMETRO -> mut id dospuntos VEC .)
    coma            reduce using rule 166 (PARAMETRO -> mut id dospuntos VEC .)


state 212

    (229) DECSTRUCT -> let mut id dospuntos id . igual STRUCT_EXP

    igual           shift and go to state 307


state 213

    (114) DECLARACION -> let mut id dospuntos TIPOVAR . igual EXPRESION
    (118) DECLARACION -> let mut id dospuntos TIPOVAR .

    igual           shift and go to state 308
    llavec          reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    pub             reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    fn              reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    modulo          reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    struct          reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    let             reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    puntoycoma      reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)
    coma            reduce using rule 118 (DECLARACION -> let mut id dospuntos TIPOVAR .)


state 214

    (200) DECARREGLO -> let mut id dospuntos DIMENSION_ARR . igual ARREGLO

    igual           shift and go to state 309


state 215

    (172) DECVECTOR -> let mut id dospuntos VEC . igual VECI
    (174) DECVECTOR -> let mut id dospuntos VEC . igual Vec dospuntos dospuntos FUNCVEC

    igual           shift and go to state 310


state 216

    (115) DECLARACION -> let mut id igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    pub             reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    fn              reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    modulo          reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    struct          reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    let             reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    puntoycoma      reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    coma            reduce using rule 115 (DECLARACION -> let mut id igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 217

    (202) DECARREGLO -> let mut id igual ARREGLO .

    llavec          reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    pub             reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    fn              reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    modulo          reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    struct          reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    let             reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    puntoycoma      reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)
    coma            reduce using rule 202 (DECARREGLO -> let mut id igual ARREGLO .)


state 218

    (170) DECVECTOR -> let mut id igual VECI .

    llavec          reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    pub             reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    fn              reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    modulo          reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    struct          reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    let             reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    puntoycoma      reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)
    coma            reduce using rule 170 (DECVECTOR -> let mut id igual VECI .)


state 219

    (227) DECSTRUCT -> let mut id igual STRUCT_EXP .

    llavec          reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    pub             reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    fn              reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    modulo          reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    struct          reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    let             reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)
    coma            reduce using rule 227 (DECSTRUCT -> let mut id igual STRUCT_EXP .)


state 220

    (228) DECSTRUCT -> let id dospuntos id igual . STRUCT_EXP
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    id              shift and go to state 311

    STRUCT_EXP                     shift and go to state 312

state 221

    (116) DECLARACION -> let id dospuntos TIPOVAR igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 313
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 222

    (199) DECARREGLO -> let id dospuntos DIMENSION_ARR igual . ARREGLO
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 149

    ARREGLO                        shift and go to state 314

state 223

    (171) DECVECTOR -> let id dospuntos VEC igual . VECI
    (173) DECVECTOR -> let id dospuntos VEC igual . Vec dospuntos dospuntos FUNCVEC
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    Vec             shift and go to state 316
    vecI            shift and go to state 150

    VECI                           shift and go to state 315

state 224

    (203) DIMENSION_ARR -> cora DIMENSION_ARR . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 317


state 225

    (204) DIMENSION_ARR -> cora TIPOVAR . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 318


state 226

    (205) DIMENSION_ARR -> cora id . puntoycoma EXPRESION corc

    puntoycoma      shift and go to state 319


state 227

    (230) STRUCT_EXP -> id llavea . CONJEXP_STRUCT llavec
    (231) CONJEXP_STRUCT -> . CONJEXP_STRUCT coma EXSTRUCT
    (232) CONJEXP_STRUCT -> . EXSTRUCT
    (233) EXSTRUCT -> . id dospuntos EXPRESION

    id              shift and go to state 320

    CONJEXP_STRUCT                 shift and go to state 321
    EXSTRUCT                       shift and go to state 322

state 228

    (102) ABS -> id punto . abs para parc
    (104) CLONE -> id punto . clone para parc
    (107) SQRT -> id punto . sqrt para parc
    (110) TO_STRING_OWNED -> id punto . toString para parc
    (111) TO_STRING_OWNED -> id punto . toOwned para parc
    (189) REMOVE -> id punto . remove para EXPRESION parc
    (190) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (193) LEN -> id punto . len para parc
    (194) CAPACITY -> id punto . capacity para parc
    (234) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    abs             shift and go to state 282
    clone           shift and go to state 283
    sqrt            shift and go to state 284
    toString        shift and go to state 285
    toOwned         shift and go to state 286
    remove          shift and go to state 287
    contains        shift and go to state 288
    len             shift and go to state 289
    capacity        shift and go to state 290
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 323

state 229

    (105) CLONE -> id INDEXS . punto clone para parc
    (192) LEN -> id INDEXS . punto len para parc
    (195) ACCESVEC -> id INDEXS .
    (196) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (197) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 324
    mas             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 195 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    llavec          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    pub             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    parc            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    llavea          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    puntoycoma      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    corc            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    igual           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    bvertical       reduce using rule 195 (ACCESVEC -> id INDEXS .)
    cora            shift and go to state 277

  ! punto           [ reduce using rule 195 (ACCESVEC -> id INDEXS .) ]


state 230

    (206) ARREGLO -> cora CONT_ARR . corc
    (208) CONT_ARR -> CONT_ARR . coma ELARR

    corc            shift and go to state 325
    coma            shift and go to state 326


state 231

    (207) ARREGLO -> cora EXPRESION . puntoycoma EXPRESION corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (211) ELARR -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      shift and go to state 327
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    corc            reduce using rule 211 (ELARR -> EXPRESION .)
    coma            reduce using rule 211 (ELARR -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179


state 232

    (209) CONT_ARR -> ELARR .

    corc            reduce using rule 209 (CONT_ARR -> ELARR .)
    coma            reduce using rule 209 (CONT_ARR -> ELARR .)


state 233

    (210) ELARR -> ARREGLO .

    corc            reduce using rule 210 (ELARR -> ARREGLO .)
    coma            reduce using rule 210 (ELARR -> ARREGLO .)


state 234

    (212) ELARR -> STRUCT_EXP .

    corc            reduce using rule 212 (ELARR -> STRUCT_EXP .)
    coma            reduce using rule 212 (ELARR -> STRUCT_EXP .)


state 235

    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (230) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    puntoycoma      reduce using rule 78 (ID -> id .)
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    corc            reduce using rule 78 (ID -> id .)
    coma            reduce using rule 78 (ID -> id .)
    punto           shift and go to state 228
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    llavea          shift and go to state 227
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 229

state 236

    (178) VECI -> vecI cora . CONJVECI corc
    (179) VECI -> vecI cora . EXPRESION puntoycoma EXPRESION corc
    (180) CONJVECI -> . CONJVECI coma ELVEC
    (181) CONJVECI -> . ELVEC
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (182) ELVEC -> . EXPRESION
    (183) ELVEC -> . VECI
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131
    vecI            shift and go to state 150

    CONJVECI                       shift and go to state 328
    EXPRESION                      shift and go to state 329
    ELVEC                          shift and go to state 330
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148
    VECI                           shift and go to state 331

state 237

    (87) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 332
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 238

    (95) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 333
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 239

    (162) PARAMETRO -> id dospuntos ampersand mut cora . TIPOVAR corc
    (203) DIMENSION_ARR -> cora . DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> cora . TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> cora . id puntoycoma EXPRESION corc
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 226
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    cora            shift and go to state 141

    TIPOVAR                        shift and go to state 334
    DIMENSION_ARR                  shift and go to state 224

state 240

    (163) PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .

    parc            reduce using rule 163 (PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .)
    coma            reduce using rule 163 (PARAMETRO -> id dospuntos ampersand mut DIMENSION_ARR .)


state 241

    (164) PARAMETRO -> id dospuntos ampersand mut VEC .

    parc            reduce using rule 164 (PARAMETRO -> id dospuntos ampersand mut VEC .)
    coma            reduce using rule 164 (PARAMETRO -> id dospuntos ampersand mut VEC .)


state 242

    (175) VEC -> Vec menor VEC . mayor

    mayor           shift and go to state 335


state 243

    (176) VEC -> Vec menor TIPOVAR . mayor

    mayor           shift and go to state 336


state 244

    (177) VEC -> Vec menor id . mayor

    mayor           shift and go to state 337


state 245

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 338

state 246

    (152) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 339

state 247

    (157) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 340

state 248

    (154) FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .

    modulo          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    fn              reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    struct          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    $end            reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    llavec          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    pub             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    let             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    println         reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    id              reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    if              reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    match           reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    continue        reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    return          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    break           reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    while           reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    i64             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    f64             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    menos           reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    not             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    para            reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    for             reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    entero          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    decimal         reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    cadena          reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    true            reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    false           reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    caracter        reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)
    loop            reduce using rule 154 (FUNCION -> fn id para parc menos mayor TIPOVAR BLOQUE_INST .)


state 249

    (31) EXPRESION -> EXPRESION mas EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    mayor           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    menor           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    mayorigual      reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    menorigual      reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    igualigual      reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    diferente       reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    and             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    or              reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    as              reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    punto           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    llavec          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    println         reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    let             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    id              reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    if              reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    match           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    continue        reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    return          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    break           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    while           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    i64             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    f64             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    not             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    para            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    fn              reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    for             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    struct          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    modulo          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    entero          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    decimal         reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    cadena          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    true            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    false           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    caracter        reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    loop            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    pub             reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    coma            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    parc            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    llavea          reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    puntoycoma      reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    corc            reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    igual           reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    bvertical       reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .)
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! div             [ reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! multi           [ reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mod             [ reduce using rule 31 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 250

    (32) EXPRESION -> EXPRESION menos EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    mayor           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    menor           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    mayorigual      reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    menorigual      reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    igualigual      reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    diferente       reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    and             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    or              reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    as              reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    punto           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    llavec          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    println         reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    let             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    id              reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    if              reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    match           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    continue        reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    return          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    break           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    while           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    i64             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    f64             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    not             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    para            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    fn              reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    for             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    struct          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    modulo          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    entero          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    decimal         reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    cadena          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    true            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    false           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    caracter        reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    loop            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    pub             reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    coma            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    parc            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    llavea          reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    puntoycoma      reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    corc            reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    igual           reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    bvertical       reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .)
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! div             [ reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! multi           [ reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mod             [ reduce using rule 32 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 251

    (33) EXPRESION -> EXPRESION div EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    menos           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    div             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    multi           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    mod             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    mayor           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    menor           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    mayorigual      reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    menorigual      reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    igualigual      reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    diferente       reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    and             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    or              reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    as              reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    punto           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    llavec          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    println         reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    let             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    id              reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    if              reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    match           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    continue        reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    return          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    break           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    while           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    i64             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    f64             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    not             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    para            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    fn              reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    for             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    struct          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    modulo          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    entero          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    decimal         reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    cadena          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    true            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    false           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    caracter        reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    loop            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    pub             reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    coma            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    parc            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    llavea          reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    puntoycoma      reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    corc            reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    igual           reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)
    bvertical       reduce using rule 33 (EXPRESION -> EXPRESION div EXPRESION .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! div             [ shift and go to state 167 ]
  ! multi           [ shift and go to state 168 ]
  ! mod             [ shift and go to state 169 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 252

    (34) EXPRESION -> EXPRESION multi EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    menos           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    div             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    multi           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    mod             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    mayor           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    menor           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    mayorigual      reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    menorigual      reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    igualigual      reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    diferente       reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    and             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    or              reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    as              reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    punto           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    llavec          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    println         reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    let             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    id              reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    if              reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    match           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    continue        reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    return          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    break           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    while           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    i64             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    f64             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    not             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    para            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    fn              reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    for             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    struct          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    modulo          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    entero          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    decimal         reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    cadena          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    true            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    false           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    caracter        reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    loop            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    pub             reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    coma            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    parc            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    llavea          reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    puntoycoma      reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    corc            reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    igual           reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)
    bvertical       reduce using rule 34 (EXPRESION -> EXPRESION multi EXPRESION .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! div             [ shift and go to state 167 ]
  ! multi           [ shift and go to state 168 ]
  ! mod             [ shift and go to state 169 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 253

    (35) EXPRESION -> EXPRESION mod EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mas             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    menos           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    div             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    multi           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    mod             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    mayor           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    menor           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    mayorigual      reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    menorigual      reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    igualigual      reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    diferente       reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    and             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    or              reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    as              reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    punto           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    llavec          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    println         reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    let             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    id              reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    if              reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    match           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    continue        reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    return          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    break           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    while           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    i64             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    f64             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    not             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    para            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    fn              reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    for             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    struct          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    modulo          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    entero          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    decimal         reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    cadena          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    true            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    false           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    caracter        reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    loop            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    pub             reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    coma            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    parc            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    llavea          reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    puntoycoma      reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    corc            reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    igual           reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)
    bvertical       reduce using rule 35 (EXPRESION -> EXPRESION mod EXPRESION .)

  ! mas             [ shift and go to state 165 ]
  ! menos           [ shift and go to state 166 ]
  ! div             [ shift and go to state 167 ]
  ! multi           [ shift and go to state 168 ]
  ! mod             [ shift and go to state 169 ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 254

    (39) EXPRESION -> EXPRESION mayor EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menor           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mayorigual      reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    menorigual      reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igualigual      reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    diferente       reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    and             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    or              reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    as              reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    punto           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    llavec          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    println         reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    let             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    id              reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    if              reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    match           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    continue        reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    return          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    break           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    while           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    i64             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    f64             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    not             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    para            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    fn              reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    for             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    struct          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    modulo          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    entero          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    decimal         reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    cadena          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    true            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    false           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    caracter        reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    loop            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    pub             reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    coma            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    parc            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    llavea          reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    puntoycoma      reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    corc            reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    igual           reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    bvertical       reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! menos           [ reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! div             [ reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! multi           [ reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! mod             [ reduce using rule 39 (EXPRESION -> EXPRESION mayor EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 255

    (40) EXPRESION -> EXPRESION menor EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    menor           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    mayorigual      reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    menorigual      reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    igualigual      reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    diferente       reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    and             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    or              reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    as              reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    punto           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    llavec          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    println         reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    let             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    id              reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    if              reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    match           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    continue        reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    return          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    break           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    while           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    i64             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    f64             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    not             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    para            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    fn              reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    for             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    struct          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    modulo          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    entero          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    decimal         reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    cadena          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    true            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    false           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    caracter        reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    loop            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    pub             reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    coma            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    parc            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    llavea          reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    puntoycoma      reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    corc            reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    igual           reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    bvertical       reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! menos           [ reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! div             [ reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! multi           [ reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! mod             [ reduce using rule 40 (EXPRESION -> EXPRESION menor EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 256

    (41) EXPRESION -> EXPRESION mayorigual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menor           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mayorigual      reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    menorigual      reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igualigual      reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    diferente       reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    and             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    or              reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    as              reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    punto           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    llavec          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    println         reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    let             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    id              reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    if              reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    match           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    continue        reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    return          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    break           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    while           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    i64             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    f64             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    not             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    para            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    fn              reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    for             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    struct          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    modulo          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    entero          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    decimal         reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    cadena          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    true            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    false           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    caracter        reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    loop            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    pub             reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    coma            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    parc            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    llavea          reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    puntoycoma      reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    corc            reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    igual           reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    bvertical       reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! menos           [ reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! div             [ reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! multi           [ reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! mod             [ reduce using rule 41 (EXPRESION -> EXPRESION mayorigual EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 257

    (42) EXPRESION -> EXPRESION menorigual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menor           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mayorigual      reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    menorigual      reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igualigual      reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    diferente       reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    and             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    or              reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    as              reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    punto           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    llavec          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    println         reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    let             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    id              reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    if              reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    match           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    continue        reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    return          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    break           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    while           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    i64             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    f64             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    not             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    para            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    fn              reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    for             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    struct          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    modulo          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    entero          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    decimal         reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    cadena          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    true            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    false           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    caracter        reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    loop            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    pub             reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    coma            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    parc            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    llavea          reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    puntoycoma      reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    corc            reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    igual           reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    bvertical       reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! menos           [ reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! div             [ reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! multi           [ reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! mod             [ reduce using rule 42 (EXPRESION -> EXPRESION menorigual EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 258

    (43) EXPRESION -> EXPRESION igualigual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    menor           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    mayorigual      reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    menorigual      reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    igualigual      reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    diferente       reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    and             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    or              reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    as              reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    punto           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    llavec          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    println         reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    let             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    id              reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    if              reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    match           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    continue        reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    return          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    break           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    while           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    i64             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    f64             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    not             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    para            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    fn              reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    for             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    struct          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    modulo          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    entero          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    decimal         reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    cadena          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    true            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    false           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    caracter        reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    loop            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    pub             reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    coma            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    parc            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    llavea          reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    puntoycoma      reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    corc            reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    igual           reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    bvertical       reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! menos           [ reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! div             [ reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! multi           [ reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! mod             [ reduce using rule 43 (EXPRESION -> EXPRESION igualigual EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 259

    (44) EXPRESION -> EXPRESION diferente EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    mayor           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menor           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mayorigual      reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    menorigual      reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igualigual      reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    diferente       reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    and             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    or              reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    as              reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    punto           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    llavec          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    println         reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    let             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    id              reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    if              reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    match           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    continue        reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    return          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    break           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    while           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    i64             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    f64             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    not             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    para            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    fn              reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    for             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    struct          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    modulo          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    entero          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    decimal         reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    cadena          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    true            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    false           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    caracter        reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    loop            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    pub             reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    coma            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    parc            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    llavea          reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    puntoycoma      reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    corc            reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    igual           reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    bvertical       reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169

  ! mas             [ reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! menos           [ reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! div             [ reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! multi           [ reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! mod             [ reduce using rule 44 (EXPRESION -> EXPRESION diferente EXPRESION .) ]
  ! mayor           [ shift and go to state 170 ]
  ! menor           [ shift and go to state 171 ]
  ! mayorigual      [ shift and go to state 172 ]
  ! menorigual      [ shift and go to state 173 ]
  ! igualigual      [ shift and go to state 174 ]
  ! diferente       [ shift and go to state 175 ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 260

    (45) EXPRESION -> EXPRESION and EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    and             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    or              reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    as              reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    punto           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    llavec          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    println         reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    let             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    id              reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    if              reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    match           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    continue        reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    return          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    break           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    while           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    i64             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    f64             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    not             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    para            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    fn              reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    for             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    struct          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    modulo          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    entero          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    decimal         reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    cadena          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    true            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    false           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    caracter        reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    loop            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    pub             reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    coma            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    parc            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    llavea          reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    puntoycoma      reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    corc            reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    igual           reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    bvertical       reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175

  ! mas             [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menos           [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! div             [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! multi           [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mod             [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayor           [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menor           [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! mayorigual      [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! menorigual      [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! igualigual      [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! diferente       [ reduce using rule 45 (EXPRESION -> EXPRESION and EXPRESION .) ]
  ! and             [ shift and go to state 176 ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 261

    (46) EXPRESION -> EXPRESION or EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    or              reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    as              reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    punto           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    llavec          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    println         reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    let             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    id              reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    if              reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    match           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    continue        reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    return          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    break           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    while           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    i64             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    f64             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    not             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    para            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    fn              reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    for             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    struct          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    modulo          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    entero          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    decimal         reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    cadena          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    true            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    false           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    caracter        reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    loop            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    pub             reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    coma            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    parc            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    llavea          reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    puntoycoma      reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    corc            reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    igual           reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    bvertical       reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176

  ! mas             [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menos           [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! div             [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! multi           [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mod             [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayor           [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menor           [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! mayorigual      [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! menorigual      [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! igualigual      [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! diferente       [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! and             [ reduce using rule 46 (EXPRESION -> EXPRESION or EXPRESION .) ]
  ! or              [ shift and go to state 177 ]
  ! as              [ shift and go to state 178 ]
  ! punto           [ shift and go to state 179 ]


state 262

    (100) CAST_AS -> EXPRESION as TIPOVAR .

    mas             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    menos           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    div             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    multi           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    mod             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    mayor           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    menor           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    mayorigual      reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    menorigual      reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    igualigual      reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    diferente       reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    and             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    or              reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    as              reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    punto           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    llavec          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    println         reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    let             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    id              reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    if              reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    match           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    continue        reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    return          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    break           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    while           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    i64             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    f64             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    not             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    para            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    fn              reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    for             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    struct          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    modulo          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    entero          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    decimal         reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    cadena          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    true            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    false           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    caracter        reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    loop            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    pub             reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    coma            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    parc            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    llavea          reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    puntoycoma      reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    corc            reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    igual           reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)
    bvertical       reduce using rule 100 (CAST_AS -> EXPRESION as TIPOVAR .)


state 263

    (101) ABS -> EXPRESION punto abs . para parc

    para            shift and go to state 341


state 264

    (103) CLONE -> EXPRESION punto clone . para parc

    para            shift and go to state 342


state 265

    (106) SQRT -> EXPRESION punto sqrt . para parc

    para            shift and go to state 343


state 266

    (108) TO_STRING_OWNED -> EXPRESION punto toString . para parc

    para            shift and go to state 344


state 267

    (109) TO_STRING_OWNED -> EXPRESION punto toOwned . para parc

    para            shift and go to state 345


state 268

    (191) LEN -> EXPRESION punto len . para parc

    para            shift and go to state 346


state 269

    (112) PRINT -> println para EXPRESION . parc
    (113) PRINT -> println para EXPRESION . coma CONJEXP parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 347
    coma            shift and go to state 348
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 270

    (48) EXPRESION -> para EXPRESION parc .

    mas             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    menos           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    div             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    multi           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    mod             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    mayor           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    menor           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    mayorigual      reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    menorigual      reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    igualigual      reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    diferente       reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    and             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    or              reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    as              reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    punto           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    llavec          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    println         reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    let             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    id              reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    if              reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    match           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    continue        reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    return          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    break           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    while           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    i64             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    f64             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    not             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    para            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    fn              reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    for             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    struct          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    modulo          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    entero          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    decimal         reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    cadena          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    true            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    false           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    caracter        reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    loop            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    pub             reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    coma            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    parc            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    llavea          reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    puntoycoma      reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    corc            reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    igual           reduce using rule 48 (EXPRESION -> para EXPRESION parc .)
    bvertical       reduce using rule 48 (EXPRESION -> para EXPRESION parc .)


state 271

    (114) DECLARACION -> let mut id . dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> let mut id . igual EXPRESION
    (118) DECLARACION -> let mut id . dospuntos TIPOVAR
    (170) DECVECTOR -> let mut id . igual VECI
    (172) DECVECTOR -> let mut id . dospuntos VEC igual VECI
    (174) DECVECTOR -> let mut id . dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (200) DECARREGLO -> let mut id . dospuntos DIMENSION_ARR igual ARREGLO
    (202) DECARREGLO -> let mut id . igual ARREGLO
    (227) DECSTRUCT -> let mut id . igual STRUCT_EXP
    (229) DECSTRUCT -> let mut id . dospuntos id igual STRUCT_EXP

    dospuntos       shift and go to state 349
    igual           shift and go to state 350


state 272

    (116) DECLARACION -> let id dospuntos . TIPOVAR igual EXPRESION
    (171) DECVECTOR -> let id dospuntos . VEC igual VECI
    (173) DECVECTOR -> let id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (199) DECARREGLO -> let id dospuntos . DIMENSION_ARR igual ARREGLO
    (228) DECSTRUCT -> let id dospuntos . id igual STRUCT_EXP
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 137
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    Vec             shift and go to state 65
    cora            shift and go to state 141

    TIPOVAR                        shift and go to state 138
    VEC                            shift and go to state 140
    DIMENSION_ARR                  shift and go to state 139

state 273

    (117) DECLARACION -> let id igual . EXPRESION
    (169) DECVECTOR -> let id igual . VECI
    (201) DECARREGLO -> let id igual . ARREGLO
    (226) DECSTRUCT -> let id igual . STRUCT_EXP
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    id              shift and go to state 142
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 143
    VECI                           shift and go to state 145
    ARREGLO                        shift and go to state 144
    STRUCT_EXP                     shift and go to state 146
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 274

    (119) ASIGNACION -> id igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 119 (ASIGNACION -> id igual EXPRESION .)
    coma            reduce using rule 119 (ASIGNACION -> id igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 275

    (120) ASIGNACION -> id INDEXS igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 351
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 276

    (121) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (105) CLONE -> id INDEXS punto . clone para parc
    (192) LEN -> id INDEXS punto . len para parc
    (196) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    clone           shift and go to state 353
    len             shift and go to state 354
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 352

state 277

    (197) INDEXS -> INDEXS cora . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 355
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 278

    (236) CONJ_ACCES -> id .

    igual           reduce using rule 236 (CONJ_ACCES -> id .)
    punto           reduce using rule 236 (CONJ_ACCES -> id .)
    mas             reduce using rule 236 (CONJ_ACCES -> id .)
    menos           reduce using rule 236 (CONJ_ACCES -> id .)
    div             reduce using rule 236 (CONJ_ACCES -> id .)
    multi           reduce using rule 236 (CONJ_ACCES -> id .)
    mod             reduce using rule 236 (CONJ_ACCES -> id .)
    mayor           reduce using rule 236 (CONJ_ACCES -> id .)
    menor           reduce using rule 236 (CONJ_ACCES -> id .)
    mayorigual      reduce using rule 236 (CONJ_ACCES -> id .)
    menorigual      reduce using rule 236 (CONJ_ACCES -> id .)
    igualigual      reduce using rule 236 (CONJ_ACCES -> id .)
    diferente       reduce using rule 236 (CONJ_ACCES -> id .)
    and             reduce using rule 236 (CONJ_ACCES -> id .)
    or              reduce using rule 236 (CONJ_ACCES -> id .)
    as              reduce using rule 236 (CONJ_ACCES -> id .)
    llavec          reduce using rule 236 (CONJ_ACCES -> id .)
    println         reduce using rule 236 (CONJ_ACCES -> id .)
    let             reduce using rule 236 (CONJ_ACCES -> id .)
    id              reduce using rule 236 (CONJ_ACCES -> id .)
    if              reduce using rule 236 (CONJ_ACCES -> id .)
    match           reduce using rule 236 (CONJ_ACCES -> id .)
    continue        reduce using rule 236 (CONJ_ACCES -> id .)
    return          reduce using rule 236 (CONJ_ACCES -> id .)
    break           reduce using rule 236 (CONJ_ACCES -> id .)
    while           reduce using rule 236 (CONJ_ACCES -> id .)
    i64             reduce using rule 236 (CONJ_ACCES -> id .)
    f64             reduce using rule 236 (CONJ_ACCES -> id .)
    not             reduce using rule 236 (CONJ_ACCES -> id .)
    para            reduce using rule 236 (CONJ_ACCES -> id .)
    fn              reduce using rule 236 (CONJ_ACCES -> id .)
    for             reduce using rule 236 (CONJ_ACCES -> id .)
    struct          reduce using rule 236 (CONJ_ACCES -> id .)
    modulo          reduce using rule 236 (CONJ_ACCES -> id .)
    entero          reduce using rule 236 (CONJ_ACCES -> id .)
    decimal         reduce using rule 236 (CONJ_ACCES -> id .)
    cadena          reduce using rule 236 (CONJ_ACCES -> id .)
    true            reduce using rule 236 (CONJ_ACCES -> id .)
    false           reduce using rule 236 (CONJ_ACCES -> id .)
    caracter        reduce using rule 236 (CONJ_ACCES -> id .)
    loop            reduce using rule 236 (CONJ_ACCES -> id .)
    coma            reduce using rule 236 (CONJ_ACCES -> id .)
    pub             reduce using rule 236 (CONJ_ACCES -> id .)
    parc            reduce using rule 236 (CONJ_ACCES -> id .)
    llavea          reduce using rule 236 (CONJ_ACCES -> id .)
    puntoycoma      reduce using rule 236 (CONJ_ACCES -> id .)
    corc            reduce using rule 236 (CONJ_ACCES -> id .)
    bvertical       reduce using rule 236 (CONJ_ACCES -> id .)


state 279

    (186) PUSH -> id punto push . para EXPRESION parc
    (187) PUSH -> id punto push . para VECI parc

    para            shift and go to state 356


state 280

    (188) INSERT -> id punto insert . para EXPRESION coma EXPRESION parc

    para            shift and go to state 357


state 281

    (237) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (234) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 359
    mas             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavec          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    punto           shift and go to state 358

  ! punto           [ reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 282

    (102) ABS -> id punto abs . para parc

    para            shift and go to state 360


state 283

    (104) CLONE -> id punto clone . para parc

    para            shift and go to state 361


state 284

    (107) SQRT -> id punto sqrt . para parc

    para            shift and go to state 362


state 285

    (110) TO_STRING_OWNED -> id punto toString . para parc

    para            shift and go to state 363


state 286

    (111) TO_STRING_OWNED -> id punto toOwned . para parc

    para            shift and go to state 364


state 287

    (189) REMOVE -> id punto remove . para EXPRESION parc

    para            shift and go to state 365


state 288

    (190) CONTAINS -> id punto contains . para ampersand EXPRESION parc

    para            shift and go to state 366


state 289

    (193) LEN -> id punto len . para parc

    para            shift and go to state 367


state 290

    (194) CAPACITY -> id punto capacity . para parc

    para            shift and go to state 368


state 291

    (167) CALL -> id para CONJEXP . parc
    (67) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 369
    coma            shift and go to state 370


state 292

    (168) CALL -> id para parc .

    puntoycoma      reduce using rule 168 (CALL -> id para parc .)
    mas             reduce using rule 168 (CALL -> id para parc .)
    menos           reduce using rule 168 (CALL -> id para parc .)
    div             reduce using rule 168 (CALL -> id para parc .)
    multi           reduce using rule 168 (CALL -> id para parc .)
    mod             reduce using rule 168 (CALL -> id para parc .)
    mayor           reduce using rule 168 (CALL -> id para parc .)
    menor           reduce using rule 168 (CALL -> id para parc .)
    mayorigual      reduce using rule 168 (CALL -> id para parc .)
    menorigual      reduce using rule 168 (CALL -> id para parc .)
    igualigual      reduce using rule 168 (CALL -> id para parc .)
    diferente       reduce using rule 168 (CALL -> id para parc .)
    and             reduce using rule 168 (CALL -> id para parc .)
    or              reduce using rule 168 (CALL -> id para parc .)
    as              reduce using rule 168 (CALL -> id para parc .)
    punto           reduce using rule 168 (CALL -> id para parc .)
    llavec          reduce using rule 168 (CALL -> id para parc .)
    println         reduce using rule 168 (CALL -> id para parc .)
    let             reduce using rule 168 (CALL -> id para parc .)
    id              reduce using rule 168 (CALL -> id para parc .)
    if              reduce using rule 168 (CALL -> id para parc .)
    match           reduce using rule 168 (CALL -> id para parc .)
    continue        reduce using rule 168 (CALL -> id para parc .)
    return          reduce using rule 168 (CALL -> id para parc .)
    break           reduce using rule 168 (CALL -> id para parc .)
    while           reduce using rule 168 (CALL -> id para parc .)
    i64             reduce using rule 168 (CALL -> id para parc .)
    f64             reduce using rule 168 (CALL -> id para parc .)
    not             reduce using rule 168 (CALL -> id para parc .)
    para            reduce using rule 168 (CALL -> id para parc .)
    fn              reduce using rule 168 (CALL -> id para parc .)
    for             reduce using rule 168 (CALL -> id para parc .)
    struct          reduce using rule 168 (CALL -> id para parc .)
    modulo          reduce using rule 168 (CALL -> id para parc .)
    entero          reduce using rule 168 (CALL -> id para parc .)
    decimal         reduce using rule 168 (CALL -> id para parc .)
    cadena          reduce using rule 168 (CALL -> id para parc .)
    true            reduce using rule 168 (CALL -> id para parc .)
    false           reduce using rule 168 (CALL -> id para parc .)
    caracter        reduce using rule 168 (CALL -> id para parc .)
    loop            reduce using rule 168 (CALL -> id para parc .)
    pub             reduce using rule 168 (CALL -> id para parc .)
    coma            reduce using rule 168 (CALL -> id para parc .)
    parc            reduce using rule 168 (CALL -> id para parc .)
    llavea          reduce using rule 168 (CALL -> id para parc .)
    corc            reduce using rule 168 (CALL -> id para parc .)
    igual           reduce using rule 168 (CALL -> id para parc .)
    bvertical       reduce using rule 168 (CALL -> id para parc .)


state 293

    (68) CONJEXP -> ELCONJ .

    parc            reduce using rule 68 (CONJEXP -> ELCONJ .)
    coma            reduce using rule 68 (CONJEXP -> ELCONJ .)


state 294

    (69) ELCONJ -> EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            reduce using rule 69 (ELCONJ -> EXPRESION .)
    coma            reduce using rule 69 (ELCONJ -> EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 295

    (70) ELCONJ -> VECI .

    parc            reduce using rule 70 (ELCONJ -> VECI .)
    coma            reduce using rule 70 (ELCONJ -> VECI .)


state 296

    (71) ELCONJ -> ARREGLO .

    parc            reduce using rule 71 (ELCONJ -> ARREGLO .)
    coma            reduce using rule 71 (ELCONJ -> ARREGLO .)


state 297

    (72) ELCONJ -> ampersand . mut EXPRESION

    mut             shift and go to state 371


state 298

    (250) ACCESO_MOD -> id dospuntos dospuntos . CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id dospuntos dospuntos . CONJ_ACCES_MOD para parc
    (252) CONJ_ACCES_MOD -> . CONJ_ACCES_MOD dospuntos dospuntos id
    (253) CONJ_ACCES_MOD -> . id

    id              shift and go to state 372

    CONJ_ACCES_MOD                 shift and go to state 373

state 299

    (198) INDEXS -> cora EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 374
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 300

    (122) IF -> if EXPRESION BLOQUE_INST .
    (123) IF -> if EXPRESION BLOQUE_INST . else BLOQUE_INST
    (124) IF -> if EXPRESION BLOQUE_INST . else IF

    llavec          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    println         reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    let             reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    id              reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    if              reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    match           reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    continue        reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    return          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    break           reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    while           reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    i64             reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    f64             reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    menos           reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    not             reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    para            reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    fn              reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    for             reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    struct          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    modulo          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    entero          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    decimal         reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    cadena          reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    true            reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    false           reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    caracter        reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    loop            reduce using rule 122 (IF -> if EXPRESION BLOQUE_INST .)
    else            shift and go to state 375


state 301

    (87) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if EXPRESION llavea . EXPRESION llavec
    (89) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if EXPRESION llavea . EXPRESION llavec else IF_TER
    (151) BLOQUE_INST -> llavea . INSTRUCCIONES llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 377
    INSTRUCCIONES                  shift and go to state 378
    IF_TER                         shift and go to state 110
    INSTRUCCION                    shift and go to state 71
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 302

    (125) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match EXPRESION llavea . guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match EXPRESION llavea . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (95) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (138) BRAZOS -> . BRAZOS BRAZO
    (139) BRAZOS -> . BRAZO
    (97) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (98) BRAZOS_TER -> . BRAZO_TER
    (140) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (141) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (99) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (142) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (143) CONJEXPM -> . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 385
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 383
    BRAZOS                         shift and go to state 384
    BRAZOS_TER                     shift and go to state 386
    BRAZO                          shift and go to state 387
    BRAZO_TER                      shift and go to state 388
    CONJEXPM                       shift and go to state 389
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 303

    (150) WHILE -> while EXPRESION BLOQUE_INST .

    llavec          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    println         reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    let             reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    id              reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    if              reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    match           reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    continue        reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    return          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    break           reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    while           reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    i64             reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    f64             reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    menos           reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    not             reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    para            reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    fn              reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    for             reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    struct          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    modulo          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    entero          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    decimal         reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    cadena          reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    true            reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    false           reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    caracter        reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)
    loop            reduce using rule 150 (WHILE -> while EXPRESION BLOQUE_INST .)


state 304

    (36) EXPRESION -> i64 dospuntos dospuntos . pow para EXPRESION coma EXPRESION parc

    pow             shift and go to state 390


state 305

    (37) EXPRESION -> f64 dospuntos dospuntos . powf para EXPRESION coma EXPRESION parc

    powf            shift and go to state 391


state 306

    (213) FORIN -> for id in . ARRFOR BLOQUE_INST
    (214) ARRFOR -> . CHARS
    (215) ARRFOR -> . ARREGLO
    (216) ARRFOR -> . VECI
    (217) ARRFOR -> . RANGO
    (218) ARRFOR -> . ID
    (219) CHARS -> . EXPRESION punto chars para parc
    (220) CHARS -> . id punto chars para parc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (221) RANGO -> . EXPRESION punto punto EXPRESION
    (78) ID -> . id
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    id              shift and go to state 392
    cora            shift and go to state 149
    vecI            shift and go to state 150
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    ARRFOR                         shift and go to state 393
    CHARS                          shift and go to state 394
    ARREGLO                        shift and go to state 395
    VECI                           shift and go to state 396
    RANGO                          shift and go to state 397
    ID                             shift and go to state 398
    EXPRESION                      shift and go to state 399
    TIPODATO                       shift and go to state 108
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 307

    (229) DECSTRUCT -> let mut id dospuntos id igual . STRUCT_EXP
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec

    id              shift and go to state 311

    STRUCT_EXP                     shift and go to state 400

state 308

    (114) DECLARACION -> let mut id dospuntos TIPOVAR igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 401
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 309

    (200) DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual . ARREGLO
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc

    cora            shift and go to state 149

    ARREGLO                        shift and go to state 402

state 310

    (172) DECVECTOR -> let mut id dospuntos VEC igual . VECI
    (174) DECVECTOR -> let mut id dospuntos VEC igual . Vec dospuntos dospuntos FUNCVEC
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc

    Vec             shift and go to state 404
    vecI            shift and go to state 150

    VECI                           shift and go to state 403

state 311

    (230) STRUCT_EXP -> id . llavea CONJEXP_STRUCT llavec

    llavea          shift and go to state 227


state 312

    (228) DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .

    llavec          reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    pub             reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    fn              reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    modulo          reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    struct          reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    let             reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)
    coma            reduce using rule 228 (DECSTRUCT -> let id dospuntos id igual STRUCT_EXP .)


state 313

    (116) DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    pub             reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    fn              reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    modulo          reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    struct          reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    let             reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    puntoycoma      reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    coma            reduce using rule 116 (DECLARACION -> let id dospuntos TIPOVAR igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 314

    (199) DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .

    llavec          reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    pub             reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    fn              reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    modulo          reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    struct          reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    let             reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    puntoycoma      reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)
    coma            reduce using rule 199 (DECARREGLO -> let id dospuntos DIMENSION_ARR igual ARREGLO .)


state 315

    (171) DECVECTOR -> let id dospuntos VEC igual VECI .

    llavec          reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    pub             reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    fn              reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    modulo          reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    struct          reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    let             reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    puntoycoma      reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)
    coma            reduce using rule 171 (DECVECTOR -> let id dospuntos VEC igual VECI .)


state 316

    (173) DECVECTOR -> let id dospuntos VEC igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 405


state 317

    (203) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 406
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 318

    (204) DIMENSION_ARR -> cora TIPOVAR puntoycoma . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 407
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 319

    (205) DIMENSION_ARR -> cora id puntoycoma . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 408
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 320

    (233) EXSTRUCT -> id . dospuntos EXPRESION

    dospuntos       shift and go to state 409


state 321

    (230) STRUCT_EXP -> id llavea CONJEXP_STRUCT . llavec
    (231) CONJEXP_STRUCT -> CONJEXP_STRUCT . coma EXSTRUCT

    llavec          shift and go to state 410
    coma            shift and go to state 411


state 322

    (232) CONJEXP_STRUCT -> EXSTRUCT .

    llavec          reduce using rule 232 (CONJEXP_STRUCT -> EXSTRUCT .)
    coma            reduce using rule 232 (CONJEXP_STRUCT -> EXSTRUCT .)


state 323

    (234) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    mas             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavec          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    pub             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    parc            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    llavea          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    puntoycoma      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    corc            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igual           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    bvertical       reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    punto           shift and go to state 358

  ! punto           [ reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 324

    (105) CLONE -> id INDEXS punto . clone para parc
    (192) LEN -> id INDEXS punto . len para parc
    (196) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    clone           shift and go to state 353
    len             shift and go to state 354
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 412

state 325

    (206) ARREGLO -> cora CONT_ARR corc .

    llavec          reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    pub             reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    fn              reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    modulo          reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    struct          reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    let             reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    coma            reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    corc            reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    parc            reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    puntoycoma      reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)
    llavea          reduce using rule 206 (ARREGLO -> cora CONT_ARR corc .)


state 326

    (208) CONT_ARR -> CONT_ARR coma . ELARR
    (210) ELARR -> . ARREGLO
    (211) ELARR -> . EXPRESION
    (212) ELARR -> . STRUCT_EXP
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    cora            shift and go to state 149
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    id              shift and go to state 142
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    ELARR                          shift and go to state 413
    ARREGLO                        shift and go to state 233
    EXPRESION                      shift and go to state 414
    STRUCT_EXP                     shift and go to state 234
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 327

    (207) ARREGLO -> cora EXPRESION puntoycoma . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 415
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 328

    (178) VECI -> vecI cora CONJVECI . corc
    (180) CONJVECI -> CONJVECI . coma ELVEC

    corc            shift and go to state 416
    coma            shift and go to state 417


state 329

    (179) VECI -> vecI cora EXPRESION . puntoycoma EXPRESION corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (182) ELVEC -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      shift and go to state 418
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    corc            reduce using rule 182 (ELVEC -> EXPRESION .)
    coma            reduce using rule 182 (ELVEC -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179


state 330

    (181) CONJVECI -> ELVEC .

    corc            reduce using rule 181 (CONJVECI -> ELVEC .)
    coma            reduce using rule 181 (CONJVECI -> ELVEC .)


state 331

    (183) ELVEC -> VECI .

    corc            reduce using rule 183 (ELVEC -> VECI .)
    coma            reduce using rule 183 (ELVEC -> VECI .)


state 332

    (87) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if EXPRESION llavea . EXPRESION llavec
    (89) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea . INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if EXPRESION llavea . EXPRESION llavec else IF_TER
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 377
    INSTRUCCIONES                  shift and go to state 419
    IF_TER                         shift and go to state 110
    INSTRUCCION                    shift and go to state 71
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 333

    (95) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (97) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (98) BRAZOS_TER -> . BRAZO_TER
    (99) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (142) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (143) CONJEXPM -> . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 420
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 383
    BRAZOS_TER                     shift and go to state 386
    BRAZO_TER                      shift and go to state 388
    CONJEXPM                       shift and go to state 421
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 334

    (162) PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR . corc
    (204) DIMENSION_ARR -> cora TIPOVAR . puntoycoma EXPRESION corc

    corc            shift and go to state 422
    puntoycoma      shift and go to state 318


state 335

    (175) VEC -> Vec menor VEC mayor .

    parc            reduce using rule 175 (VEC -> Vec menor VEC mayor .)
    coma            reduce using rule 175 (VEC -> Vec menor VEC mayor .)
    igual           reduce using rule 175 (VEC -> Vec menor VEC mayor .)
    mayor           reduce using rule 175 (VEC -> Vec menor VEC mayor .)
    llavea          reduce using rule 175 (VEC -> Vec menor VEC mayor .)


state 336

    (176) VEC -> Vec menor TIPOVAR mayor .

    parc            reduce using rule 176 (VEC -> Vec menor TIPOVAR mayor .)
    coma            reduce using rule 176 (VEC -> Vec menor TIPOVAR mayor .)
    igual           reduce using rule 176 (VEC -> Vec menor TIPOVAR mayor .)
    mayor           reduce using rule 176 (VEC -> Vec menor TIPOVAR mayor .)
    llavea          reduce using rule 176 (VEC -> Vec menor TIPOVAR mayor .)


state 337

    (177) VEC -> Vec menor id mayor .

    parc            reduce using rule 177 (VEC -> Vec menor id mayor .)
    coma            reduce using rule 177 (VEC -> Vec menor id mayor .)
    igual           reduce using rule 177 (VEC -> Vec menor id mayor .)
    mayor           reduce using rule 177 (VEC -> Vec menor id mayor .)
    llavea          reduce using rule 177 (VEC -> Vec menor id mayor .)


state 338

    (156) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .

    modulo          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    fn              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    struct          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    $end            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    llavec          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    pub             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    let             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    println         reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    id              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    if              reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    match           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    continue        reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    return          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    break           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    while           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    i64             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    f64             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    menos           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    not             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    para            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    for             reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    entero          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    decimal         reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    cadena          reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    true            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    false           reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    caracter        reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)
    loop            reduce using rule 156 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST .)


state 339

    (152) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .

    modulo          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    fn              reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    struct          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    $end            reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    llavec          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    pub             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    let             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    println         reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    id              reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    if              reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    match           reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    continue        reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    return          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    break           reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    while           reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    i64             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    f64             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    menos           reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    not             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    para            reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    for             reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    entero          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    decimal         reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    cadena          reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    true            reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    false           reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    caracter        reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)
    loop            reduce using rule 152 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST .)


state 340

    (157) FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .

    modulo          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    fn              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    struct          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    $end            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    llavec          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    pub             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    let             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    println         reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    id              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    if              reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    match           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    continue        reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    return          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    break           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    while           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    i64             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    f64             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    menos           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    not             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    para            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    for             reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    entero          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    decimal         reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    cadena          reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    true            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    false           reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    caracter        reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)
    loop            reduce using rule 157 (FUNCION -> fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST .)


state 341

    (101) ABS -> EXPRESION punto abs para . parc

    parc            shift and go to state 423


state 342

    (103) CLONE -> EXPRESION punto clone para . parc

    parc            shift and go to state 424


state 343

    (106) SQRT -> EXPRESION punto sqrt para . parc

    parc            shift and go to state 425


state 344

    (108) TO_STRING_OWNED -> EXPRESION punto toString para . parc

    parc            shift and go to state 426


state 345

    (109) TO_STRING_OWNED -> EXPRESION punto toOwned para . parc

    parc            shift and go to state 427


state 346

    (191) LEN -> EXPRESION punto len para . parc

    parc            shift and go to state 428


state 347

    (112) PRINT -> println para EXPRESION parc .

    puntoycoma      reduce using rule 112 (PRINT -> println para EXPRESION parc .)
    coma            reduce using rule 112 (PRINT -> println para EXPRESION parc .)


state 348

    (113) PRINT -> println para EXPRESION coma . CONJEXP parc
    (67) CONJEXP -> . CONJEXP coma ELCONJ
    (68) CONJEXP -> . ELCONJ
    (69) ELCONJ -> . EXPRESION
    (70) ELCONJ -> . VECI
    (71) ELCONJ -> . ARREGLO
    (72) ELCONJ -> . ampersand mut EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    ampersand       shift and go to state 297
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 294
    CONJEXP                        shift and go to state 429
    ELCONJ                         shift and go to state 293
    VECI                           shift and go to state 295
    ARREGLO                        shift and go to state 296
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 349

    (114) DECLARACION -> let mut id dospuntos . TIPOVAR igual EXPRESION
    (118) DECLARACION -> let mut id dospuntos . TIPOVAR
    (172) DECVECTOR -> let mut id dospuntos . VEC igual VECI
    (174) DECVECTOR -> let mut id dospuntos . VEC igual Vec dospuntos dospuntos FUNCVEC
    (200) DECARREGLO -> let mut id dospuntos . DIMENSION_ARR igual ARREGLO
    (229) DECSTRUCT -> let mut id dospuntos . id igual STRUCT_EXP
    (80) TIPOVAR -> . i64
    (81) TIPOVAR -> . f64
    (82) TIPOVAR -> . bool
    (83) TIPOVAR -> . string
    (84) TIPOVAR -> . char
    (85) TIPOVAR -> . str
    (86) TIPOVAR -> . usize
    (175) VEC -> . Vec menor VEC mayor
    (176) VEC -> . Vec menor TIPOVAR mayor
    (177) VEC -> . Vec menor id mayor
    (203) DIMENSION_ARR -> . cora DIMENSION_ARR puntoycoma EXPRESION corc
    (204) DIMENSION_ARR -> . cora TIPOVAR puntoycoma EXPRESION corc
    (205) DIMENSION_ARR -> . cora id puntoycoma EXPRESION corc

    id              shift and go to state 212
    i64             shift and go to state 58
    f64             shift and go to state 59
    bool            shift and go to state 60
    string          shift and go to state 61
    char            shift and go to state 62
    str             shift and go to state 63
    usize           shift and go to state 64
    Vec             shift and go to state 65
    cora            shift and go to state 141

    TIPOVAR                        shift and go to state 213
    VEC                            shift and go to state 215
    DIMENSION_ARR                  shift and go to state 214

state 350

    (115) DECLARACION -> let mut id igual . EXPRESION
    (170) DECVECTOR -> let mut id igual . VECI
    (202) DECARREGLO -> let mut id igual . ARREGLO
    (227) DECSTRUCT -> let mut id igual . STRUCT_EXP
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (230) STRUCT_EXP -> . id llavea CONJEXP_STRUCT llavec
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    id              shift and go to state 142
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 216
    VECI                           shift and go to state 218
    ARREGLO                        shift and go to state 217
    STRUCT_EXP                     shift and go to state 219
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 351

    (120) ASIGNACION -> id INDEXS igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 120 (ASIGNACION -> id INDEXS igual EXPRESION .)
    coma            reduce using rule 120 (ASIGNACION -> id INDEXS igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 352

    (121) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (196) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 430
    mas             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavec          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    punto           shift and go to state 358

  ! punto           [ reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 353

    (105) CLONE -> id INDEXS punto clone . para parc

    para            shift and go to state 431


state 354

    (192) LEN -> id INDEXS punto len . para parc

    para            shift and go to state 432


state 355

    (197) INDEXS -> INDEXS cora EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 433
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 356

    (186) PUSH -> id punto push para . EXPRESION parc
    (187) PUSH -> id punto push para . VECI parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 434
    VECI                           shift and go to state 435
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 357

    (188) INSERT -> id punto insert para . EXPRESION coma EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 436
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 358

    (235) CONJ_ACCES -> CONJ_ACCES punto . id

    id              shift and go to state 437


state 359

    (237) MOD_VAR_STRUCT -> id punto CONJ_ACCES igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 438
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 360

    (102) ABS -> id punto abs para . parc

    parc            shift and go to state 439


state 361

    (104) CLONE -> id punto clone para . parc

    parc            shift and go to state 440


state 362

    (107) SQRT -> id punto sqrt para . parc

    parc            shift and go to state 441


state 363

    (110) TO_STRING_OWNED -> id punto toString para . parc

    parc            shift and go to state 442


state 364

    (111) TO_STRING_OWNED -> id punto toOwned para . parc

    parc            shift and go to state 443


state 365

    (189) REMOVE -> id punto remove para . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 444
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 366

    (190) CONTAINS -> id punto contains para . ampersand EXPRESION parc

    ampersand       shift and go to state 445


state 367

    (193) LEN -> id punto len para . parc

    parc            shift and go to state 446


state 368

    (194) CAPACITY -> id punto capacity para . parc

    parc            shift and go to state 447


state 369

    (167) CALL -> id para CONJEXP parc .

    puntoycoma      reduce using rule 167 (CALL -> id para CONJEXP parc .)
    mas             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    menos           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    div             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    multi           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    mod             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    mayor           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    menor           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    mayorigual      reduce using rule 167 (CALL -> id para CONJEXP parc .)
    menorigual      reduce using rule 167 (CALL -> id para CONJEXP parc .)
    igualigual      reduce using rule 167 (CALL -> id para CONJEXP parc .)
    diferente       reduce using rule 167 (CALL -> id para CONJEXP parc .)
    and             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    or              reduce using rule 167 (CALL -> id para CONJEXP parc .)
    as              reduce using rule 167 (CALL -> id para CONJEXP parc .)
    punto           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    llavec          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    println         reduce using rule 167 (CALL -> id para CONJEXP parc .)
    let             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    id              reduce using rule 167 (CALL -> id para CONJEXP parc .)
    if              reduce using rule 167 (CALL -> id para CONJEXP parc .)
    match           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    continue        reduce using rule 167 (CALL -> id para CONJEXP parc .)
    return          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    break           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    while           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    i64             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    f64             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    not             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    para            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    fn              reduce using rule 167 (CALL -> id para CONJEXP parc .)
    for             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    struct          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    modulo          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    entero          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    decimal         reduce using rule 167 (CALL -> id para CONJEXP parc .)
    cadena          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    true            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    false           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    caracter        reduce using rule 167 (CALL -> id para CONJEXP parc .)
    loop            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    pub             reduce using rule 167 (CALL -> id para CONJEXP parc .)
    coma            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    parc            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    llavea          reduce using rule 167 (CALL -> id para CONJEXP parc .)
    corc            reduce using rule 167 (CALL -> id para CONJEXP parc .)
    igual           reduce using rule 167 (CALL -> id para CONJEXP parc .)
    bvertical       reduce using rule 167 (CALL -> id para CONJEXP parc .)


state 370

    (67) CONJEXP -> CONJEXP coma . ELCONJ
    (69) ELCONJ -> . EXPRESION
    (70) ELCONJ -> . VECI
    (71) ELCONJ -> . ARREGLO
    (72) ELCONJ -> . ampersand mut EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    ampersand       shift and go to state 297
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    ELCONJ                         shift and go to state 448
    EXPRESION                      shift and go to state 294
    VECI                           shift and go to state 295
    ARREGLO                        shift and go to state 296
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 371

    (72) ELCONJ -> ampersand mut . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 449
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 372

    (253) CONJ_ACCES_MOD -> id .

    para            reduce using rule 253 (CONJ_ACCES_MOD -> id .)
    dospuntos       reduce using rule 253 (CONJ_ACCES_MOD -> id .)


state 373

    (250) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD . para CONJEXP parc
    (251) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD . para parc
    (252) CONJ_ACCES_MOD -> CONJ_ACCES_MOD . dospuntos dospuntos id

    para            shift and go to state 451
    dospuntos       shift and go to state 450


state 374

    (198) INDEXS -> cora EXPRESION corc .

    igual           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    punto           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    cora            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    mas             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    menos           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    div             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    multi           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    mod             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    mayor           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    menor           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    mayorigual      reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    menorigual      reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    igualigual      reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    diferente       reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    and             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    or              reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    as              reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    llavec          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    println         reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    let             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    id              reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    if              reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    match           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    continue        reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    return          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    break           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    while           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    i64             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    f64             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    not             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    para            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    fn              reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    for             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    struct          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    modulo          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    entero          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    decimal         reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    cadena          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    true            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    false           reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    caracter        reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    loop            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    pub             reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    coma            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    puntoycoma      reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    corc            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    parc            reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    llavea          reduce using rule 198 (INDEXS -> cora EXPRESION corc .)
    bvertical       reduce using rule 198 (INDEXS -> cora EXPRESION corc .)


state 375

    (123) IF -> if EXPRESION BLOQUE_INST else . BLOQUE_INST
    (124) IF -> if EXPRESION BLOQUE_INST else . IF
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF

    llavea          shift and go to state 47
    if              shift and go to state 452

    BLOQUE_INST                    shift and go to state 453
    IF                             shift and go to state 454

state 376

    (87) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if . EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if . EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if . EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if . EXPRESION llavea EXPRESION llavec else IF_TER
    (122) IF -> if . EXPRESION BLOQUE_INST
    (123) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> if . EXPRESION BLOQUE_INST else IF
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 455
    IF_TER                         shift and go to state 110
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 377

    (88) IF_TER -> if EXPRESION llavea EXPRESION . llavec
    (90) IF_TER -> if EXPRESION llavea EXPRESION . llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea EXPRESION . llavec else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea EXPRESION . llavec else IF_TER
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for llavec resolved as shift
  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 456
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179

  ! llavec          [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]
  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 378

    (87) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec
    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else IF_TER
    (151) BLOQUE_INST -> llavea INSTRUCCIONES . llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    llavec          shift and go to state 157
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 457
    IF_TER                         shift and go to state 110
    INSTRUCCION                    shift and go to state 158
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 379

    (59) EXPRESION -> CALL .
    (19) INSTRUCCION -> CALL . puntoycoma

    llavec          reduce using rule 59 (EXPRESION -> CALL .)
    mas             reduce using rule 59 (EXPRESION -> CALL .)
    menos           reduce using rule 59 (EXPRESION -> CALL .)
    div             reduce using rule 59 (EXPRESION -> CALL .)
    multi           reduce using rule 59 (EXPRESION -> CALL .)
    mod             reduce using rule 59 (EXPRESION -> CALL .)
    mayor           reduce using rule 59 (EXPRESION -> CALL .)
    menor           reduce using rule 59 (EXPRESION -> CALL .)
    mayorigual      reduce using rule 59 (EXPRESION -> CALL .)
    menorigual      reduce using rule 59 (EXPRESION -> CALL .)
    igualigual      reduce using rule 59 (EXPRESION -> CALL .)
    diferente       reduce using rule 59 (EXPRESION -> CALL .)
    and             reduce using rule 59 (EXPRESION -> CALL .)
    or              reduce using rule 59 (EXPRESION -> CALL .)
    as              reduce using rule 59 (EXPRESION -> CALL .)
    punto           reduce using rule 59 (EXPRESION -> CALL .)
    i64             reduce using rule 59 (EXPRESION -> CALL .)
    f64             reduce using rule 59 (EXPRESION -> CALL .)
    not             reduce using rule 59 (EXPRESION -> CALL .)
    para            reduce using rule 59 (EXPRESION -> CALL .)
    entero          reduce using rule 59 (EXPRESION -> CALL .)
    decimal         reduce using rule 59 (EXPRESION -> CALL .)
    cadena          reduce using rule 59 (EXPRESION -> CALL .)
    true            reduce using rule 59 (EXPRESION -> CALL .)
    false           reduce using rule 59 (EXPRESION -> CALL .)
    caracter        reduce using rule 59 (EXPRESION -> CALL .)
    id              reduce using rule 59 (EXPRESION -> CALL .)
    if              reduce using rule 59 (EXPRESION -> CALL .)
    match           reduce using rule 59 (EXPRESION -> CALL .)
    loop            reduce using rule 59 (EXPRESION -> CALL .)
    println         reduce using rule 59 (EXPRESION -> CALL .)
    let             reduce using rule 59 (EXPRESION -> CALL .)
    continue        reduce using rule 59 (EXPRESION -> CALL .)
    return          reduce using rule 59 (EXPRESION -> CALL .)
    break           reduce using rule 59 (EXPRESION -> CALL .)
    while           reduce using rule 59 (EXPRESION -> CALL .)
    fn              reduce using rule 59 (EXPRESION -> CALL .)
    for             reduce using rule 59 (EXPRESION -> CALL .)
    struct          reduce using rule 59 (EXPRESION -> CALL .)
    modulo          reduce using rule 59 (EXPRESION -> CALL .)
    puntoycoma      shift and go to state 180


state 380

    (66) EXPRESION -> ACCESO_MOD .
    (30) INSTRUCCION -> ACCESO_MOD . puntoycoma

    llavec          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mas             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menos           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    div             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    multi           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mod             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menor           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    mayorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    menorigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    igualigual      reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    diferente       reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    and             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    or              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    as              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    punto           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    i64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    f64             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    not             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    para            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    entero          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    decimal         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    cadena          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    true            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    false           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    caracter        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    id              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    if              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    match           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    loop            reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    println         reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    let             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    continue        reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    return          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    break           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    while           reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    fn              reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    for             reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    struct          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    modulo          reduce using rule 66 (EXPRESION -> ACCESO_MOD .)
    puntoycoma      shift and go to state 187


state 381

    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (119) ASIGNACION -> id . igual EXPRESION
    (120) ASIGNACION -> id . INDEXS igual EXPRESION
    (121) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> id . punto push para EXPRESION parc
    (187) PUSH -> id . punto push para VECI parc
    (188) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
  ! shift/reduce conflict for para resolved as shift
    llavec          reduce using rule 78 (ID -> id .)
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    i64             reduce using rule 78 (ID -> id .)
    f64             reduce using rule 78 (ID -> id .)
    not             reduce using rule 78 (ID -> id .)
    entero          reduce using rule 78 (ID -> id .)
    decimal         reduce using rule 78 (ID -> id .)
    cadena          reduce using rule 78 (ID -> id .)
    true            reduce using rule 78 (ID -> id .)
    false           reduce using rule 78 (ID -> id .)
    caracter        reduce using rule 78 (ID -> id .)
    id              reduce using rule 78 (ID -> id .)
    if              reduce using rule 78 (ID -> id .)
    match           reduce using rule 78 (ID -> id .)
    loop            reduce using rule 78 (ID -> id .)
    println         reduce using rule 78 (ID -> id .)
    let             reduce using rule 78 (ID -> id .)
    continue        reduce using rule 78 (ID -> id .)
    return          reduce using rule 78 (ID -> id .)
    break           reduce using rule 78 (ID -> id .)
    while           reduce using rule 78 (ID -> id .)
    fn              reduce using rule 78 (ID -> id .)
    for             reduce using rule 78 (ID -> id .)
    struct          reduce using rule 78 (ID -> id .)
    modulo          reduce using rule 78 (ID -> id .)
    coma            reduce using rule 78 (ID -> id .)
    punto           shift and go to state 458
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    igual           shift and go to state 193
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]
  ! para            [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 459

state 382

    (95) MATCH_TER -> match . EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match . EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (125) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match . EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match . EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match . EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 460
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 383

    (143) CONJEXPM -> EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    igual           reduce using rule 143 (CONJEXPM -> EXPRESION .)
    bvertical       reduce using rule 143 (CONJEXPM -> EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 384

    (125) MATCH -> match EXPRESION llavea BRAZOS . guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea BRAZOS . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (138) BRAZOS -> BRAZOS . BRAZO
    (140) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (141) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (142) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (143) CONJEXPM -> . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 461
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 383
    BRAZO                          shift and go to state 462
    CONJEXPM                       shift and go to state 463
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 385

    (126) MATCH -> match EXPRESION llavea guionbajo . igual mayor BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo . igual mayor INSTRUCCION_1LINE coma llavec
    (96) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 464


state 386

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER . guionbajo igual mayor EXPRESION coma llavec
    (97) BRAZOS_TER -> BRAZOS_TER . BRAZO_TER
    (99) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (142) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (143) CONJEXPM -> . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 465
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 383
    BRAZO_TER                      shift and go to state 466
    CONJEXPM                       shift and go to state 421
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 387

    (139) BRAZOS -> BRAZO .

    guionbajo       reduce using rule 139 (BRAZOS -> BRAZO .)
    i64             reduce using rule 139 (BRAZOS -> BRAZO .)
    f64             reduce using rule 139 (BRAZOS -> BRAZO .)
    menos           reduce using rule 139 (BRAZOS -> BRAZO .)
    not             reduce using rule 139 (BRAZOS -> BRAZO .)
    para            reduce using rule 139 (BRAZOS -> BRAZO .)
    entero          reduce using rule 139 (BRAZOS -> BRAZO .)
    decimal         reduce using rule 139 (BRAZOS -> BRAZO .)
    cadena          reduce using rule 139 (BRAZOS -> BRAZO .)
    true            reduce using rule 139 (BRAZOS -> BRAZO .)
    false           reduce using rule 139 (BRAZOS -> BRAZO .)
    caracter        reduce using rule 139 (BRAZOS -> BRAZO .)
    id              reduce using rule 139 (BRAZOS -> BRAZO .)
    if              reduce using rule 139 (BRAZOS -> BRAZO .)
    match           reduce using rule 139 (BRAZOS -> BRAZO .)
    loop            reduce using rule 139 (BRAZOS -> BRAZO .)


state 388

    (98) BRAZOS_TER -> BRAZO_TER .

    guionbajo       reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    i64             reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    f64             reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    menos           reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    not             reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    para            reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    entero          reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    decimal         reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    cadena          reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    true            reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    false           reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    caracter        reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    id              reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    if              reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    match           reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)
    loop            reduce using rule 98 (BRAZOS_TER -> BRAZO_TER .)


state 389

    (140) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (99) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (142) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 467
    bvertical       shift and go to state 468


state 390

    (36) EXPRESION -> i64 dospuntos dospuntos pow . para EXPRESION coma EXPRESION parc

    para            shift and go to state 469


state 391

    (37) EXPRESION -> f64 dospuntos dospuntos powf . para EXPRESION coma EXPRESION parc

    para            shift and go to state 470


state 392

    (220) CHARS -> id . punto chars para parc
    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 471
    llavea          reduce using rule 78 (ID -> id .)
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 229

state 393

    (213) FORIN -> for id in ARRFOR . BLOQUE_INST
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 472

state 394

    (214) ARRFOR -> CHARS .

    llavea          reduce using rule 214 (ARRFOR -> CHARS .)


state 395

    (215) ARRFOR -> ARREGLO .

    llavea          reduce using rule 215 (ARRFOR -> ARREGLO .)


state 396

    (216) ARRFOR -> VECI .

    llavea          reduce using rule 216 (ARRFOR -> VECI .)


state 397

    (217) ARRFOR -> RANGO .

    llavea          reduce using rule 217 (ARRFOR -> RANGO .)


state 398

    (218) ARRFOR -> ID .
    (50) EXPRESION -> ID .

    llavea          reduce using rule 218 (ARRFOR -> ID .)
    punto           reduce using rule 50 (EXPRESION -> ID .)
    mas             reduce using rule 50 (EXPRESION -> ID .)
    menos           reduce using rule 50 (EXPRESION -> ID .)
    div             reduce using rule 50 (EXPRESION -> ID .)
    multi           reduce using rule 50 (EXPRESION -> ID .)
    mod             reduce using rule 50 (EXPRESION -> ID .)
    mayor           reduce using rule 50 (EXPRESION -> ID .)
    menor           reduce using rule 50 (EXPRESION -> ID .)
    mayorigual      reduce using rule 50 (EXPRESION -> ID .)
    menorigual      reduce using rule 50 (EXPRESION -> ID .)
    igualigual      reduce using rule 50 (EXPRESION -> ID .)
    diferente       reduce using rule 50 (EXPRESION -> ID .)
    and             reduce using rule 50 (EXPRESION -> ID .)
    or              reduce using rule 50 (EXPRESION -> ID .)
    as              reduce using rule 50 (EXPRESION -> ID .)


state 399

    (219) CHARS -> EXPRESION . punto chars para parc
    (221) RANGO -> EXPRESION . punto punto EXPRESION
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    punto           shift and go to state 473
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178


state 400

    (229) DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .

    llavec          reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    pub             reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    fn              reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    modulo          reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    struct          reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    let             reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    puntoycoma      reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)
    coma            reduce using rule 229 (DECSTRUCT -> let mut id dospuntos id igual STRUCT_EXP .)


state 401

    (114) DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    pub             reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    fn              reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    modulo          reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    struct          reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    let             reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    puntoycoma      reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    coma            reduce using rule 114 (DECLARACION -> let mut id dospuntos TIPOVAR igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 402

    (200) DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .

    llavec          reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    pub             reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    fn              reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    modulo          reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    struct          reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    let             reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    puntoycoma      reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)
    coma            reduce using rule 200 (DECARREGLO -> let mut id dospuntos DIMENSION_ARR igual ARREGLO .)


state 403

    (172) DECVECTOR -> let mut id dospuntos VEC igual VECI .

    llavec          reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    pub             reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    fn              reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    modulo          reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    struct          reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    let             reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    puntoycoma      reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)
    coma            reduce using rule 172 (DECVECTOR -> let mut id dospuntos VEC igual VECI .)


state 404

    (174) DECVECTOR -> let mut id dospuntos VEC igual Vec . dospuntos dospuntos FUNCVEC

    dospuntos       shift and go to state 474


state 405

    (173) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 475


state 406

    (203) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 476
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 407

    (204) DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 477
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 408

    (205) DIMENSION_ARR -> cora id puntoycoma EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 478
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 409

    (233) EXSTRUCT -> id dospuntos . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 479
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 410

    (230) STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .

    llavec          reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    pub             reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    fn              reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    modulo          reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    struct          reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    let             reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    coma            reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    corc            reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)
    puntoycoma      reduce using rule 230 (STRUCT_EXP -> id llavea CONJEXP_STRUCT llavec .)


state 411

    (231) CONJEXP_STRUCT -> CONJEXP_STRUCT coma . EXSTRUCT
    (233) EXSTRUCT -> . id dospuntos EXPRESION

    id              shift and go to state 320

    EXSTRUCT                       shift and go to state 480

state 412

    (196) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    mas             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavec          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    pub             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    parc            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    llavea          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    puntoycoma      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    corc            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igual           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    bvertical       reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    punto           shift and go to state 358

  ! punto           [ reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 413

    (208) CONT_ARR -> CONT_ARR coma ELARR .

    corc            reduce using rule 208 (CONT_ARR -> CONT_ARR coma ELARR .)
    coma            reduce using rule 208 (CONT_ARR -> CONT_ARR coma ELARR .)


state 414

    (211) ELARR -> EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            reduce using rule 211 (ELARR -> EXPRESION .)
    coma            reduce using rule 211 (ELARR -> EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 415

    (207) ARREGLO -> cora EXPRESION puntoycoma EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 481
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 416

    (178) VECI -> vecI cora CONJVECI corc .

    llavec          reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    pub             reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    fn              reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    modulo          reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    struct          reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    let             reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    coma            reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    parc            reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    puntoycoma      reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    corc            reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)
    llavea          reduce using rule 178 (VECI -> vecI cora CONJVECI corc .)


state 417

    (180) CONJVECI -> CONJVECI coma . ELVEC
    (182) ELVEC -> . EXPRESION
    (183) ELVEC -> . VECI
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    ELVEC                          shift and go to state 482
    EXPRESION                      shift and go to state 483
    VECI                           shift and go to state 331
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 418

    (179) VECI -> vecI cora EXPRESION puntoycoma . EXPRESION corc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 484
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 419

    (87) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec
    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES . EXPRESION llavec else IF_TER
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 457
    IF_TER                         shift and go to state 110
    INSTRUCCION                    shift and go to state 158
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 420

    (96) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 485


state 421

    (99) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (142) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 486
    bvertical       shift and go to state 468


state 422

    (162) PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .

    parc            reduce using rule 162 (PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .)
    coma            reduce using rule 162 (PARAMETRO -> id dospuntos ampersand mut cora TIPOVAR corc .)


state 423

    (101) ABS -> EXPRESION punto abs para parc .

    mas             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    menos           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    div             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    multi           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    mod             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    mayor           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    menor           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    mayorigual      reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    menorigual      reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    igualigual      reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    diferente       reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    and             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    or              reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    as              reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    punto           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    llavec          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    println         reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    let             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    id              reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    if              reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    match           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    continue        reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    return          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    break           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    while           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    i64             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    f64             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    not             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    para            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    fn              reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    for             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    struct          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    modulo          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    entero          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    decimal         reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    cadena          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    true            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    false           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    caracter        reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    loop            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    pub             reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    coma            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    parc            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    llavea          reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    puntoycoma      reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    corc            reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    igual           reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)
    bvertical       reduce using rule 101 (ABS -> EXPRESION punto abs para parc .)


state 424

    (103) CLONE -> EXPRESION punto clone para parc .

    mas             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    menos           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    div             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    multi           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    mod             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    mayor           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    menor           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    mayorigual      reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    menorigual      reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    igualigual      reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    diferente       reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    and             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    or              reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    as              reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    punto           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    llavec          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    println         reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    let             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    id              reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    if              reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    match           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    continue        reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    return          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    break           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    while           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    i64             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    f64             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    not             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    para            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    fn              reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    for             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    struct          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    modulo          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    entero          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    decimal         reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    cadena          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    true            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    false           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    caracter        reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    loop            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    pub             reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    coma            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    parc            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    llavea          reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    puntoycoma      reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    corc            reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    igual           reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)
    bvertical       reduce using rule 103 (CLONE -> EXPRESION punto clone para parc .)


state 425

    (106) SQRT -> EXPRESION punto sqrt para parc .

    mas             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    menos           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    div             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    multi           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    mod             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    mayor           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    menor           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    mayorigual      reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    menorigual      reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    igualigual      reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    diferente       reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    and             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    or              reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    as              reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    punto           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    llavec          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    println         reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    let             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    id              reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    if              reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    match           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    continue        reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    return          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    break           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    while           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    i64             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    f64             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    not             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    para            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    fn              reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    for             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    struct          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    modulo          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    entero          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    decimal         reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    cadena          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    true            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    false           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    caracter        reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    loop            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    pub             reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    coma            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    parc            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    llavea          reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    puntoycoma      reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    corc            reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    igual           reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)
    bvertical       reduce using rule 106 (SQRT -> EXPRESION punto sqrt para parc .)


state 426

    (108) TO_STRING_OWNED -> EXPRESION punto toString para parc .

    mas             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menos           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    div             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    multi           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mod             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mayor           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menor           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    mayorigual      reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    menorigual      reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    igualigual      reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    diferente       reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    and             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    or              reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    as              reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    punto           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    llavec          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    println         reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    let             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    id              reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    if              reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    match           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    continue        reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    return          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    break           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    while           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    i64             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    f64             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    not             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    para            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    fn              reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    for             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    struct          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    modulo          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    entero          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    decimal         reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    cadena          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    true            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    false           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    caracter        reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    loop            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    pub             reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    coma            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    parc            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    llavea          reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    puntoycoma      reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    corc            reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    igual           reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)
    bvertical       reduce using rule 108 (TO_STRING_OWNED -> EXPRESION punto toString para parc .)


state 427

    (109) TO_STRING_OWNED -> EXPRESION punto toOwned para parc .

    mas             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menos           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    div             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    multi           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mod             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mayor           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menor           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    mayorigual      reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    menorigual      reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    igualigual      reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    diferente       reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    and             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    or              reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    as              reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    punto           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    llavec          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    println         reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    let             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    id              reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    if              reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    match           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    continue        reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    return          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    break           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    while           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    i64             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    f64             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    not             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    para            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    fn              reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    for             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    struct          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    modulo          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    entero          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    decimal         reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    cadena          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    true            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    false           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    caracter        reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    loop            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    pub             reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    coma            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    parc            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    llavea          reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    puntoycoma      reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    corc            reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    igual           reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)
    bvertical       reduce using rule 109 (TO_STRING_OWNED -> EXPRESION punto toOwned para parc .)


state 428

    (191) LEN -> EXPRESION punto len para parc .

    mas             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    menos           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    div             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    multi           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    mod             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    mayor           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    menor           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    mayorigual      reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    menorigual      reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    igualigual      reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    diferente       reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    and             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    or              reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    as              reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    punto           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    llavec          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    println         reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    let             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    id              reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    if              reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    match           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    continue        reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    return          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    break           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    while           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    i64             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    f64             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    not             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    para            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    fn              reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    for             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    struct          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    modulo          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    entero          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    decimal         reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    cadena          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    true            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    false           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    caracter        reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    loop            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    pub             reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    coma            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    parc            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    llavea          reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    puntoycoma      reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    corc            reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    igual           reduce using rule 191 (LEN -> EXPRESION punto len para parc .)
    bvertical       reduce using rule 191 (LEN -> EXPRESION punto len para parc .)


state 429

    (113) PRINT -> println para EXPRESION coma CONJEXP . parc
    (67) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 487
    coma            shift and go to state 370


state 430

    (121) ASIGNACION -> id INDEXS punto CONJ_ACCES igual . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 488
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 431

    (105) CLONE -> id INDEXS punto clone para . parc

    parc            shift and go to state 489


state 432

    (192) LEN -> id INDEXS punto len para . parc

    parc            shift and go to state 490


state 433

    (197) INDEXS -> INDEXS cora EXPRESION corc .

    igual           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    punto           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    cora            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    mas             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    menos           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    div             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    multi           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    mod             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    mayor           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    menor           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    mayorigual      reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    menorigual      reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    igualigual      reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    diferente       reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    and             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    or              reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    as              reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    llavec          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    println         reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    let             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    id              reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    if              reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    match           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    continue        reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    return          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    break           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    while           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    i64             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    f64             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    not             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    para            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    fn              reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    for             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    struct          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    modulo          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    entero          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    decimal         reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    cadena          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    true            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    false           reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    caracter        reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    loop            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    pub             reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    coma            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    puntoycoma      reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    corc            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    parc            reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    llavea          reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)
    bvertical       reduce using rule 197 (INDEXS -> INDEXS cora EXPRESION corc .)


state 434

    (186) PUSH -> id punto push para EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 491
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 435

    (187) PUSH -> id punto push para VECI . parc

    parc            shift and go to state 492


state 436

    (188) INSERT -> id punto insert para EXPRESION . coma EXPRESION parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 493
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 437

    (235) CONJ_ACCES -> CONJ_ACCES punto id .

    igual           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    punto           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mas             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menos           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    div             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    multi           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mod             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mayor           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menor           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    mayorigual      reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    menorigual      reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    igualigual      reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    diferente       reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    and             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    or              reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    as              reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    llavec          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    println         reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    let             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    id              reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    if              reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    match           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    continue        reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    return          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    break           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    while           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    i64             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    f64             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    not             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    para            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    fn              reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    for             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    struct          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    modulo          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    entero          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    decimal         reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    cadena          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    true            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    false           reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    caracter        reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    loop            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    coma            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    pub             reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    parc            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    llavea          reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    puntoycoma      reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    corc            reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)
    bvertical       reduce using rule 235 (CONJ_ACCES -> CONJ_ACCES punto id .)


state 438

    (237) MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 237 (MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .)
    coma            reduce using rule 237 (MOD_VAR_STRUCT -> id punto CONJ_ACCES igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 439

    (102) ABS -> id punto abs para parc .

    mas             reduce using rule 102 (ABS -> id punto abs para parc .)
    menos           reduce using rule 102 (ABS -> id punto abs para parc .)
    div             reduce using rule 102 (ABS -> id punto abs para parc .)
    multi           reduce using rule 102 (ABS -> id punto abs para parc .)
    mod             reduce using rule 102 (ABS -> id punto abs para parc .)
    mayor           reduce using rule 102 (ABS -> id punto abs para parc .)
    menor           reduce using rule 102 (ABS -> id punto abs para parc .)
    mayorigual      reduce using rule 102 (ABS -> id punto abs para parc .)
    menorigual      reduce using rule 102 (ABS -> id punto abs para parc .)
    igualigual      reduce using rule 102 (ABS -> id punto abs para parc .)
    diferente       reduce using rule 102 (ABS -> id punto abs para parc .)
    and             reduce using rule 102 (ABS -> id punto abs para parc .)
    or              reduce using rule 102 (ABS -> id punto abs para parc .)
    as              reduce using rule 102 (ABS -> id punto abs para parc .)
    punto           reduce using rule 102 (ABS -> id punto abs para parc .)
    llavec          reduce using rule 102 (ABS -> id punto abs para parc .)
    println         reduce using rule 102 (ABS -> id punto abs para parc .)
    let             reduce using rule 102 (ABS -> id punto abs para parc .)
    id              reduce using rule 102 (ABS -> id punto abs para parc .)
    if              reduce using rule 102 (ABS -> id punto abs para parc .)
    match           reduce using rule 102 (ABS -> id punto abs para parc .)
    continue        reduce using rule 102 (ABS -> id punto abs para parc .)
    return          reduce using rule 102 (ABS -> id punto abs para parc .)
    break           reduce using rule 102 (ABS -> id punto abs para parc .)
    while           reduce using rule 102 (ABS -> id punto abs para parc .)
    i64             reduce using rule 102 (ABS -> id punto abs para parc .)
    f64             reduce using rule 102 (ABS -> id punto abs para parc .)
    not             reduce using rule 102 (ABS -> id punto abs para parc .)
    para            reduce using rule 102 (ABS -> id punto abs para parc .)
    fn              reduce using rule 102 (ABS -> id punto abs para parc .)
    for             reduce using rule 102 (ABS -> id punto abs para parc .)
    struct          reduce using rule 102 (ABS -> id punto abs para parc .)
    modulo          reduce using rule 102 (ABS -> id punto abs para parc .)
    entero          reduce using rule 102 (ABS -> id punto abs para parc .)
    decimal         reduce using rule 102 (ABS -> id punto abs para parc .)
    cadena          reduce using rule 102 (ABS -> id punto abs para parc .)
    true            reduce using rule 102 (ABS -> id punto abs para parc .)
    false           reduce using rule 102 (ABS -> id punto abs para parc .)
    caracter        reduce using rule 102 (ABS -> id punto abs para parc .)
    loop            reduce using rule 102 (ABS -> id punto abs para parc .)
    pub             reduce using rule 102 (ABS -> id punto abs para parc .)
    coma            reduce using rule 102 (ABS -> id punto abs para parc .)
    parc            reduce using rule 102 (ABS -> id punto abs para parc .)
    llavea          reduce using rule 102 (ABS -> id punto abs para parc .)
    puntoycoma      reduce using rule 102 (ABS -> id punto abs para parc .)
    corc            reduce using rule 102 (ABS -> id punto abs para parc .)
    igual           reduce using rule 102 (ABS -> id punto abs para parc .)
    bvertical       reduce using rule 102 (ABS -> id punto abs para parc .)


state 440

    (104) CLONE -> id punto clone para parc .

    mas             reduce using rule 104 (CLONE -> id punto clone para parc .)
    menos           reduce using rule 104 (CLONE -> id punto clone para parc .)
    div             reduce using rule 104 (CLONE -> id punto clone para parc .)
    multi           reduce using rule 104 (CLONE -> id punto clone para parc .)
    mod             reduce using rule 104 (CLONE -> id punto clone para parc .)
    mayor           reduce using rule 104 (CLONE -> id punto clone para parc .)
    menor           reduce using rule 104 (CLONE -> id punto clone para parc .)
    mayorigual      reduce using rule 104 (CLONE -> id punto clone para parc .)
    menorigual      reduce using rule 104 (CLONE -> id punto clone para parc .)
    igualigual      reduce using rule 104 (CLONE -> id punto clone para parc .)
    diferente       reduce using rule 104 (CLONE -> id punto clone para parc .)
    and             reduce using rule 104 (CLONE -> id punto clone para parc .)
    or              reduce using rule 104 (CLONE -> id punto clone para parc .)
    as              reduce using rule 104 (CLONE -> id punto clone para parc .)
    punto           reduce using rule 104 (CLONE -> id punto clone para parc .)
    llavec          reduce using rule 104 (CLONE -> id punto clone para parc .)
    println         reduce using rule 104 (CLONE -> id punto clone para parc .)
    let             reduce using rule 104 (CLONE -> id punto clone para parc .)
    id              reduce using rule 104 (CLONE -> id punto clone para parc .)
    if              reduce using rule 104 (CLONE -> id punto clone para parc .)
    match           reduce using rule 104 (CLONE -> id punto clone para parc .)
    continue        reduce using rule 104 (CLONE -> id punto clone para parc .)
    return          reduce using rule 104 (CLONE -> id punto clone para parc .)
    break           reduce using rule 104 (CLONE -> id punto clone para parc .)
    while           reduce using rule 104 (CLONE -> id punto clone para parc .)
    i64             reduce using rule 104 (CLONE -> id punto clone para parc .)
    f64             reduce using rule 104 (CLONE -> id punto clone para parc .)
    not             reduce using rule 104 (CLONE -> id punto clone para parc .)
    para            reduce using rule 104 (CLONE -> id punto clone para parc .)
    fn              reduce using rule 104 (CLONE -> id punto clone para parc .)
    for             reduce using rule 104 (CLONE -> id punto clone para parc .)
    struct          reduce using rule 104 (CLONE -> id punto clone para parc .)
    modulo          reduce using rule 104 (CLONE -> id punto clone para parc .)
    entero          reduce using rule 104 (CLONE -> id punto clone para parc .)
    decimal         reduce using rule 104 (CLONE -> id punto clone para parc .)
    cadena          reduce using rule 104 (CLONE -> id punto clone para parc .)
    true            reduce using rule 104 (CLONE -> id punto clone para parc .)
    false           reduce using rule 104 (CLONE -> id punto clone para parc .)
    caracter        reduce using rule 104 (CLONE -> id punto clone para parc .)
    loop            reduce using rule 104 (CLONE -> id punto clone para parc .)
    pub             reduce using rule 104 (CLONE -> id punto clone para parc .)
    coma            reduce using rule 104 (CLONE -> id punto clone para parc .)
    parc            reduce using rule 104 (CLONE -> id punto clone para parc .)
    llavea          reduce using rule 104 (CLONE -> id punto clone para parc .)
    puntoycoma      reduce using rule 104 (CLONE -> id punto clone para parc .)
    corc            reduce using rule 104 (CLONE -> id punto clone para parc .)
    igual           reduce using rule 104 (CLONE -> id punto clone para parc .)
    bvertical       reduce using rule 104 (CLONE -> id punto clone para parc .)


state 441

    (107) SQRT -> id punto sqrt para parc .

    mas             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    menos           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    div             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    multi           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    mod             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    mayor           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    menor           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    mayorigual      reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    menorigual      reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    igualigual      reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    diferente       reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    and             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    or              reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    as              reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    punto           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    llavec          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    println         reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    let             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    id              reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    if              reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    match           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    continue        reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    return          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    break           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    while           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    i64             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    f64             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    not             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    para            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    fn              reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    for             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    struct          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    modulo          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    entero          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    decimal         reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    cadena          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    true            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    false           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    caracter        reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    loop            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    pub             reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    coma            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    parc            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    llavea          reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    puntoycoma      reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    corc            reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    igual           reduce using rule 107 (SQRT -> id punto sqrt para parc .)
    bvertical       reduce using rule 107 (SQRT -> id punto sqrt para parc .)


state 442

    (110) TO_STRING_OWNED -> id punto toString para parc .

    mas             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    menos           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    div             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    multi           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    mod             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    mayor           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    menor           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    mayorigual      reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    menorigual      reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    igualigual      reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    diferente       reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    and             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    or              reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    as              reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    punto           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    llavec          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    println         reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    let             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    id              reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    if              reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    match           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    continue        reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    return          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    break           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    while           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    i64             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    f64             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    not             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    para            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    fn              reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    for             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    struct          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    modulo          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    entero          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    decimal         reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    cadena          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    true            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    false           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    caracter        reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    loop            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    pub             reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    coma            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    parc            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    llavea          reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    puntoycoma      reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    corc            reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    igual           reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)
    bvertical       reduce using rule 110 (TO_STRING_OWNED -> id punto toString para parc .)


state 443

    (111) TO_STRING_OWNED -> id punto toOwned para parc .

    mas             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menos           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    div             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    multi           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mod             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mayor           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menor           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    mayorigual      reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    menorigual      reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    igualigual      reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    diferente       reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    and             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    or              reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    as              reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    punto           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    llavec          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    println         reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    let             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    id              reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    if              reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    match           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    continue        reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    return          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    break           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    while           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    i64             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    f64             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    not             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    para            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    fn              reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    for             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    struct          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    modulo          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    entero          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    decimal         reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    cadena          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    true            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    false           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    caracter        reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    loop            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    pub             reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    coma            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    parc            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    llavea          reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    puntoycoma      reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    corc            reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    igual           reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)
    bvertical       reduce using rule 111 (TO_STRING_OWNED -> id punto toOwned para parc .)


state 444

    (189) REMOVE -> id punto remove para EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 494
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 445

    (190) CONTAINS -> id punto contains para ampersand . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 495
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 446

    (193) LEN -> id punto len para parc .

    mas             reduce using rule 193 (LEN -> id punto len para parc .)
    menos           reduce using rule 193 (LEN -> id punto len para parc .)
    div             reduce using rule 193 (LEN -> id punto len para parc .)
    multi           reduce using rule 193 (LEN -> id punto len para parc .)
    mod             reduce using rule 193 (LEN -> id punto len para parc .)
    mayor           reduce using rule 193 (LEN -> id punto len para parc .)
    menor           reduce using rule 193 (LEN -> id punto len para parc .)
    mayorigual      reduce using rule 193 (LEN -> id punto len para parc .)
    menorigual      reduce using rule 193 (LEN -> id punto len para parc .)
    igualigual      reduce using rule 193 (LEN -> id punto len para parc .)
    diferente       reduce using rule 193 (LEN -> id punto len para parc .)
    and             reduce using rule 193 (LEN -> id punto len para parc .)
    or              reduce using rule 193 (LEN -> id punto len para parc .)
    as              reduce using rule 193 (LEN -> id punto len para parc .)
    punto           reduce using rule 193 (LEN -> id punto len para parc .)
    llavec          reduce using rule 193 (LEN -> id punto len para parc .)
    println         reduce using rule 193 (LEN -> id punto len para parc .)
    let             reduce using rule 193 (LEN -> id punto len para parc .)
    id              reduce using rule 193 (LEN -> id punto len para parc .)
    if              reduce using rule 193 (LEN -> id punto len para parc .)
    match           reduce using rule 193 (LEN -> id punto len para parc .)
    continue        reduce using rule 193 (LEN -> id punto len para parc .)
    return          reduce using rule 193 (LEN -> id punto len para parc .)
    break           reduce using rule 193 (LEN -> id punto len para parc .)
    while           reduce using rule 193 (LEN -> id punto len para parc .)
    i64             reduce using rule 193 (LEN -> id punto len para parc .)
    f64             reduce using rule 193 (LEN -> id punto len para parc .)
    not             reduce using rule 193 (LEN -> id punto len para parc .)
    para            reduce using rule 193 (LEN -> id punto len para parc .)
    fn              reduce using rule 193 (LEN -> id punto len para parc .)
    for             reduce using rule 193 (LEN -> id punto len para parc .)
    struct          reduce using rule 193 (LEN -> id punto len para parc .)
    modulo          reduce using rule 193 (LEN -> id punto len para parc .)
    entero          reduce using rule 193 (LEN -> id punto len para parc .)
    decimal         reduce using rule 193 (LEN -> id punto len para parc .)
    cadena          reduce using rule 193 (LEN -> id punto len para parc .)
    true            reduce using rule 193 (LEN -> id punto len para parc .)
    false           reduce using rule 193 (LEN -> id punto len para parc .)
    caracter        reduce using rule 193 (LEN -> id punto len para parc .)
    loop            reduce using rule 193 (LEN -> id punto len para parc .)
    pub             reduce using rule 193 (LEN -> id punto len para parc .)
    coma            reduce using rule 193 (LEN -> id punto len para parc .)
    parc            reduce using rule 193 (LEN -> id punto len para parc .)
    llavea          reduce using rule 193 (LEN -> id punto len para parc .)
    puntoycoma      reduce using rule 193 (LEN -> id punto len para parc .)
    corc            reduce using rule 193 (LEN -> id punto len para parc .)
    igual           reduce using rule 193 (LEN -> id punto len para parc .)
    bvertical       reduce using rule 193 (LEN -> id punto len para parc .)


state 447

    (194) CAPACITY -> id punto capacity para parc .

    mas             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    menos           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    div             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    multi           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    mod             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    mayor           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    menor           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    mayorigual      reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    menorigual      reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    igualigual      reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    diferente       reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    and             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    or              reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    as              reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    punto           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    llavec          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    println         reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    let             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    id              reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    if              reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    match           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    continue        reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    return          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    break           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    while           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    i64             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    f64             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    not             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    para            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    fn              reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    for             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    struct          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    modulo          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    entero          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    decimal         reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    cadena          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    true            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    false           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    caracter        reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    loop            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    pub             reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    coma            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    parc            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    llavea          reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    puntoycoma      reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    corc            reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    igual           reduce using rule 194 (CAPACITY -> id punto capacity para parc .)
    bvertical       reduce using rule 194 (CAPACITY -> id punto capacity para parc .)


state 448

    (67) CONJEXP -> CONJEXP coma ELCONJ .

    parc            reduce using rule 67 (CONJEXP -> CONJEXP coma ELCONJ .)
    coma            reduce using rule 67 (CONJEXP -> CONJEXP coma ELCONJ .)


state 449

    (72) ELCONJ -> ampersand mut EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            reduce using rule 72 (ELCONJ -> ampersand mut EXPRESION .)
    coma            reduce using rule 72 (ELCONJ -> ampersand mut EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 450

    (252) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos . dospuntos id

    dospuntos       shift and go to state 496


state 451

    (250) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para . CONJEXP parc
    (251) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para . parc
    (67) CONJEXP -> . CONJEXP coma ELCONJ
    (68) CONJEXP -> . ELCONJ
    (69) ELCONJ -> . EXPRESION
    (70) ELCONJ -> . VECI
    (71) ELCONJ -> . ARREGLO
    (72) ELCONJ -> . ampersand mut EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (178) VECI -> . vecI cora CONJVECI corc
    (179) VECI -> . vecI cora EXPRESION puntoycoma EXPRESION corc
    (206) ARREGLO -> . cora CONT_ARR corc
    (207) ARREGLO -> . cora EXPRESION puntoycoma EXPRESION corc
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    parc            shift and go to state 498
    ampersand       shift and go to state 297
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    vecI            shift and go to state 150
    cora            shift and go to state 149
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    CONJEXP                        shift and go to state 497
    ELCONJ                         shift and go to state 293
    EXPRESION                      shift and go to state 294
    VECI                           shift and go to state 295
    ARREGLO                        shift and go to state 296
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 452

    (122) IF -> if . EXPRESION BLOQUE_INST
    (123) IF -> if . EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> if . EXPRESION BLOQUE_INST else IF
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 499
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 453

    (123) IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .

    llavec          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    println         reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    let             reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    id              reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    if              reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    match           reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    continue        reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    return          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    break           reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    while           reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    i64             reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    f64             reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    menos           reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    not             reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    para            reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    fn              reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    for             reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    struct          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    modulo          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    entero          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    decimal         reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    cadena          reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    true            reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    false           reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    caracter        reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)
    loop            reduce using rule 123 (IF -> if EXPRESION BLOQUE_INST else BLOQUE_INST .)


state 454

    (124) IF -> if EXPRESION BLOQUE_INST else IF .

    llavec          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    println         reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    let             reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    id              reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    if              reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    match           reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    continue        reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    return          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    break           reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    while           reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    i64             reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    f64             reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    menos           reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    not             reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    para            reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    fn              reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    for             reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    struct          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    modulo          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    entero          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    decimal         reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    cadena          reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    true            reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    false           reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    caracter        reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)
    loop            reduce using rule 124 (IF -> if EXPRESION BLOQUE_INST else IF .)


state 455

    (87) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> if EXPRESION . llavea EXPRESION llavec
    (89) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION . llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION . llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> if EXPRESION . llavea EXPRESION llavec else IF_TER
    (122) IF -> if EXPRESION . BLOQUE_INST
    (123) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (124) IF -> if EXPRESION . BLOQUE_INST else IF
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    llavea          shift and go to state 301
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179

    BLOQUE_INST                    shift and go to state 300

state 456

    (88) IF_TER -> if EXPRESION llavea EXPRESION llavec .
    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec . else llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec . else llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea EXPRESION llavec . else IF_TER

    mas             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menos           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    div             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    multi           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mod             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mayor           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menor           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    mayorigual      reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    menorigual      reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    igualigual      reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    diferente       reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    and             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    or              reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    as              reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    punto           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    llavec          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    println         reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    let             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    id              reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    if              reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    match           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    continue        reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    return          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    break           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    while           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    i64             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    f64             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    not             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    para            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    fn              reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    for             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    struct          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    modulo          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    entero          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    decimal         reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    cadena          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    true            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    false           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    caracter        reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    loop            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    pub             reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    coma            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    parc            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    llavea          reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    corc            reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    igual           reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    bvertical       reduce using rule 88 (IF_TER -> if EXPRESION llavea EXPRESION llavec .)
    else            shift and go to state 500


state 457

    (87) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec
    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION . llavec else IF_TER
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for llavec resolved as shift
  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 501
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179

  ! llavec          [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]
  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 458

    (102) ABS -> id punto . abs para parc
    (104) CLONE -> id punto . clone para parc
    (107) SQRT -> id punto . sqrt para parc
    (110) TO_STRING_OWNED -> id punto . toString para parc
    (111) TO_STRING_OWNED -> id punto . toOwned para parc
    (189) REMOVE -> id punto . remove para EXPRESION parc
    (190) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (193) LEN -> id punto . len para parc
    (194) CAPACITY -> id punto . capacity para parc
    (234) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (186) PUSH -> id punto . push para EXPRESION parc
    (187) PUSH -> id punto . push para VECI parc
    (188) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    abs             shift and go to state 282
    clone           shift and go to state 283
    sqrt            shift and go to state 284
    toString        shift and go to state 285
    toOwned         shift and go to state 286
    remove          shift and go to state 287
    contains        shift and go to state 288
    len             shift and go to state 289
    capacity        shift and go to state 290
    push            shift and go to state 279
    insert          shift and go to state 280
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 502

state 459

    (105) CLONE -> id INDEXS . punto clone para parc
    (192) LEN -> id INDEXS . punto len para parc
    (195) ACCESVEC -> id INDEXS .
    (196) ACCESVEC -> id INDEXS . punto CONJ_ACCES
    (120) ASIGNACION -> id INDEXS . igual EXPRESION
    (121) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (197) INDEXS -> INDEXS . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 503
    llavec          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mas             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menos           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    div             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    multi           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mod             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menor           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    mayorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    menorigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    igualigual      reduce using rule 195 (ACCESVEC -> id INDEXS .)
    diferente       reduce using rule 195 (ACCESVEC -> id INDEXS .)
    and             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    or              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    as              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    i64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    f64             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    not             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    para            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    entero          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    decimal         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    cadena          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    true            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    false           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    caracter        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    id              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    if              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    match           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    loop            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    println         reduce using rule 195 (ACCESVEC -> id INDEXS .)
    let             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    continue        reduce using rule 195 (ACCESVEC -> id INDEXS .)
    return          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    break           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    while           reduce using rule 195 (ACCESVEC -> id INDEXS .)
    fn              reduce using rule 195 (ACCESVEC -> id INDEXS .)
    for             reduce using rule 195 (ACCESVEC -> id INDEXS .)
    struct          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    modulo          reduce using rule 195 (ACCESVEC -> id INDEXS .)
    coma            reduce using rule 195 (ACCESVEC -> id INDEXS .)
    igual           shift and go to state 275
    cora            shift and go to state 277

  ! punto           [ reduce using rule 195 (ACCESVEC -> id INDEXS .) ]


state 460

    (95) MATCH_TER -> match EXPRESION . llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION . llavea guionbajo igual mayor EXPRESION coma llavec
    (125) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match EXPRESION . llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION . llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match EXPRESION . llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavea          shift and go to state 504
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 461

    (125) MATCH -> match EXPRESION llavea BRAZOS guionbajo . igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo . igual mayor INSTRUCCION_1LINE coma llavec

    igual           shift and go to state 505


state 462

    (138) BRAZOS -> BRAZOS BRAZO .

    guionbajo       reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    i64             reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    f64             reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    menos           reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    not             reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    para            reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    entero          reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    decimal         reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    cadena          reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    true            reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    false           reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    caracter        reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    id              reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    if              reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    match           reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)
    loop            reduce using rule 138 (BRAZOS -> BRAZOS BRAZO .)


state 463

    (140) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (142) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 506
    bvertical       shift and go to state 468


state 464

    (126) MATCH -> match EXPRESION llavea guionbajo igual . mayor BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo igual . mayor INSTRUCCION_1LINE coma llavec
    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 507


state 465

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo . igual mayor EXPRESION coma llavec

    igual           shift and go to state 508


state 466

    (97) BRAZOS_TER -> BRAZOS_TER BRAZO_TER .

    guionbajo       reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    i64             reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    f64             reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    menos           reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    not             reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    para            reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    entero          reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    decimal         reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    cadena          reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    true            reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    false           reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    caracter        reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    id              reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    if              reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    match           reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)
    loop            reduce using rule 97 (BRAZOS_TER -> BRAZOS_TER BRAZO_TER .)


state 467

    (140) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma
    (99) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma

    mayor           shift and go to state 509


state 468

    (142) CONJEXPM -> CONJEXPM bvertical . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 510
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 469

    (36) EXPRESION -> i64 dospuntos dospuntos pow para . EXPRESION coma EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 511
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 470

    (37) EXPRESION -> f64 dospuntos dospuntos powf para . EXPRESION coma EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 512
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 471

    (220) CHARS -> id punto . chars para parc
    (102) ABS -> id punto . abs para parc
    (104) CLONE -> id punto . clone para parc
    (107) SQRT -> id punto . sqrt para parc
    (110) TO_STRING_OWNED -> id punto . toString para parc
    (111) TO_STRING_OWNED -> id punto . toOwned para parc
    (189) REMOVE -> id punto . remove para EXPRESION parc
    (190) CONTAINS -> id punto . contains para ampersand EXPRESION parc
    (193) LEN -> id punto . len para parc
    (194) CAPACITY -> id punto . capacity para parc
    (234) ACCESO_STRUCT -> id punto . CONJ_ACCES
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    chars           shift and go to state 513
    abs             shift and go to state 282
    clone           shift and go to state 283
    sqrt            shift and go to state 284
    toString        shift and go to state 285
    toOwned         shift and go to state 286
    remove          shift and go to state 287
    contains        shift and go to state 288
    len             shift and go to state 289
    capacity        shift and go to state 290
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 323

state 472

    (213) FORIN -> for id in ARRFOR BLOQUE_INST .

    llavec          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    println         reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    let             reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    id              reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    if              reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    match           reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    continue        reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    return          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    break           reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    while           reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    i64             reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    f64             reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    menos           reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    not             reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    para            reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    fn              reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    for             reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    struct          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    modulo          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    entero          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    decimal         reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    cadena          reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    true            reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    false           reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    caracter        reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)
    loop            reduce using rule 213 (FORIN -> for id in ARRFOR BLOQUE_INST .)


state 473

    (219) CHARS -> EXPRESION punto . chars para parc
    (221) RANGO -> EXPRESION punto . punto EXPRESION
    (101) ABS -> EXPRESION punto . abs para parc
    (103) CLONE -> EXPRESION punto . clone para parc
    (106) SQRT -> EXPRESION punto . sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION punto . toString para parc
    (109) TO_STRING_OWNED -> EXPRESION punto . toOwned para parc
    (191) LEN -> EXPRESION punto . len para parc

    chars           shift and go to state 515
    punto           shift and go to state 514
    abs             shift and go to state 263
    clone           shift and go to state 264
    sqrt            shift and go to state 265
    toString        shift and go to state 266
    toOwned         shift and go to state 267
    len             shift and go to state 268


state 474

    (174) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos . dospuntos FUNCVEC

    dospuntos       shift and go to state 516


state 475

    (173) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos . FUNCVEC
    (184) FUNCVEC -> . new para parc
    (185) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 518
    withcapacity    shift and go to state 519

    FUNCVEC                        shift and go to state 517

state 476

    (203) DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .

    igual           reduce using rule 203 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 203 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    parc            reduce using rule 203 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)
    coma            reduce using rule 203 (DIMENSION_ARR -> cora DIMENSION_ARR puntoycoma EXPRESION corc .)


state 477

    (204) DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .

    igual           reduce using rule 204 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 204 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    parc            reduce using rule 204 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)
    coma            reduce using rule 204 (DIMENSION_ARR -> cora TIPOVAR puntoycoma EXPRESION corc .)


state 478

    (205) DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .

    igual           reduce using rule 205 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 205 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    parc            reduce using rule 205 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)
    coma            reduce using rule 205 (DIMENSION_ARR -> cora id puntoycoma EXPRESION corc .)


state 479

    (233) EXSTRUCT -> id dospuntos EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavec          reduce using rule 233 (EXSTRUCT -> id dospuntos EXPRESION .)
    coma            reduce using rule 233 (EXSTRUCT -> id dospuntos EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 480

    (231) CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .

    llavec          reduce using rule 231 (CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .)
    coma            reduce using rule 231 (CONJEXP_STRUCT -> CONJEXP_STRUCT coma EXSTRUCT .)


state 481

    (207) ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .

    llavec          reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    pub             reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    fn              reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    modulo          reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    struct          reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    let             reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    coma            reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    corc            reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    parc            reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)
    llavea          reduce using rule 207 (ARREGLO -> cora EXPRESION puntoycoma EXPRESION corc .)


state 482

    (180) CONJVECI -> CONJVECI coma ELVEC .

    corc            reduce using rule 180 (CONJVECI -> CONJVECI coma ELVEC .)
    coma            reduce using rule 180 (CONJVECI -> CONJVECI coma ELVEC .)


state 483

    (182) ELVEC -> EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            reduce using rule 182 (ELVEC -> EXPRESION .)
    coma            reduce using rule 182 (ELVEC -> EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 484

    (179) VECI -> vecI cora EXPRESION puntoycoma EXPRESION . corc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    corc            shift and go to state 520
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 485

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 521


state 486

    (99) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma

    mayor           shift and go to state 522


state 487

    (113) PRINT -> println para EXPRESION coma CONJEXP parc .

    puntoycoma      reduce using rule 113 (PRINT -> println para EXPRESION coma CONJEXP parc .)
    coma            reduce using rule 113 (PRINT -> println para EXPRESION coma CONJEXP parc .)


state 488

    (121) ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    puntoycoma      reduce using rule 121 (ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .)
    coma            reduce using rule 121 (ASIGNACION -> id INDEXS punto CONJ_ACCES igual EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 489

    (105) CLONE -> id INDEXS punto clone para parc .

    mas             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    menos           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    div             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    multi           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    mod             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    mayor           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    menor           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    mayorigual      reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    menorigual      reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    igualigual      reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    diferente       reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    and             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    or              reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    as              reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    punto           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    llavec          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    println         reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    let             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    id              reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    if              reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    match           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    continue        reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    return          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    break           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    while           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    i64             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    f64             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    not             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    para            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    fn              reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    for             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    struct          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    modulo          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    entero          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    decimal         reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    cadena          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    true            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    false           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    caracter        reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    loop            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    pub             reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    coma            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    parc            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    llavea          reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    puntoycoma      reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    corc            reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    igual           reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)
    bvertical       reduce using rule 105 (CLONE -> id INDEXS punto clone para parc .)


state 490

    (192) LEN -> id INDEXS punto len para parc .

    mas             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    menos           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    div             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    multi           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    mod             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    mayor           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    menor           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    mayorigual      reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    menorigual      reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    igualigual      reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    diferente       reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    and             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    or              reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    as              reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    punto           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    llavec          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    println         reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    let             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    id              reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    if              reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    match           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    continue        reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    return          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    break           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    while           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    i64             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    f64             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    not             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    para            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    fn              reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    for             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    struct          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    modulo          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    entero          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    decimal         reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    cadena          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    true            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    false           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    caracter        reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    loop            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    pub             reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    coma            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    parc            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    llavea          reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    puntoycoma      reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    corc            reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    igual           reduce using rule 192 (LEN -> id INDEXS punto len para parc .)
    bvertical       reduce using rule 192 (LEN -> id INDEXS punto len para parc .)


state 491

    (186) PUSH -> id punto push para EXPRESION parc .

    puntoycoma      reduce using rule 186 (PUSH -> id punto push para EXPRESION parc .)
    coma            reduce using rule 186 (PUSH -> id punto push para EXPRESION parc .)


state 492

    (187) PUSH -> id punto push para VECI parc .

    puntoycoma      reduce using rule 187 (PUSH -> id punto push para VECI parc .)
    coma            reduce using rule 187 (PUSH -> id punto push para VECI parc .)


state 493

    (188) INSERT -> id punto insert para EXPRESION coma . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 523
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 494

    (189) REMOVE -> id punto remove para EXPRESION parc .

    mas             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    menos           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    div             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    multi           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    mod             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    mayor           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    menor           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    mayorigual      reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    menorigual      reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    igualigual      reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    diferente       reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    and             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    or              reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    as              reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    punto           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    llavec          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    println         reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    let             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    id              reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    if              reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    match           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    continue        reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    return          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    break           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    while           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    i64             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    f64             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    not             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    para            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    fn              reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    for             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    struct          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    modulo          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    entero          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    decimal         reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    cadena          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    true            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    false           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    caracter        reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    loop            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    pub             reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    coma            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    parc            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    llavea          reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    puntoycoma      reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    corc            reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    igual           reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)
    bvertical       reduce using rule 189 (REMOVE -> id punto remove para EXPRESION parc .)


state 495

    (190) CONTAINS -> id punto contains para ampersand EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 524
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 496

    (252) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos . id

    id              shift and go to state 525


state 497

    (250) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP . parc
    (67) CONJEXP -> CONJEXP . coma ELCONJ

    parc            shift and go to state 526
    coma            shift and go to state 370


state 498

    (251) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .

    puntoycoma      reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mas             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menos           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    div             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    multi           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mod             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mayor           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menor           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    mayorigual      reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    menorigual      reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    igualigual      reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    diferente       reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    and             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    or              reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    as              reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    punto           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    llavec          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    println         reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    let             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    id              reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    if              reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    match           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    continue        reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    return          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    break           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    while           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    i64             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    f64             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    not             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    para            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    fn              reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    for             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    struct          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    modulo          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    entero          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    decimal         reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    cadena          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    true            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    false           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    caracter        reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    loop            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    pub             reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    coma            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    parc            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    llavea          reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    corc            reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    igual           reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)
    bvertical       reduce using rule 251 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para parc .)


state 499

    (122) IF -> if EXPRESION . BLOQUE_INST
    (123) IF -> if EXPRESION . BLOQUE_INST else BLOQUE_INST
    (124) IF -> if EXPRESION . BLOQUE_INST else IF
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec

    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179
    llavea          shift and go to state 47

    BLOQUE_INST                    shift and go to state 300

state 500

    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec else . llavea EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec else . llavea INSTRUCCIONES EXPRESION llavec
    (94) IF_TER -> if EXPRESION llavea EXPRESION llavec else . IF_TER
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER

    llavea          shift and go to state 527
    if              shift and go to state 151

    IF_TER                         shift and go to state 528

state 501

    (87) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .
    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec . else IF_TER

    mas             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 87 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec .)
    else            shift and go to state 529


state 502

    (234) ACCESO_STRUCT -> id punto CONJ_ACCES .
    (237) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    llavec          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mas             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menos           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    div             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    multi           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mod             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menor           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    mayorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    menorigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igualigual      reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    diferente       reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    and             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    or              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    as              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    i64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    f64             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    not             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    para            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    entero          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    decimal         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    cadena          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    true            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    false           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    caracter        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    id              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    if              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    match           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    loop            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    println         reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    let             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    continue        reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    return          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    break           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    while           reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    fn              reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    for             reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    struct          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    modulo          reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    coma            reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .)
    igual           shift and go to state 359
    punto           shift and go to state 358

  ! punto           [ reduce using rule 234 (ACCESO_STRUCT -> id punto CONJ_ACCES .) ]


state 503

    (105) CLONE -> id INDEXS punto . clone para parc
    (192) LEN -> id INDEXS punto . len para parc
    (196) ACCESVEC -> id INDEXS punto . CONJ_ACCES
    (121) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    clone           shift and go to state 353
    len             shift and go to state 354
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 530

state 504

    (95) MATCH_TER -> match EXPRESION llavea . BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> match EXPRESION llavea . guionbajo igual mayor EXPRESION coma llavec
    (125) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> match EXPRESION llavea . guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea . BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> match EXPRESION llavea . guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (97) BRAZOS_TER -> . BRAZOS_TER BRAZO_TER
    (98) BRAZOS_TER -> . BRAZO_TER
    (138) BRAZOS -> . BRAZOS BRAZO
    (139) BRAZOS -> . BRAZO
    (99) BRAZO_TER -> . CONJEXPM igual mayor EXPRESION coma
    (140) BRAZO -> . CONJEXPM igual mayor BLOQUE_INST
    (141) BRAZO -> . CONJEXPM igual mayor INSTRUCCION_1LINE coma
    (142) CONJEXPM -> . CONJEXPM bvertical EXPRESION
    (143) CONJEXPM -> . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    guionbajo       shift and go to state 531
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 383
    BRAZOS_TER                     shift and go to state 386
    BRAZOS                         shift and go to state 384
    BRAZO_TER                      shift and go to state 388
    BRAZO                          shift and go to state 387
    CONJEXPM                       shift and go to state 532
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 505

    (125) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual . mayor BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual . mayor INSTRUCCION_1LINE coma llavec

    mayor           shift and go to state 533


state 506

    (140) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma

    mayor           shift and go to state 534


state 507

    (126) MATCH -> match EXPRESION llavea guionbajo igual mayor . BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    llavea          shift and go to state 47
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    println         shift and go to state 94
    let             shift and go to state 28
    id              shift and go to state 547
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 535
    BLOQUE_INST                    shift and go to state 536
    INSTRUCCION_1LINE              shift and go to state 537
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 508

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual . mayor EXPRESION coma llavec

    mayor           shift and go to state 548


state 509

    (140) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (99) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    llavea          shift and go to state 47
    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    println         shift and go to state 94
    let             shift and go to state 28
    id              shift and go to state 547
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    BLOQUE_INST                    shift and go to state 549
    INSTRUCCION_1LINE              shift and go to state 550
    EXPRESION                      shift and go to state 551
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 510

    (142) CONJEXPM -> CONJEXPM bvertical EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    igual           reduce using rule 142 (CONJEXPM -> CONJEXPM bvertical EXPRESION .)
    bvertical       reduce using rule 142 (CONJEXPM -> CONJEXPM bvertical EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 511

    (36) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION . coma EXPRESION parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 552
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 512

    (37) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION . coma EXPRESION parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 553
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 513

    (220) CHARS -> id punto chars . para parc

    para            shift and go to state 554


state 514

    (221) RANGO -> EXPRESION punto punto . EXPRESION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 555
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 515

    (219) CHARS -> EXPRESION punto chars . para parc

    para            shift and go to state 556


state 516

    (174) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos . FUNCVEC
    (184) FUNCVEC -> . new para parc
    (185) FUNCVEC -> . withcapacity para EXPRESION parc

    new             shift and go to state 518
    withcapacity    shift and go to state 519

    FUNCVEC                        shift and go to state 557

state 517

    (173) DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 173 (DECVECTOR -> let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)


state 518

    (184) FUNCVEC -> new . para parc

    para            shift and go to state 558


state 519

    (185) FUNCVEC -> withcapacity . para EXPRESION parc

    para            shift and go to state 559


state 520

    (179) VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .

    llavec          reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    pub             reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    fn              reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    modulo          reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    struct          reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    let             reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    coma            reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    parc            reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    puntoycoma      reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    corc            reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)
    llavea          reduce using rule 179 (VECI -> vecI cora EXPRESION puntoycoma EXPRESION corc .)


state 521

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 535
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 522

    (99) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 551
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 523

    (188) INSERT -> id punto insert para EXPRESION coma EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 560
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 524

    (190) CONTAINS -> id punto contains para ampersand EXPRESION parc .

    mas             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menos           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    div             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    multi           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mod             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mayor           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menor           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    mayorigual      reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    menorigual      reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    igualigual      reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    diferente       reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    and             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    or              reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    as              reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    punto           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    llavec          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    println         reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    let             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    id              reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    if              reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    match           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    continue        reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    return          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    break           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    while           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    i64             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    f64             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    not             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    para            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    fn              reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    for             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    struct          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    modulo          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    entero          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    decimal         reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    cadena          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    true            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    false           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    caracter        reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    loop            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    pub             reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    coma            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    parc            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    llavea          reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    puntoycoma      reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    corc            reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    igual           reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)
    bvertical       reduce using rule 190 (CONTAINS -> id punto contains para ampersand EXPRESION parc .)


state 525

    (252) CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .

    para            reduce using rule 252 (CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .)
    dospuntos       reduce using rule 252 (CONJ_ACCES_MOD -> CONJ_ACCES_MOD dospuntos dospuntos id .)


state 526

    (250) ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .

    puntoycoma      reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mas             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menos           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    div             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    multi           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mod             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mayor           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menor           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    mayorigual      reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    menorigual      reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    igualigual      reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    diferente       reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    and             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    or              reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    as              reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    punto           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    llavec          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    println         reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    let             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    id              reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    if              reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    match           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    continue        reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    return          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    break           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    while           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    i64             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    f64             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    not             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    para            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    fn              reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    for             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    struct          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    modulo          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    entero          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    decimal         reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    cadena          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    true            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    false           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    caracter        reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    loop            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    pub             reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    coma            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    parc            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    llavea          reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    corc            reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    igual           reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)
    bvertical       reduce using rule 250 (ACCESO_MOD -> id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc .)


state 527

    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea . EXPRESION llavec
    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea . INSTRUCCIONES EXPRESION llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 561
    INSTRUCCIONES                  shift and go to state 562
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    INSTRUCCION                    shift and go to state 71
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 528

    (94) IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .

    mas             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menos           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    div             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    multi           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mod             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mayor           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menor           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    mayorigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    menorigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    igualigual      reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    diferente       reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    and             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    or              reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    as              reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    punto           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    llavec          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    println         reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    let             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    id              reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    if              reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    match           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    continue        reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    return          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    break           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    while           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    i64             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    f64             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    not             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    para            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    fn              reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    for             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    struct          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    modulo          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    entero          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    decimal         reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    cadena          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    true            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    false           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    caracter        reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    loop            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    pub             reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    coma            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    parc            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    llavea          reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    puntoycoma      reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    corc            reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    igual           reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)
    bvertical       reduce using rule 94 (IF_TER -> if EXPRESION llavea EXPRESION llavec else IF_TER .)


state 529

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . llavea EXPRESION llavec
    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else . IF_TER
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER

    llavea          shift and go to state 563
    if              shift and go to state 151

    IF_TER                         shift and go to state 564

state 530

    (196) ACCESVEC -> id INDEXS punto CONJ_ACCES .
    (121) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

  ! shift/reduce conflict for punto resolved as shift
    llavec          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mas             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menos           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    div             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    multi           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mod             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menor           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    mayorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    menorigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igualigual      reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    diferente       reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    and             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    or              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    as              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    i64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    f64             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    not             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    para            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    entero          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    decimal         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    cadena          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    true            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    false           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    caracter        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    id              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    if              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    match           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    loop            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    println         reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    let             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    continue        reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    return          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    break           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    while           reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    fn              reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    for             reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    struct          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    modulo          reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    coma            reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .)
    igual           shift and go to state 430
    punto           shift and go to state 358

  ! punto           [ reduce using rule 196 (ACCESVEC -> id INDEXS punto CONJ_ACCES .) ]


state 531

    (96) MATCH_TER -> match EXPRESION llavea guionbajo . igual mayor EXPRESION coma llavec
    (126) MATCH -> match EXPRESION llavea guionbajo . igual mayor BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo . igual mayor INSTRUCCION_1LINE coma llavec

    igual           shift and go to state 565


state 532

    (99) BRAZO_TER -> CONJEXPM . igual mayor EXPRESION coma
    (140) BRAZO -> CONJEXPM . igual mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM . igual mayor INSTRUCCION_1LINE coma
    (142) CONJEXPM -> CONJEXPM . bvertical EXPRESION

    igual           shift and go to state 566
    bvertical       shift and go to state 468


state 533

    (125) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor . BLOQUE_INST llavec
    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    llavea          shift and go to state 47
    println         shift and go to state 94
    let             shift and go to state 28
    id              shift and go to state 569

    BLOQUE_INST                    shift and go to state 567
    INSTRUCCION_1LINE              shift and go to state 568
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546

state 534

    (140) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    llavea          shift and go to state 47
    println         shift and go to state 94
    let             shift and go to state 28
    id              shift and go to state 569

    BLOQUE_INST                    shift and go to state 549
    INSTRUCCION_1LINE              shift and go to state 550
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546

state 535

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION . coma llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 570
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 536

    (126) MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST . llavec

    llavec          shift and go to state 571


state 537

    (128) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE . coma llavec

    coma            shift and go to state 572


state 538

    (129) INSTRUCCION_1LINE -> PRINT .

    coma            reduce using rule 129 (INSTRUCCION_1LINE -> PRINT .)


state 539

    (130) INSTRUCCION_1LINE -> DECLARACION .

    coma            reduce using rule 130 (INSTRUCCION_1LINE -> DECLARACION .)


state 540

    (131) INSTRUCCION_1LINE -> ASIGNACION .

    coma            reduce using rule 131 (INSTRUCCION_1LINE -> ASIGNACION .)


state 541

    (132) INSTRUCCION_1LINE -> PUSH .

    coma            reduce using rule 132 (INSTRUCCION_1LINE -> PUSH .)


state 542

    (133) INSTRUCCION_1LINE -> INSERT .

    coma            reduce using rule 133 (INSTRUCCION_1LINE -> INSERT .)


state 543

    (134) INSTRUCCION_1LINE -> DECARREGLO .

    coma            reduce using rule 134 (INSTRUCCION_1LINE -> DECARREGLO .)


state 544

    (135) INSTRUCCION_1LINE -> DECVECTOR .

    coma            reduce using rule 135 (INSTRUCCION_1LINE -> DECVECTOR .)


state 545

    (136) INSTRUCCION_1LINE -> DECSTRUCT .

    coma            reduce using rule 136 (INSTRUCCION_1LINE -> DECSTRUCT .)


state 546

    (137) INSTRUCCION_1LINE -> MOD_VAR_STRUCT .

    coma            reduce using rule 137 (INSTRUCCION_1LINE -> MOD_VAR_STRUCT .)


state 547

    (119) ASIGNACION -> id . igual EXPRESION
    (120) ASIGNACION -> id . INDEXS igual EXPRESION
    (121) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> id . punto push para EXPRESION parc
    (187) PUSH -> id . punto push para VECI parc
    (188) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (78) ID -> id .
    (102) ABS -> id . punto abs para parc
    (104) CLONE -> id . punto clone para parc
    (105) CLONE -> id . INDEXS punto clone para parc
    (107) SQRT -> id . punto sqrt para parc
    (110) TO_STRING_OWNED -> id . punto toString para parc
    (111) TO_STRING_OWNED -> id . punto toOwned para parc
    (167) CALL -> id . para CONJEXP parc
    (168) CALL -> id . para parc
    (189) REMOVE -> id . punto remove para EXPRESION parc
    (190) CONTAINS -> id . punto contains para ampersand EXPRESION parc
    (192) LEN -> id . INDEXS punto len para parc
    (193) LEN -> id . punto len para parc
    (194) CAPACITY -> id . punto capacity para parc
    (195) ACCESVEC -> id . INDEXS
    (196) ACCESVEC -> id . INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> id . punto CONJ_ACCES
    (250) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> id . dospuntos dospuntos CONJ_ACCES_MOD para parc
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

  ! shift/reduce conflict for punto resolved as shift
    igual           shift and go to state 193
    punto           shift and go to state 195
    coma            reduce using rule 78 (ID -> id .)
    mas             reduce using rule 78 (ID -> id .)
    menos           reduce using rule 78 (ID -> id .)
    div             reduce using rule 78 (ID -> id .)
    multi           reduce using rule 78 (ID -> id .)
    mod             reduce using rule 78 (ID -> id .)
    mayor           reduce using rule 78 (ID -> id .)
    menor           reduce using rule 78 (ID -> id .)
    mayorigual      reduce using rule 78 (ID -> id .)
    menorigual      reduce using rule 78 (ID -> id .)
    igualigual      reduce using rule 78 (ID -> id .)
    diferente       reduce using rule 78 (ID -> id .)
    and             reduce using rule 78 (ID -> id .)
    or              reduce using rule 78 (ID -> id .)
    as              reduce using rule 78 (ID -> id .)
    para            shift and go to state 196
    dospuntos       shift and go to state 197
    cora            shift and go to state 198

  ! punto           [ reduce using rule 78 (ID -> id .) ]

    INDEXS                         shift and go to state 194

state 548

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor . EXPRESION coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 573
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 549

    (140) BRAZO -> CONJEXPM igual mayor BLOQUE_INST .

    guionbajo       reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    i64             reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    f64             reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    menos           reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    not             reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    para            reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    entero          reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    decimal         reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    cadena          reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    true            reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    false           reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    caracter        reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    id              reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    if              reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    match           reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)
    loop            reduce using rule 140 (BRAZO -> CONJEXPM igual mayor BLOQUE_INST .)


state 550

    (141) BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE . coma

    coma            shift and go to state 574


state 551

    (99) BRAZO_TER -> CONJEXPM igual mayor EXPRESION . coma
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 575
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 552

    (36) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 576
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 553

    (37) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 577
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 554

    (220) CHARS -> id punto chars para . parc

    parc            shift and go to state 578


state 555

    (221) RANGO -> EXPRESION punto punto EXPRESION .
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    llavea          reduce using rule 221 (RANGO -> EXPRESION punto punto EXPRESION .)
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 556

    (219) CHARS -> EXPRESION punto chars para . parc

    parc            shift and go to state 579


state 557

    (174) DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .

    llavec          reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    pub             reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    fn              reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    modulo          reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    struct          reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    let             reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    puntoycoma      reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)
    coma            reduce using rule 174 (DECVECTOR -> let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC .)


state 558

    (184) FUNCVEC -> new para . parc

    parc            shift and go to state 580


state 559

    (185) FUNCVEC -> withcapacity para . EXPRESION parc
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 190
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131

    EXPRESION                      shift and go to state 581
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148

state 560

    (188) INSERT -> id punto insert para EXPRESION coma EXPRESION parc .

    puntoycoma      reduce using rule 188 (INSERT -> id punto insert para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 188 (INSERT -> id punto insert para EXPRESION coma EXPRESION parc .)


state 561

    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION . llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc
    (18) INSTRUCCION -> EXPRESION .

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 582
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 562

    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES . EXPRESION llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 583
    INSTRUCCION                    shift and go to state 158
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 563

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea . INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea . EXPRESION llavec
    (7) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (8) INSTRUCCIONES -> . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 584
    INSTRUCCIONES                  shift and go to state 585
    INSTRUCCION                    shift and go to state 71
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 564

    (93) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .

    mas             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menos           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    div             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    multi           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mod             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mayor           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menor           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    mayorigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    menorigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    igualigual      reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    diferente       reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    and             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    or              reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    as              reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    punto           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    llavec          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    println         reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    let             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    id              reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    if              reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    match           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    continue        reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    return          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    break           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    while           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    i64             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    f64             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    not             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    para            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    fn              reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    for             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    struct          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    modulo          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    entero          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    decimal         reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    cadena          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    true            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    false           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    caracter        reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    loop            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    pub             reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    coma            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    parc            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    llavea          reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    puntoycoma      reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    corc            reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    igual           reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)
    bvertical       reduce using rule 93 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER .)


state 565

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual . mayor EXPRESION coma llavec
    (126) MATCH -> match EXPRESION llavea guionbajo igual . mayor BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo igual . mayor INSTRUCCION_1LINE coma llavec

    mayor           shift and go to state 586


state 566

    (99) BRAZO_TER -> CONJEXPM igual . mayor EXPRESION coma
    (140) BRAZO -> CONJEXPM igual . mayor BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual . mayor INSTRUCCION_1LINE coma

    mayor           shift and go to state 587


state 567

    (125) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST . llavec

    llavec          shift and go to state 588


state 568

    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE . coma llavec

    coma            shift and go to state 589


state 569

    (119) ASIGNACION -> id . igual EXPRESION
    (120) ASIGNACION -> id . INDEXS igual EXPRESION
    (121) ASIGNACION -> id . INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> id . punto push para EXPRESION parc
    (187) PUSH -> id . punto push para VECI parc
    (188) INSERT -> id . punto insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id . punto CONJ_ACCES igual EXPRESION
    (197) INDEXS -> . INDEXS cora EXPRESION corc
    (198) INDEXS -> . cora EXPRESION corc

    igual           shift and go to state 193
    punto           shift and go to state 591
    cora            shift and go to state 198

    INDEXS                         shift and go to state 590

state 570

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma . llavec

    llavec          shift and go to state 592


state 571

    (126) MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .

    llavec          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    println         reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    let             reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    id              reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    if              reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    match           reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    continue        reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    return          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    break           reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    while           reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    i64             reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    f64             reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    menos           reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    not             reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    para            reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    fn              reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    for             reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    struct          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    modulo          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    entero          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    decimal         reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    cadena          reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    true            reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    false           reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    caracter        reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)
    loop            reduce using rule 126 (MATCH -> match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec .)


state 572

    (128) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma . llavec

    llavec          shift and go to state 593


state 573

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION . coma llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    coma            shift and go to state 594
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 574

    (141) BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .

    guionbajo       reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    i64             reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    f64             reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    menos           reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    not             reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    para            reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    entero          reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    decimal         reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    cadena          reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    true            reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    false           reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    caracter        reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    id              reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    if              reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    match           reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)
    loop            reduce using rule 141 (BRAZO -> CONJEXPM igual mayor INSTRUCCION_1LINE coma .)


state 575

    (99) BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .

    guionbajo       reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    i64             reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    f64             reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    menos           reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    not             reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    para            reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    entero          reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    decimal         reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    cadena          reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    true            reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    false           reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    caracter        reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    id              reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    if              reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    match           reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)
    loop            reduce using rule 99 (BRAZO_TER -> CONJEXPM igual mayor EXPRESION coma .)


state 576

    (36) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 595
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 577

    (37) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 596
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 578

    (220) CHARS -> id punto chars para parc .

    llavea          reduce using rule 220 (CHARS -> id punto chars para parc .)


state 579

    (219) CHARS -> EXPRESION punto chars para parc .

    llavea          reduce using rule 219 (CHARS -> EXPRESION punto chars para parc .)


state 580

    (184) FUNCVEC -> new para parc .

    llavec          reduce using rule 184 (FUNCVEC -> new para parc .)
    pub             reduce using rule 184 (FUNCVEC -> new para parc .)
    fn              reduce using rule 184 (FUNCVEC -> new para parc .)
    modulo          reduce using rule 184 (FUNCVEC -> new para parc .)
    struct          reduce using rule 184 (FUNCVEC -> new para parc .)
    let             reduce using rule 184 (FUNCVEC -> new para parc .)
    puntoycoma      reduce using rule 184 (FUNCVEC -> new para parc .)
    coma            reduce using rule 184 (FUNCVEC -> new para parc .)


state 581

    (185) FUNCVEC -> withcapacity para EXPRESION . parc
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

    parc            shift and go to state 597
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    as              shift and go to state 178
    punto           shift and go to state 179


state 582

    (90) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .

    mas             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menos           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    div             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    multi           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mod             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mayor           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menor           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    mayorigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    menorigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    igualigual      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    diferente       reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    and             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    or              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    as              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    punto           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    llavec          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    println         reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    let             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    id              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    if              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    match           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    continue        reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    return          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    break           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    while           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    i64             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    f64             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    not             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    para            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    fn              reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    for             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    struct          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    modulo          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    entero          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    decimal         reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    cadena          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    true            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    false           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    caracter        reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    loop            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    pub             reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    coma            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    parc            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    llavea          reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    corc            reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    igual           reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)
    bvertical       reduce using rule 90 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec .)


state 583

    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION . llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 598
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 584

    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION . llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 599
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 585

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES . EXPRESION llavec
    (7) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (9) INSTRUCCION -> . PRINT puntoycoma
    (10) INSTRUCCION -> . DECLARACION puntoycoma
    (11) INSTRUCCION -> . ASIGNACION puntoycoma
    (12) INSTRUCCION -> . IF
    (13) INSTRUCCION -> . MATCH
    (14) INSTRUCCION -> . CONTINUE puntoycoma
    (15) INSTRUCCION -> . RETURN puntoycoma
    (16) INSTRUCCION -> . BREAK puntoycoma
    (17) INSTRUCCION -> . WHILE
    (18) INSTRUCCION -> . EXPRESION
    (19) INSTRUCCION -> . CALL puntoycoma
    (20) INSTRUCCION -> . FUNCION
    (21) INSTRUCCION -> . DECVECTOR puntoycoma
    (22) INSTRUCCION -> . PUSH puntoycoma
    (23) INSTRUCCION -> . INSERT puntoycoma
    (24) INSTRUCCION -> . DECARREGLO puntoycoma
    (25) INSTRUCCION -> . FORIN
    (26) INSTRUCCION -> . STRUCT
    (27) INSTRUCCION -> . DECSTRUCT puntoycoma
    (28) INSTRUCCION -> . MOD_VAR_STRUCT puntoycoma
    (29) INSTRUCCION -> . MODULO
    (30) INSTRUCCION -> . ACCESO_MOD puntoycoma
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (122) IF -> . if EXPRESION BLOQUE_INST
    (123) IF -> . if EXPRESION BLOQUE_INST else BLOQUE_INST
    (124) IF -> . if EXPRESION BLOQUE_INST else IF
    (125) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec
    (126) MATCH -> . match EXPRESION llavea guionbajo igual mayor BLOQUE_INST llavec
    (127) MATCH -> . match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (128) MATCH -> . match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec
    (147) CONTINUE -> . continue
    (148) RETURN -> . return EXPRESION
    (149) RETURN -> . return
    (145) BREAK -> . break
    (146) BREAK -> . break EXPRESION
    (150) WHILE -> . while EXPRESION BLOQUE_INST
    (152) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor TIPOVAR BLOQUE_INST
    (153) FUNCION -> . fn id para LISTAPARAMETROS parc BLOQUE_INST
    (154) FUNCION -> . fn id para parc menos mayor TIPOVAR BLOQUE_INST
    (155) FUNCION -> . fn id para parc BLOQUE_INST
    (156) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor id BLOQUE_INST
    (157) FUNCION -> . fn id para LISTAPARAMETROS parc menos mayor VEC BLOQUE_INST
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (213) FORIN -> . for id in ARRFOR BLOQUE_INST
    (222) STRUCT -> . struct id llavea CONTENT_STRUCT llavec
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION
    (238) MODULO -> . modulo id llavea CONTENT_MOD llavec

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 376
    match           shift and go to state 382
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 96
    continue        shift and go to state 100
    return          shift and go to state 101
    break           shift and go to state 102
    while           shift and go to state 103
    fn              shift and go to state 8
    for             shift and go to state 124
    struct          shift and go to state 9
    modulo          shift and go to state 7

    EXPRESION                      shift and go to state 600
    INSTRUCCION                    shift and go to state 158
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 379
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 380
    PRINT                          shift and go to state 72
    DECLARACION                    shift and go to state 73
    ASIGNACION                     shift and go to state 74
    IF                             shift and go to state 75
    MATCH                          shift and go to state 76
    CONTINUE                       shift and go to state 77
    RETURN                         shift and go to state 78
    BREAK                          shift and go to state 79
    WHILE                          shift and go to state 80
    FUNCION                        shift and go to state 83
    DECVECTOR                      shift and go to state 84
    PUSH                           shift and go to state 85
    INSERT                         shift and go to state 86
    DECARREGLO                     shift and go to state 87
    FORIN                          shift and go to state 88
    STRUCT                         shift and go to state 89
    DECSTRUCT                      shift and go to state 90
    MOD_VAR_STRUCT                 shift and go to state 91
    MODULO                         shift and go to state 92

state 586

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor . EXPRESION coma llavec
    (126) MATCH -> match EXPRESION llavea guionbajo igual mayor . BLOQUE_INST llavec
    (128) MATCH -> match EXPRESION llavea guionbajo igual mayor . INSTRUCCION_1LINE coma llavec
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    llavea          shift and go to state 47
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 28

    EXPRESION                      shift and go to state 535
    BLOQUE_INST                    shift and go to state 536
    INSTRUCCION_1LINE              shift and go to state 537
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546

state 587

    (99) BRAZO_TER -> CONJEXPM igual mayor . EXPRESION coma
    (140) BRAZO -> CONJEXPM igual mayor . BLOQUE_INST
    (141) BRAZO -> CONJEXPM igual mayor . INSTRUCCION_1LINE coma
    (31) EXPRESION -> . EXPRESION mas EXPRESION
    (32) EXPRESION -> . EXPRESION menos EXPRESION
    (33) EXPRESION -> . EXPRESION div EXPRESION
    (34) EXPRESION -> . EXPRESION multi EXPRESION
    (35) EXPRESION -> . EXPRESION mod EXPRESION
    (36) EXPRESION -> . i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc
    (37) EXPRESION -> . f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc
    (38) EXPRESION -> . menos EXPRESION
    (39) EXPRESION -> . EXPRESION mayor EXPRESION
    (40) EXPRESION -> . EXPRESION menor EXPRESION
    (41) EXPRESION -> . EXPRESION mayorigual EXPRESION
    (42) EXPRESION -> . EXPRESION menorigual EXPRESION
    (43) EXPRESION -> . EXPRESION igualigual EXPRESION
    (44) EXPRESION -> . EXPRESION diferente EXPRESION
    (45) EXPRESION -> . EXPRESION and EXPRESION
    (46) EXPRESION -> . EXPRESION or EXPRESION
    (47) EXPRESION -> . not EXPRESION
    (48) EXPRESION -> . para EXPRESION parc
    (49) EXPRESION -> . TIPODATO
    (50) EXPRESION -> . ID
    (51) EXPRESION -> . IF_TER
    (52) EXPRESION -> . MATCH_TER
    (53) EXPRESION -> . LOOP
    (54) EXPRESION -> . CAST_AS
    (55) EXPRESION -> . ABS
    (56) EXPRESION -> . CLONE
    (57) EXPRESION -> . SQRT
    (58) EXPRESION -> . TO_STRING_OWNED
    (59) EXPRESION -> . CALL
    (60) EXPRESION -> . REMOVE
    (61) EXPRESION -> . CONTAINS
    (62) EXPRESION -> . LEN
    (63) EXPRESION -> . CAPACITY
    (64) EXPRESION -> . ACCESVEC
    (65) EXPRESION -> . ACCESO_STRUCT
    (66) EXPRESION -> . ACCESO_MOD
    (151) BLOQUE_INST -> . llavea INSTRUCCIONES llavec
    (129) INSTRUCCION_1LINE -> . PRINT
    (130) INSTRUCCION_1LINE -> . DECLARACION
    (131) INSTRUCCION_1LINE -> . ASIGNACION
    (132) INSTRUCCION_1LINE -> . PUSH
    (133) INSTRUCCION_1LINE -> . INSERT
    (134) INSTRUCCION_1LINE -> . DECARREGLO
    (135) INSTRUCCION_1LINE -> . DECVECTOR
    (136) INSTRUCCION_1LINE -> . DECSTRUCT
    (137) INSTRUCCION_1LINE -> . MOD_VAR_STRUCT
    (73) TIPODATO -> . entero
    (74) TIPODATO -> . decimal
    (75) TIPODATO -> . cadena
    (76) TIPODATO -> . true
    (77) TIPODATO -> . false
    (79) TIPODATO -> . caracter
    (78) ID -> . id
    (87) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec
    (88) IF_TER -> . if EXPRESION llavea EXPRESION llavec
    (89) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (90) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea EXPRESION llavec
    (91) IF_TER -> . if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec
    (92) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec
    (93) IF_TER -> . if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else IF_TER
    (94) IF_TER -> . if EXPRESION llavea EXPRESION llavec else IF_TER
    (95) MATCH_TER -> . match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec
    (96) MATCH_TER -> . match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec
    (144) LOOP -> . loop BLOQUE_INST
    (100) CAST_AS -> . EXPRESION as TIPOVAR
    (101) ABS -> . EXPRESION punto abs para parc
    (102) ABS -> . id punto abs para parc
    (103) CLONE -> . EXPRESION punto clone para parc
    (104) CLONE -> . id punto clone para parc
    (105) CLONE -> . id INDEXS punto clone para parc
    (106) SQRT -> . EXPRESION punto sqrt para parc
    (107) SQRT -> . id punto sqrt para parc
    (108) TO_STRING_OWNED -> . EXPRESION punto toString para parc
    (109) TO_STRING_OWNED -> . EXPRESION punto toOwned para parc
    (110) TO_STRING_OWNED -> . id punto toString para parc
    (111) TO_STRING_OWNED -> . id punto toOwned para parc
    (167) CALL -> . id para CONJEXP parc
    (168) CALL -> . id para parc
    (189) REMOVE -> . id punto remove para EXPRESION parc
    (190) CONTAINS -> . id punto contains para ampersand EXPRESION parc
    (191) LEN -> . EXPRESION punto len para parc
    (192) LEN -> . id INDEXS punto len para parc
    (193) LEN -> . id punto len para parc
    (194) CAPACITY -> . id punto capacity para parc
    (195) ACCESVEC -> . id INDEXS
    (196) ACCESVEC -> . id INDEXS punto CONJ_ACCES
    (234) ACCESO_STRUCT -> . id punto CONJ_ACCES
    (250) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para CONJEXP parc
    (251) ACCESO_MOD -> . id dospuntos dospuntos CONJ_ACCES_MOD para parc
    (112) PRINT -> . println para EXPRESION parc
    (113) PRINT -> . println para EXPRESION coma CONJEXP parc
    (114) DECLARACION -> . let mut id dospuntos TIPOVAR igual EXPRESION
    (115) DECLARACION -> . let mut id igual EXPRESION
    (116) DECLARACION -> . let id dospuntos TIPOVAR igual EXPRESION
    (117) DECLARACION -> . let id igual EXPRESION
    (118) DECLARACION -> . let mut id dospuntos TIPOVAR
    (119) ASIGNACION -> . id igual EXPRESION
    (120) ASIGNACION -> . id INDEXS igual EXPRESION
    (121) ASIGNACION -> . id INDEXS punto CONJ_ACCES igual EXPRESION
    (186) PUSH -> . id punto push para EXPRESION parc
    (187) PUSH -> . id punto push para VECI parc
    (188) INSERT -> . id punto insert para EXPRESION coma EXPRESION parc
    (199) DECARREGLO -> . let id dospuntos DIMENSION_ARR igual ARREGLO
    (200) DECARREGLO -> . let mut id dospuntos DIMENSION_ARR igual ARREGLO
    (201) DECARREGLO -> . let id igual ARREGLO
    (202) DECARREGLO -> . let mut id igual ARREGLO
    (169) DECVECTOR -> . let id igual VECI
    (170) DECVECTOR -> . let mut id igual VECI
    (171) DECVECTOR -> . let id dospuntos VEC igual VECI
    (172) DECVECTOR -> . let mut id dospuntos VEC igual VECI
    (173) DECVECTOR -> . let id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (174) DECVECTOR -> . let mut id dospuntos VEC igual Vec dospuntos dospuntos FUNCVEC
    (226) DECSTRUCT -> . let id igual STRUCT_EXP
    (227) DECSTRUCT -> . let mut id igual STRUCT_EXP
    (228) DECSTRUCT -> . let id dospuntos id igual STRUCT_EXP
    (229) DECSTRUCT -> . let mut id dospuntos id igual STRUCT_EXP
    (237) MOD_VAR_STRUCT -> . id punto CONJ_ACCES igual EXPRESION

    i64             shift and go to state 105
    f64             shift and go to state 106
    menos           shift and go to state 104
    not             shift and go to state 107
    para            shift and go to state 95
    llavea          shift and go to state 47
    entero          shift and go to state 125
    decimal         shift and go to state 126
    cadena          shift and go to state 127
    true            shift and go to state 128
    false           shift and go to state 129
    caracter        shift and go to state 130
    id              shift and go to state 381
    if              shift and go to state 151
    match           shift and go to state 152
    loop            shift and go to state 131
    println         shift and go to state 94
    let             shift and go to state 28

    EXPRESION                      shift and go to state 551
    BLOQUE_INST                    shift and go to state 549
    INSTRUCCION_1LINE              shift and go to state 550
    TIPODATO                       shift and go to state 108
    ID                             shift and go to state 109
    IF_TER                         shift and go to state 110
    MATCH_TER                      shift and go to state 111
    LOOP                           shift and go to state 112
    CAST_AS                        shift and go to state 113
    ABS                            shift and go to state 114
    CLONE                          shift and go to state 115
    SQRT                           shift and go to state 116
    TO_STRING_OWNED                shift and go to state 117
    CALL                           shift and go to state 147
    REMOVE                         shift and go to state 118
    CONTAINS                       shift and go to state 119
    LEN                            shift and go to state 120
    CAPACITY                       shift and go to state 121
    ACCESVEC                       shift and go to state 122
    ACCESO_STRUCT                  shift and go to state 123
    ACCESO_MOD                     shift and go to state 148
    PRINT                          shift and go to state 538
    DECLARACION                    shift and go to state 539
    ASIGNACION                     shift and go to state 540
    PUSH                           shift and go to state 541
    INSERT                         shift and go to state 542
    DECARREGLO                     shift and go to state 543
    DECVECTOR                      shift and go to state 544
    DECSTRUCT                      shift and go to state 545
    MOD_VAR_STRUCT                 shift and go to state 546

state 588

    (125) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .

    llavec          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    println         reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    let             reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    id              reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    if              reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    match           reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    continue        reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    return          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    break           reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    while           reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    i64             reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    f64             reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    menos           reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    not             reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    para            reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    fn              reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    for             reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    struct          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    modulo          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    entero          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    decimal         reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    cadena          reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    true            reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    false           reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    caracter        reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)
    loop            reduce using rule 125 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor BLOQUE_INST llavec .)


state 589

    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma . llavec

    llavec          shift and go to state 601


state 590

    (120) ASIGNACION -> id INDEXS . igual EXPRESION
    (121) ASIGNACION -> id INDEXS . punto CONJ_ACCES igual EXPRESION
    (197) INDEXS -> INDEXS . cora EXPRESION corc

    igual           shift and go to state 275
    punto           shift and go to state 602
    cora            shift and go to state 277


state 591

    (186) PUSH -> id punto . push para EXPRESION parc
    (187) PUSH -> id punto . push para VECI parc
    (188) INSERT -> id punto . insert para EXPRESION coma EXPRESION parc
    (237) MOD_VAR_STRUCT -> id punto . CONJ_ACCES igual EXPRESION
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    push            shift and go to state 279
    insert          shift and go to state 280
    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 603

state 592

    (96) MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .

    mas             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menos           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    div             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    multi           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mod             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mayor           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menor           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    mayorigual      reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    menorigual      reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    igualigual      reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    diferente       reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    and             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    or              reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    as              reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    punto           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    llavec          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    println         reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    let             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    id              reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    if              reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    match           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    continue        reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    return          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    break           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    while           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    i64             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    f64             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    not             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    para            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    fn              reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    for             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    struct          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    modulo          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    entero          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    decimal         reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    cadena          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    true            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    false           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    caracter        reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    loop            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    pub             reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    coma            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    parc            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    llavea          reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    puntoycoma      reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    corc            reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    igual           reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)
    bvertical       reduce using rule 96 (MATCH_TER -> match EXPRESION llavea guionbajo igual mayor EXPRESION coma llavec .)


state 593

    (128) MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .

    llavec          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    println         reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    let             reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    id              reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    if              reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    match           reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    continue        reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    return          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    break           reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    while           reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    i64             reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    f64             reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    menos           reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    not             reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    para            reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    fn              reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    for             reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    struct          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    modulo          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    entero          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    decimal         reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    cadena          reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    true            reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    false           reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    caracter        reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    loop            reduce using rule 128 (MATCH -> match EXPRESION llavea guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)


state 594

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma . llavec

    llavec          shift and go to state 604


state 595

    (36) EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .

    mas             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menos           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    div             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    multi           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mod             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mayor           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menor           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    mayorigual      reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    menorigual      reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    igualigual      reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    diferente       reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    and             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    or              reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    as              reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    punto           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    llavec          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    println         reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    let             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    id              reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    if              reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    match           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    continue        reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    return          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    break           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    while           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    i64             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    f64             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    not             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    para            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    fn              reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    for             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    struct          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    modulo          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    entero          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    decimal         reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    cadena          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    true            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    false           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    caracter        reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    loop            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    pub             reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    parc            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    llavea          reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    puntoycoma      reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    corc            reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    igual           reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)
    bvertical       reduce using rule 36 (EXPRESION -> i64 dospuntos dospuntos pow para EXPRESION coma EXPRESION parc .)


state 596

    (37) EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .

    mas             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menos           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    div             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    multi           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mod             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mayor           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menor           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    mayorigual      reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    menorigual      reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    igualigual      reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    diferente       reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    and             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    or              reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    as              reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    punto           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    llavec          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    println         reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    let             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    id              reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    if              reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    match           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    continue        reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    return          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    break           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    while           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    i64             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    f64             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    not             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    para            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    fn              reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    for             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    struct          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    modulo          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    entero          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    decimal         reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    cadena          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    true            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    false           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    caracter        reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    loop            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    pub             reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    coma            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    parc            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    llavea          reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    puntoycoma      reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    corc            reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    igual           reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)
    bvertical       reduce using rule 37 (EXPRESION -> f64 dospuntos dospuntos powf para EXPRESION coma EXPRESION parc .)


state 597

    (185) FUNCVEC -> withcapacity para EXPRESION parc .

    llavec          reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    pub             reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    fn              reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    modulo          reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    struct          reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    let             reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    puntoycoma      reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)
    coma            reduce using rule 185 (FUNCVEC -> withcapacity para EXPRESION parc .)


state 598

    (91) IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .

    mas             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 91 (IF_TER -> if EXPRESION llavea EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)


state 599

    (92) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .

    mas             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menos           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    div             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    multi           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mod             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mayor           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menor           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    mayorigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    menorigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    igualigual      reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    diferente       reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    and             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    or              reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    as              reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    punto           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    llavec          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    println         reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    let             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    id              reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    if              reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    match           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    continue        reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    return          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    break           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    while           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    i64             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    f64             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    not             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    para            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    fn              reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    for             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    struct          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    modulo          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    entero          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    decimal         reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    cadena          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    true            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    false           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    caracter        reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    loop            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    pub             reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    coma            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    parc            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    llavea          reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    puntoycoma      reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    corc            reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    igual           reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)
    bvertical       reduce using rule 92 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea EXPRESION llavec .)


state 600

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION . llavec
    (31) EXPRESION -> EXPRESION . mas EXPRESION
    (32) EXPRESION -> EXPRESION . menos EXPRESION
    (33) EXPRESION -> EXPRESION . div EXPRESION
    (34) EXPRESION -> EXPRESION . multi EXPRESION
    (35) EXPRESION -> EXPRESION . mod EXPRESION
    (39) EXPRESION -> EXPRESION . mayor EXPRESION
    (40) EXPRESION -> EXPRESION . menor EXPRESION
    (41) EXPRESION -> EXPRESION . mayorigual EXPRESION
    (42) EXPRESION -> EXPRESION . menorigual EXPRESION
    (43) EXPRESION -> EXPRESION . igualigual EXPRESION
    (44) EXPRESION -> EXPRESION . diferente EXPRESION
    (45) EXPRESION -> EXPRESION . and EXPRESION
    (46) EXPRESION -> EXPRESION . or EXPRESION
    (18) INSTRUCCION -> EXPRESION .
    (100) CAST_AS -> EXPRESION . as TIPOVAR
    (101) ABS -> EXPRESION . punto abs para parc
    (103) CLONE -> EXPRESION . punto clone para parc
    (106) SQRT -> EXPRESION . punto sqrt para parc
    (108) TO_STRING_OWNED -> EXPRESION . punto toString para parc
    (109) TO_STRING_OWNED -> EXPRESION . punto toOwned para parc
    (191) LEN -> EXPRESION . punto len para parc

  ! shift/reduce conflict for menos resolved as shift
    llavec          shift and go to state 605
    mas             shift and go to state 165
    menos           shift and go to state 166
    div             shift and go to state 167
    multi           shift and go to state 168
    mod             shift and go to state 169
    mayor           shift and go to state 170
    menor           shift and go to state 171
    mayorigual      shift and go to state 172
    menorigual      shift and go to state 173
    igualigual      shift and go to state 174
    diferente       shift and go to state 175
    and             shift and go to state 176
    or              shift and go to state 177
    i64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    f64             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    not             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    para            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    entero          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    decimal         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    cadena          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    true            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    false           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    caracter        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    id              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    if              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    match           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    loop            reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    println         reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    let             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    continue        reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    return          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    break           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    while           reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    fn              reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    for             reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    struct          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    modulo          reduce using rule 18 (INSTRUCCION -> EXPRESION .)
    as              shift and go to state 178
    punto           shift and go to state 179

  ! menos           [ reduce using rule 18 (INSTRUCCION -> EXPRESION .) ]


state 601

    (127) MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .

    llavec          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    println         reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    let             reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    id              reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    if              reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    match           reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    continue        reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    return          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    break           reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    while           reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    i64             reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    f64             reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    menos           reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    not             reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    para            reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    fn              reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    for             reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    struct          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    modulo          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    entero          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    decimal         reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    cadena          reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    true            reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    false           reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    caracter        reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)
    loop            reduce using rule 127 (MATCH -> match EXPRESION llavea BRAZOS guionbajo igual mayor INSTRUCCION_1LINE coma llavec .)


state 602

    (121) ASIGNACION -> id INDEXS punto . CONJ_ACCES igual EXPRESION
    (235) CONJ_ACCES -> . CONJ_ACCES punto id
    (236) CONJ_ACCES -> . id

    id              shift and go to state 278

    CONJ_ACCES                     shift and go to state 606

state 603

    (237) MOD_VAR_STRUCT -> id punto CONJ_ACCES . igual EXPRESION
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

    igual           shift and go to state 359
    punto           shift and go to state 358


state 604

    (95) MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .

    mas             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menos           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    div             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    multi           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mod             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mayor           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menor           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    mayorigual      reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    menorigual      reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    igualigual      reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    diferente       reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    and             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    or              reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    as              reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    punto           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    llavec          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    println         reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    let             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    id              reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    if              reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    match           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    continue        reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    return          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    break           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    while           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    i64             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    f64             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    not             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    para            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    fn              reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    for             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    struct          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    modulo          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    entero          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    decimal         reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    cadena          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    true            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    false           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    caracter        reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    loop            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    pub             reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    coma            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    parc            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    llavea          reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    puntoycoma      reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    corc            reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    igual           reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)
    bvertical       reduce using rule 95 (MATCH_TER -> match EXPRESION llavea BRAZOS_TER guionbajo igual mayor EXPRESION coma llavec .)


state 605

    (89) IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .

    mas             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menos           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    div             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    multi           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mod             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayor           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menor           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    mayorigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    menorigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igualigual      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    diferente       reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    and             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    or              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    as              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    punto           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavec          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    println         reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    let             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    id              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    if              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    match           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    continue        reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    return          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    break           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    while           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    i64             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    f64             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    not             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    para            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    fn              reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    for             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    struct          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    modulo          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    entero          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    decimal         reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    cadena          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    true            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    false           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    caracter        reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    loop            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    pub             reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    coma            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    parc            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    llavea          reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    puntoycoma      reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    corc            reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    igual           reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)
    bvertical       reduce using rule 89 (IF_TER -> if EXPRESION llavea INSTRUCCIONES EXPRESION llavec else llavea INSTRUCCIONES EXPRESION llavec .)


state 606

    (121) ASIGNACION -> id INDEXS punto CONJ_ACCES . igual EXPRESION
    (235) CONJ_ACCES -> CONJ_ACCES . punto id

    igual           shift and go to state 430
    punto           shift and go to state 358

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for menos in state 81 resolved as shift
WARNING: shift/reduce conflict for punto in state 97 resolved as shift
WARNING: shift/reduce conflict for para in state 97 resolved as shift
WARNING: shift/reduce conflict for punto in state 142 resolved as shift
WARNING: shift/reduce conflict for punto in state 190 resolved as shift
WARNING: shift/reduce conflict for para in state 190 resolved as shift
WARNING: shift/reduce conflict for punto in state 194 resolved as shift
WARNING: shift/reduce conflict for punto in state 229 resolved as shift
WARNING: shift/reduce conflict for punto in state 235 resolved as shift
WARNING: shift/reduce conflict for punto in state 281 resolved as shift
WARNING: shift/reduce conflict for punto in state 323 resolved as shift
WARNING: shift/reduce conflict for punto in state 352 resolved as shift
WARNING: shift/reduce conflict for llavec in state 377 resolved as shift
WARNING: shift/reduce conflict for menos in state 377 resolved as shift
WARNING: shift/reduce conflict for punto in state 381 resolved as shift
WARNING: shift/reduce conflict for para in state 381 resolved as shift
WARNING: shift/reduce conflict for punto in state 392 resolved as shift
WARNING: shift/reduce conflict for punto in state 412 resolved as shift
WARNING: shift/reduce conflict for llavec in state 457 resolved as shift
WARNING: shift/reduce conflict for menos in state 457 resolved as shift
WARNING: shift/reduce conflict for punto in state 459 resolved as shift
WARNING: shift/reduce conflict for punto in state 502 resolved as shift
WARNING: shift/reduce conflict for punto in state 530 resolved as shift
WARNING: shift/reduce conflict for punto in state 547 resolved as shift
WARNING: shift/reduce conflict for menos in state 561 resolved as shift
WARNING: shift/reduce conflict for menos in state 583 resolved as shift
WARNING: shift/reduce conflict for menos in state 584 resolved as shift
WARNING: shift/reduce conflict for menos in state 600 resolved as shift
